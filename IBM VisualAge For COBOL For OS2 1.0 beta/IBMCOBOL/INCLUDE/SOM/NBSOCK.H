
/*
 * This file was generated by the SOM Compiler.
 * FileName: NBSOCK.h.
 * Generated using:
 *     SOM Precompiler somipc: 2.29.1.7
 *     SOM Emitter emith: 2.42
 */

/*
 * 
 *    COMPONENT_NAME: somu
 * 
 *    ORIGINS: 27
 * 
 * 
 *    10H9767, 10H9769  (C) COPYRIGHT International Business Machines Corp. 1992,1994
 *    All Rights Reserved
 *    Licensed Materials - Property of IBM
 *    US Government Users Restricted Rights - Use, duplication or
 *    disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
 * 
 */


#ifndef SOM_NBSockets_h
#define SOM_NBSockets_h


#include <som.h>

/*
 * -- This emitter treats Method Tokens as Thunks by default.
 * -- Use the sc modifier "nothunks" to change this default
 */
#undef somresolve_
#define somresolve_(obj,mToken) ((somMethodProc*)((void)obj, mToken))

/*
 * Define the class name as an object type
 */
#ifndef NBSockets
#define NBSockets SOMObject
#endif
#include <somssock.h>

/*
 * Start of user-defined types:
 */
#ifndef SOMClass
    #define SOMClass SOMObject
#endif /* SOMClass */

/*
 * End of user-defined types.
 */

#define NBSockets_MajorVersion 2
#define NBSockets_MinorVersion 1

/*
 * External name shortening if required
 */
#ifdef SOM_USE_SHORT_EXTERNAL_NAMES
#define NBSocketsNewClass c
#pragma linkage(c, system)
#define NBSocketsClassData d
#define NBSocketsCClassData x
#endif /* SOM_USE_SHORT_EXTERNAL_NAMES */

/*
 * Include the meta class file
 */
#include <snglicls.h>
/*--------------Migration------------*/
#define NBSockets_classObj NBSocketsClassData.classObject
#define _NBSockets NBSockets_classObj

/*
 * Declare the class creation procedure
 */
SOMEXTERN SOMClass * SOMLINK NBSocketsNewClass(integer4 somtmajorVersion,
		integer4 somtminorVersion);
#pragma linkage(NBSocketsNewClass, system)

/*
 * Declare the class data structure
 */
SOMEXTERN struct NBSocketsClassDataStructure {
	SOMClass *classObject;
} SOMDLINK NBSocketsClassData;

/*
 * Declare the C specific class data structure
 */
SOMEXTERN struct NBSocketsCClassDataStructure {
	somMethodTabs parentMtab;
	somDToken instanceDataToken;
} SOMDLINK NBSocketsCClassData;

/*
 * New and Renew macros for NBSockets
 */
#define NBSocketsNew() \
   (_somNew(_NBSockets ? _NBSockets : NBSocketsNewClass(NBSockets_MajorVersion, NBSockets_MinorVersion)))
#define NBSocketsRenew(buf) \
   (_somRenew(_NBSockets ? _NBSockets : NBSocketsNewClass(NBSockets_MajorVersion, NBSockets_MinorVersion), buf))

/*
 * Override method: somsAccept
 */
#define NBSockets_somsAccept(somSelf,ev,s,name,namelen) \
	Sockets_somsAccept(somSelf,ev,s,name,namelen)

/*
 * Override method: somsBind
 */
#define NBSockets_somsBind(somSelf,ev,s,name,namelen) \
	Sockets_somsBind(somSelf,ev,s,name,namelen)

/*
 * Override method: somsConnect
 */
#define NBSockets_somsConnect(somSelf,ev,s,name,namelen) \
	Sockets_somsConnect(somSelf,ev,s,name,namelen)

/*
 * Override method: somsGethostbyaddr
 */
#define NBSockets_somsGethostbyaddr(somSelf,ev,addr,addrlen,domain) \
	Sockets_somsGethostbyaddr(somSelf,ev,addr,addrlen,domain)

/*
 * Override method: somsGethostbyname
 */
#define NBSockets_somsGethostbyname(somSelf,ev,name) \
	Sockets_somsGethostbyname(somSelf,ev,name)

/*
 * Override method: somsGethostent
 */
#define NBSockets_somsGethostent(somSelf,ev) \
	Sockets_somsGethostent(somSelf,ev)

/*
 * Override method: somsGethostid
 */
#define NBSockets_somsGethostid(somSelf,ev) \
	Sockets_somsGethostid(somSelf,ev)

/*
 * Override method: somsGethostname
 */
#define NBSockets_somsGethostname(somSelf,ev,name,namelength) \
	Sockets_somsGethostname(somSelf,ev,name,namelength)

/*
 * Override method: somsGetpeername
 */
#define NBSockets_somsGetpeername(somSelf,ev,s,name,namelen) \
	Sockets_somsGetpeername(somSelf,ev,s,name,namelen)

/*
 * Override method: somsGetsockname
 */
#define NBSockets_somsGetsockname(somSelf,ev,s,name,namelen) \
	Sockets_somsGetsockname(somSelf,ev,s,name,namelen)

/*
 * Override method: somsGetsockopt
 */
#define NBSockets_somsGetsockopt(somSelf,ev,s,level,optname,optval,option) \
	Sockets_somsGetsockopt(somSelf,ev,s,level,optname,optval,option)

/*
 * Override method: somsGetservbyname
 */
#define NBSockets_somsGetservbyname(somSelf,ev,name,protocol) \
	Sockets_somsGetservbyname(somSelf,ev,name,protocol)

/*
 * Override method: somsHtonl
 */
#define NBSockets_somsHtonl(somSelf,ev,a) \
	Sockets_somsHtonl(somSelf,ev,a)

/*
 * Override method: somsHtons
 */
#define NBSockets_somsHtons(somSelf,ev,a) \
	Sockets_somsHtons(somSelf,ev,a)

/*
 * Override method: somsIoctl
 */
#define NBSockets_somsIoctl(somSelf,ev,s,cmd,data,length) \
	Sockets_somsIoctl(somSelf,ev,s,cmd,data,length)

/*
 * Override method: somsInet_addr
 */
#define NBSockets_somsInet_addr(somSelf,ev,cp) \
	Sockets_somsInet_addr(somSelf,ev,cp)

/*
 * Override method: somsInet_lnaof
 */
#define NBSockets_somsInet_lnaof(somSelf,ev,addr) \
	Sockets_somsInet_lnaof(somSelf,ev,addr)

/*
 * Override method: somsInet_makeaddr
 */
#define NBSockets_somsInet_makeaddr(somSelf,ev,net,lna) \
	Sockets_somsInet_makeaddr(somSelf,ev,net,lna)

/*
 * Override method: somsInet_netof
 */
#define NBSockets_somsInet_netof(somSelf,ev,addr) \
	Sockets_somsInet_netof(somSelf,ev,addr)

/*
 * Override method: somsInet_network
 */
#define NBSockets_somsInet_network(somSelf,ev,cp) \
	Sockets_somsInet_network(somSelf,ev,cp)

/*
 * Override method: somsInet_ntoa
 */
#define NBSockets_somsInet_ntoa(somSelf,ev,addr) \
	Sockets_somsInet_ntoa(somSelf,ev,addr)

/*
 * Override method: somsListen
 */
#define NBSockets_somsListen(somSelf,ev,s,backlog) \
	Sockets_somsListen(somSelf,ev,s,backlog)

/*
 * Override method: somsNtohl
 */
#define NBSockets_somsNtohl(somSelf,ev,a) \
	Sockets_somsNtohl(somSelf,ev,a)

/*
 * Override method: somsNtohs
 */
#define NBSockets_somsNtohs(somSelf,ev,a) \
	Sockets_somsNtohs(somSelf,ev,a)

/*
 * Override method: somsReadv
 */
#define NBSockets_somsReadv(somSelf,ev,s,iov,iovcnt) \
	Sockets_somsReadv(somSelf,ev,s,iov,iovcnt)

/*
 * Override method: somsRecv
 */
#define NBSockets_somsRecv(somSelf,ev,s,buf,len,flags) \
	Sockets_somsRecv(somSelf,ev,s,buf,len,flags)

/*
 * Override method: somsRecvfrom
 */
#define NBSockets_somsRecvfrom(somSelf,ev,s,buf,len,flags,name,namelen) \
	Sockets_somsRecvfrom(somSelf,ev,s,buf,len,flags,name,namelen)

/*
 * Override method: somsRecvmsg
 */
#define NBSockets_somsRecvmsg(somSelf,ev,s,msg,flags) \
	Sockets_somsRecvmsg(somSelf,ev,s,msg,flags)

/*
 * Override method: somsSelect
 */
#define NBSockets_somsSelect(somSelf,ev,nfds,readfds,writefds,exceptfds,timeout) \
	Sockets_somsSelect(somSelf,ev,nfds,readfds,writefds,exceptfds,timeout)

/*
 * Override method: somsSend
 */
#define NBSockets_somsSend(somSelf,ev,s,msg,len,flags) \
	Sockets_somsSend(somSelf,ev,s,msg,len,flags)

/*
 * Override method: somsSendmsg
 */
#define NBSockets_somsSendmsg(somSelf,ev,s,msg,flags) \
	Sockets_somsSendmsg(somSelf,ev,s,msg,flags)

/*
 * Override method: somsSendto
 */
#define NBSockets_somsSendto(somSelf,ev,s,msg,len,flags,to,tolen) \
	Sockets_somsSendto(somSelf,ev,s,msg,len,flags,to,tolen)

/*
 * Override method: somsSetsockopt
 */
#define NBSockets_somsSetsockopt(somSelf,ev,s,level,optname,optval,optlen) \
	Sockets_somsSetsockopt(somSelf,ev,s,level,optname,optval,optlen)

/*
 * Override method: somsShutdown
 */
#define NBSockets_somsShutdown(somSelf,ev,s,how) \
	Sockets_somsShutdown(somSelf,ev,s,how)

/*
 * Override method: somsSocket
 */
#define NBSockets_somsSocket(somSelf,ev,domain,type,protocol) \
	Sockets_somsSocket(somSelf,ev,domain,type,protocol)

/*
 * Override method: somsSoclose
 */
#define NBSockets_somsSoclose(somSelf,ev,s) \
	Sockets_somsSoclose(somSelf,ev,s)

/*
 * Override method: somsWritev
 */
#define NBSockets_somsWritev(somSelf,ev,s,iov,iovcnt) \
	Sockets_somsWritev(somSelf,ev,s,iov,iovcnt)

/*
 * Override method: somInit
 */
#define NBSockets_somInit(somSelf) \
	SOMObject_somInit(somSelf)

/*
 * Override method: _set_serrno
 */
#define NBSockets__set_serrno(somSelf,ev,serrno) \
	Sockets__set_serrno(somSelf,ev,serrno)

/*
 * Override method: _get_serrno
 */
#define NBSockets__get_serrno(somSelf,ev) \
	Sockets__get_serrno(somSelf,ev)
#ifndef SOM_DONT_USE_INHERITED_MACROS
#define NBSockets_somDefaultInit SOMObject_somDefaultInit
#define NBSockets_somDestruct SOMObject_somDestruct
#define NBSockets_somDefaultCopyInit SOMObject_somDefaultCopyInit
#define NBSockets_somDefaultAssign SOMObject_somDefaultAssign
#define NBSockets_somDefaultConstCopyInit SOMObject_somDefaultConstCopyInit
#define NBSockets_somDefaultVCopyInit SOMObject_somDefaultVCopyInit
#define NBSockets_somDefaultConstVCopyInit SOMObject_somDefaultConstVCopyInit
#define NBSockets_somDefaultConstAssign SOMObject_somDefaultConstAssign
#define NBSockets_somDefaultVAssign SOMObject_somDefaultVAssign
#define NBSockets_somDefaultConstVAssign SOMObject_somDefaultConstVAssign
#define NBSockets_somFree SOMObject_somFree
#define NBSockets_somUninit SOMObject_somUninit
#define NBSockets_somGetClass SOMObject_somGetClass
#define NBSockets_somGetClassName SOMObject_somGetClassName
#define NBSockets_somGetSize SOMObject_somGetSize
#define NBSockets_somIsA SOMObject_somIsA
#define NBSockets_somIsInstanceOf SOMObject_somIsInstanceOf
#define NBSockets_somRespondsTo SOMObject_somRespondsTo
#define NBSockets_somDispatch SOMObject_somDispatch
#define NBSockets_somClassDispatch SOMObject_somClassDispatch
#define NBSockets_somCastObj SOMObject_somCastObj
#define NBSockets_somResetObj SOMObject_somResetObj
#define NBSockets_somDispatchV SOMObject_somDispatchV
#define NBSockets_somDispatchL SOMObject_somDispatchL
#define NBSockets_somDispatchA SOMObject_somDispatchA
#define NBSockets_somDispatchD SOMObject_somDispatchD
#define NBSockets_somPrintSelf SOMObject_somPrintSelf
#define NBSockets_somDumpSelf SOMObject_somDumpSelf
#define NBSockets_somDumpSelfInt SOMObject_somDumpSelfInt
#endif /* SOM_DONT_USE_INHERITED_MACROS */

#endif       /* SOM_NBSockets_h */
