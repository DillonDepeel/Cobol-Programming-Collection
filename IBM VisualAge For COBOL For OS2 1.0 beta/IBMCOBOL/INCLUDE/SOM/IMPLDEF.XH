
/*
 * This file was generated by the SOM Compiler.
 * FileName: c:\somtk\include\IMPLDEF.xh.
 * Generated using:
 *     SOM Precompiler somipc: 2.29.1.7
 *     SOM Emitter emitxh: 2.42
 */

/*
 * 
 *    COMPONENT_NAME: somd
 * 
 *    ORIGINS: 27
 * 
 * 
 *    10H9767, 10H9769  (C) COPYRIGHT International Business Machines Corp. 1992,1994
 *    All Rights Reserved
 *    Licensed Materials - Property of IBM
 *    US Government Users Restricted Rights - Use, duplication or
 *    disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
 * 
 *   CLASS SPECIFICATION FOR IMPLEMENTATION DEFINITION
 */


#ifndef SOM_ImplementationDef_xh
#define SOM_ImplementationDef_xh

class ImplementationDef;

#define ImplementationDef_MajorVersion 2
#define ImplementationDef_MinorVersion 1

/* C++ SOM defs */
#include <somcls.xh>
#include <somcm.xh>

/* C++ parent defs */
#ifndef SOM_SOMObject_xh
#include <somobj.xh>
#endif

#ifndef ImplementationDef_API
#define ImplementationDef_API
/*
 * -- The Class API
 */

/*
 * Start of user-defined types:
 */
class SOMClass;
class SOMObject;
class Container;

/*
 * End of user-defined types.
 */

/*
 * Passthru lines: File: "C.xh", "after"
 */

/* flags */
#define IMPLDEF_MULTI_THREAD  0x00000001
#define IMPLDEF_POOL_THREAD   0x00000002
#define IMPLDEF_DISABLE_SVR   0x00000004
#define IMPLDEF_IMPLID_SET    0x00000008
#define IMPLDEF_NONSTOPPABLE  0x00000010
#define IMPLDEF_SECUREMODE    0x00000020

class ImplementationDef;
SOMEXTERN ImplementationDef* SOMDLINK SOMD_ImplDefObject;


/* A procedure to create the ImplementationDef Class */
SOMEXTERN SOMClass * SOMLINK ImplementationDefNewClass(
		integer4 majorVersion,
		integer4 minorVersion);

/* The API to the ImplementationDef class object, and the methods it introduces. */
SOMEXTERN struct ImplementationDefClassDataStructure {
	SOMClass *classObject;
	somMToken _set_impl_id;
	somMToken _get_impl_id;
	somMToken _set_impl_alias;
	somMToken _get_impl_alias;
	somMToken _set_impl_program;
	somMToken _get_impl_program;
	somMToken _set_impl_flags;
	somMToken _get_impl_flags;
	somMToken _set_impl_server_class;
	somMToken _get_impl_server_class;
	somMToken _set_impl_socket_class;
	somMToken _get_impl_socket_class;
	somMToken _set_impl_refdata_file;
	somMToken _get_impl_refdata_file;
	somMToken _set_impl_refdata_bkup;
	somMToken _get_impl_refdata_bkup;
	somMToken _set_impl_hostname;
	somMToken _get_impl_hostname;
	somMToken _set_impl_def_struct;
	somMToken _get_impl_def_struct;
	somMToken get_impl_winserver_handle;
} SOMDLINK ImplementationDefClassData;
#define _ImplementationDef ImplementationDefClassData.classObject

/* The API to parentMtabs for ImplementationDef, and the instance data it introduces. */
SOMEXTERN struct ImplementationDefCClassDataStructure {
	somMethodTabs parentMtab;
	somDToken              instanceDataToken;
} SOMDLINK ImplementationDefCClassData;

/*
 * -- Typedefs for ImplementationDef Method Procedures
 */
SOMEXTERN {
typedef string   SOMLINK somTP_ImplementationDef__get_impl_id(ImplementationDef *somSelf, Environment *ev);
typedef somTP_ImplementationDef__get_impl_id *somTD_ImplementationDef__get_impl_id;
typedef void   SOMLINK somTP_ImplementationDef__set_impl_id(ImplementationDef *somSelf, Environment *ev,
		string impl_id);
typedef somTP_ImplementationDef__set_impl_id *somTD_ImplementationDef__set_impl_id;
typedef string   SOMLINK somTP_ImplementationDef__get_impl_alias(ImplementationDef *somSelf, Environment *ev);
typedef somTP_ImplementationDef__get_impl_alias *somTD_ImplementationDef__get_impl_alias;
typedef void   SOMLINK somTP_ImplementationDef__set_impl_alias(ImplementationDef *somSelf, Environment *ev,
		string impl_alias);
typedef somTP_ImplementationDef__set_impl_alias *somTD_ImplementationDef__set_impl_alias;
typedef string   SOMLINK somTP_ImplementationDef__get_impl_program(ImplementationDef *somSelf, Environment *ev);
typedef somTP_ImplementationDef__get_impl_program *somTD_ImplementationDef__get_impl_program;
typedef void   SOMLINK somTP_ImplementationDef__set_impl_program(ImplementationDef *somSelf, Environment *ev,
		string impl_program);
typedef somTP_ImplementationDef__set_impl_program *somTD_ImplementationDef__set_impl_program;
typedef Flags   SOMLINK somTP_ImplementationDef__get_impl_flags(ImplementationDef *somSelf, Environment *ev);
typedef somTP_ImplementationDef__get_impl_flags *somTD_ImplementationDef__get_impl_flags;
typedef void   SOMLINK somTP_ImplementationDef__set_impl_flags(ImplementationDef *somSelf, Environment *ev,
		Flags impl_flags);
typedef somTP_ImplementationDef__set_impl_flags *somTD_ImplementationDef__set_impl_flags;
typedef string   SOMLINK somTP_ImplementationDef__get_impl_server_class(ImplementationDef *somSelf, Environment *ev);
typedef somTP_ImplementationDef__get_impl_server_class *somTD_ImplementationDef__get_impl_server_class;
typedef void   SOMLINK somTP_ImplementationDef__set_impl_server_class(ImplementationDef *somSelf, Environment *ev,
		string impl_server_class);
typedef somTP_ImplementationDef__set_impl_server_class *somTD_ImplementationDef__set_impl_server_class;
typedef string   SOMLINK somTP_ImplementationDef__get_impl_refdata_file(ImplementationDef *somSelf, Environment *ev);
typedef somTP_ImplementationDef__get_impl_refdata_file *somTD_ImplementationDef__get_impl_refdata_file;
typedef void   SOMLINK somTP_ImplementationDef__set_impl_refdata_file(ImplementationDef *somSelf, Environment *ev,
		string impl_refdata_file);
typedef somTP_ImplementationDef__set_impl_refdata_file *somTD_ImplementationDef__set_impl_refdata_file;
typedef string   SOMLINK somTP_ImplementationDef__get_impl_refdata_bkup(ImplementationDef *somSelf, Environment *ev);
typedef somTP_ImplementationDef__get_impl_refdata_bkup *somTD_ImplementationDef__get_impl_refdata_bkup;
typedef void   SOMLINK somTP_ImplementationDef__set_impl_refdata_bkup(ImplementationDef *somSelf, Environment *ev,
		string impl_refdata_bkup);
typedef somTP_ImplementationDef__set_impl_refdata_bkup *somTD_ImplementationDef__set_impl_refdata_bkup;
typedef string   SOMLINK somTP_ImplementationDef__get_impl_hostname(ImplementationDef *somSelf, Environment *ev);
typedef somTP_ImplementationDef__get_impl_hostname *somTD_ImplementationDef__get_impl_hostname;
typedef void   SOMLINK somTP_ImplementationDef__set_impl_hostname(ImplementationDef *somSelf, Environment *ev,
		string impl_hostname);
typedef somTP_ImplementationDef__set_impl_hostname *somTD_ImplementationDef__set_impl_hostname;
}

#endif /* ImplementationDef_API */


/*
 * -- This emitter treats Method Tokens as Thunks by default.
 * -- Use the sc modifier "nothunks" to change this default
 */
#undef somresolve_
#define somresolve_(obj,mToken) ((somMethodProc*)((void)obj, mToken))

/*
 * -- The C++ Wrapper Class for ImplementationDef
 */
class ImplementationDef : public SOMObject
{
public:

// ImplementationDef::new creates the class object if necessary, and then uses somNewNoInit
// to allocate memory and create the object. Initialization is in ctors.
void *operator new(size_t)
{
   if (!_ImplementationDef) ImplementationDefNewClass(ImplementationDef_MajorVersion,ImplementationDef_MinorVersion);
   return (void*)
      SOM_Resolve(_ImplementationDef,SOMClass,somNewNoInit)
         ((SOMClass *)((void*)_ImplementationDef));
}

// ImplementationDef::delete uses somDestruct.
void operator delete(void * obj)
{
   if (obj && *(void**)obj) {
      SOM_Resolve(obj,SOMObject,somDestruct)
         ((SOMObject*)obj, 1, 0);
   }
}

ImplementationDef()
{
   if (*(void**)this != 
       ((somParentMtabStructPtr)
        (ImplementationDefCClassData.parentMtab))->mtab)
      return;
   ((SOMObject*)((void*)this))->somDefaultInit(0);
}

ImplementationDef(ImplementationDef* fromObj)
{
   if (*(void**)this != 
       ((somParentMtabStructPtr)
        (ImplementationDefCClassData.parentMtab))->mtab)
      return;
   ((SOMObject*)((void*)this))->somDefaultCopyInit(0,((SOMObject*)((void*)fromObj)));
}

ImplementationDef(const ImplementationDef* fromObj)
{
   if (*(void**)this != 
       ((somParentMtabStructPtr)
        (ImplementationDefCClassData.parentMtab))->mtab)
      return;
   ((SOMObject*)((void*)this))->somDefaultConstCopyInit(0,((SOMObject*)((void*)fromObj)));
}


/* method: _get_impl_id */
string   _get_impl_id(Environment *ev)
{
   return SOM_ResolveD(this,ImplementationDef,ImplementationDef,_get_impl_id)
	(this, ev);
}


/* method: _set_impl_id */
void   _set_impl_id(Environment *ev,
		string impl_id)
{
   SOM_ResolveD(this,ImplementationDef,ImplementationDef,_set_impl_id)
	(this, ev,impl_id);
}


/* method: _get_impl_alias */
string   _get_impl_alias(Environment *ev)
{
   return SOM_ResolveD(this,ImplementationDef,ImplementationDef,_get_impl_alias)
	(this, ev);
}


/* method: _set_impl_alias */
void   _set_impl_alias(Environment *ev,
		string impl_alias)
{
   SOM_ResolveD(this,ImplementationDef,ImplementationDef,_set_impl_alias)
	(this, ev,impl_alias);
}


/* method: _get_impl_program */
string   _get_impl_program(Environment *ev)
{
   return SOM_ResolveD(this,ImplementationDef,ImplementationDef,_get_impl_program)
	(this, ev);
}


/* method: _set_impl_program */
void   _set_impl_program(Environment *ev,
		string impl_program)
{
   SOM_ResolveD(this,ImplementationDef,ImplementationDef,_set_impl_program)
	(this, ev,impl_program);
}


/* method: _get_impl_flags */
Flags   _get_impl_flags(Environment *ev)
{
   return SOM_ResolveD(this,ImplementationDef,ImplementationDef,_get_impl_flags)
	(this, ev);
}


/* method: _set_impl_flags */
void   _set_impl_flags(Environment *ev,
		Flags impl_flags)
{
   SOM_ResolveD(this,ImplementationDef,ImplementationDef,_set_impl_flags)
	(this, ev,impl_flags);
}


/* method: _get_impl_server_class */
string   _get_impl_server_class(Environment *ev)
{
   return SOM_ResolveD(this,ImplementationDef,ImplementationDef,_get_impl_server_class)
	(this, ev);
}


/* method: _set_impl_server_class */
void   _set_impl_server_class(Environment *ev,
		string impl_server_class)
{
   SOM_ResolveD(this,ImplementationDef,ImplementationDef,_set_impl_server_class)
	(this, ev,impl_server_class);
}


/* method: _get_impl_refdata_file */
string   _get_impl_refdata_file(Environment *ev)
{
   return SOM_ResolveD(this,ImplementationDef,ImplementationDef,_get_impl_refdata_file)
	(this, ev);
}


/* method: _set_impl_refdata_file */
void   _set_impl_refdata_file(Environment *ev,
		string impl_refdata_file)
{
   SOM_ResolveD(this,ImplementationDef,ImplementationDef,_set_impl_refdata_file)
	(this, ev,impl_refdata_file);
}


/* method: _get_impl_refdata_bkup */
string   _get_impl_refdata_bkup(Environment *ev)
{
   return SOM_ResolveD(this,ImplementationDef,ImplementationDef,_get_impl_refdata_bkup)
	(this, ev);
}


/* method: _set_impl_refdata_bkup */
void   _set_impl_refdata_bkup(Environment *ev,
		string impl_refdata_bkup)
{
   SOM_ResolveD(this,ImplementationDef,ImplementationDef,_set_impl_refdata_bkup)
	(this, ev,impl_refdata_bkup);
}


/* method: _get_impl_hostname */
string   _get_impl_hostname(Environment *ev)
{
   return SOM_ResolveD(this,ImplementationDef,ImplementationDef,_get_impl_hostname)
	(this, ev);
}


/* method: _set_impl_hostname */
void   _set_impl_hostname(Environment *ev,
		string impl_hostname)
{
   SOM_ResolveD(this,ImplementationDef,ImplementationDef,_set_impl_hostname)
	(this, ev,impl_hostname);
}



};   /* ImplementationDef */



#endif       /* SOM_ImplementationDef_xh */
