
/*
 * This file was generated by the SOM Compiler.
 * FileName: moduledf.h.
 * Generated using:
 *     SOM Precompiler somipc: 2.29.1.7
 *     SOM Emitter emith: 2.42
 */

/*
 * 
 *    COMPONENT_NAME: somi
 * 
 *    ORIGINS: 27
 * 
 * 
 *    10H9767, 10H9769  (C) COPYRIGHT International Business Machines Corp. 1992,1994
 *    All Rights Reserved
 *    Licensed Materials - Property of IBM
 *    US Government Users Restricted Rights - Use, duplication or
 *    disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
 * 
 *   ModuleDef: CORBA Interface for module definitions
 *   See CORBA 7.5.3, p.133
 */


#ifndef SOM_ModuleDef_h
#define SOM_ModuleDef_h


/*
 * Passthru lines: File: "C.h", "before"
 */

    #include <somtcnst.h>
    #include <somir.h>
    #include <containd.h>


#include <som.h>

/*
 * -- This emitter treats Method Tokens as Thunks by default.
 * -- Use the sc modifier "nothunks" to change this default
 */
#undef somresolve_
#define somresolve_(obj,mToken) ((somMethodProc*)((void)obj, mToken))

/*
 * Define the class name as an object type
 */
#ifndef ModuleDef
#define ModuleDef SOMObject
#endif
#include <containd.h>
#include <containr.h>

/*
 * Start of user-defined types:
 */
#ifndef SOMClass
    #define SOMClass SOMObject
#endif /* SOMClass */
#ifndef Container
    #define Container SOMObject
#endif /* Container */
typedef
struct ModuleDescription {
Identifier name;
RepositoryId id;
RepositoryId defined_in;
} ModuleDescription;

/*
 *  The inherited describe method returns an instance of this
 *  (ModuleDescription) structure in the "value" member of the
 *  Description structure defined in the Contained interface.
 *  The inherited describe_contents method in the Container
 *  interface returns a sequence of these Description structures
 *  each carrying a reference to a ModuleDescription structure
 *  in its "value" member.
 */

/*
 * End of user-defined types.
 */

#define ModuleDef_MajorVersion 2
#define ModuleDef_MinorVersion 1

/*
 * External name shortening if required
 */
#ifdef SOM_USE_SHORT_EXTERNAL_NAMES
#define ModuleDefNewClass c
#pragma linkage(c, system)
#define ModuleDefClassData d
#define ModuleDefCClassData x
#endif /* SOM_USE_SHORT_EXTERNAL_NAMES */
/*--------------Migration------------*/
#define ModuleDef_classObj ModuleDefClassData.classObject
#define _ModuleDef ModuleDef_classObj

/*
 * Declare the class creation procedure
 */
SOMEXTERN SOMClass * SOMLINK ModuleDefNewClass(integer4 somtmajorVersion,
		integer4 somtminorVersion);
#pragma linkage(ModuleDefNewClass, system)

/*
 * Declare the class data structure
 */
SOMEXTERN struct ModuleDefClassDataStructure {
	SOMClass *classObject;
} SOMDLINK ModuleDefClassData;

/*
 * Declare the C specific class data structure
 */
SOMEXTERN struct ModuleDefCClassDataStructure {
	somMethodTabs parentMtab;
	somDToken instanceDataToken;
} SOMDLINK ModuleDefCClassData;

/*
 * New and Renew macros for ModuleDef
 */
#define ModuleDefNew() \
   (_somNew(_ModuleDef ? _ModuleDef : ModuleDefNewClass(ModuleDef_MajorVersion, ModuleDef_MinorVersion)))
#define ModuleDefRenew(buf) \
   (_somRenew(_ModuleDef ? _ModuleDef : ModuleDefNewClass(ModuleDef_MajorVersion, ModuleDef_MinorVersion), buf))

/*
 * Override method: within
 */
#define ModuleDef_within(somSelf,ev) \
	Contained_within(somSelf,ev)

/*
 * Override method: describe
 */
#define ModuleDef_describe(somSelf,ev) \
	Contained_describe(somSelf,ev)

/*
 * Override method: somInit
 */
#define ModuleDef_somInit(somSelf) \
	SOMObject_somInit(somSelf)

/*
 * Override method: somUninit
 */
#define ModuleDef_somUninit(somSelf) \
	SOMObject_somUninit(somSelf)

/*
 * Override method: somDumpSelf
 */
#define ModuleDef_somDumpSelf(somSelf,level) \
	SOMObject_somDumpSelf(somSelf,level)

/*
 * Override method: somDumpSelfInt
 */
#define ModuleDef_somDumpSelfInt(somSelf,level) \
	SOMObject_somDumpSelfInt(somSelf,level)
#ifndef SOM_DONT_USE_INHERITED_MACROS
#define ModuleDef__get_name Contained__get_name
#define ModuleDef__set_name Contained__set_name
#define ModuleDef__get_id Contained__get_id
#define ModuleDef__set_id Contained__set_id
#define ModuleDef__get_defined_in Contained__get_defined_in
#define ModuleDef__set_defined_in Contained__set_defined_in
#define ModuleDef__get_somModifiers Contained__get_somModifiers
#define ModuleDef__set_somModifiers Contained__set_somModifiers
#define ModuleDef_somDefaultInit SOMObject_somDefaultInit
#define ModuleDef_somDestruct SOMObject_somDestruct
#define ModuleDef_somDefaultCopyInit SOMObject_somDefaultCopyInit
#define ModuleDef_somDefaultAssign SOMObject_somDefaultAssign
#define ModuleDef_somDefaultConstCopyInit SOMObject_somDefaultConstCopyInit
#define ModuleDef_somDefaultVCopyInit SOMObject_somDefaultVCopyInit
#define ModuleDef_somDefaultConstVCopyInit SOMObject_somDefaultConstVCopyInit
#define ModuleDef_somDefaultConstAssign SOMObject_somDefaultConstAssign
#define ModuleDef_somDefaultVAssign SOMObject_somDefaultVAssign
#define ModuleDef_somDefaultConstVAssign SOMObject_somDefaultConstVAssign
#define ModuleDef_somFree SOMObject_somFree
#define ModuleDef_somGetClass SOMObject_somGetClass
#define ModuleDef_somGetClassName SOMObject_somGetClassName
#define ModuleDef_somGetSize SOMObject_somGetSize
#define ModuleDef_somIsA SOMObject_somIsA
#define ModuleDef_somIsInstanceOf SOMObject_somIsInstanceOf
#define ModuleDef_somRespondsTo SOMObject_somRespondsTo
#define ModuleDef_somDispatch SOMObject_somDispatch
#define ModuleDef_somClassDispatch SOMObject_somClassDispatch
#define ModuleDef_somCastObj SOMObject_somCastObj
#define ModuleDef_somResetObj SOMObject_somResetObj
#define ModuleDef_somDispatchV SOMObject_somDispatchV
#define ModuleDef_somDispatchL SOMObject_somDispatchL
#define ModuleDef_somDispatchA SOMObject_somDispatchA
#define ModuleDef_somDispatchD SOMObject_somDispatchD
#define ModuleDef_somPrintSelf SOMObject_somPrintSelf
#define ModuleDef_contents Container_contents
#define ModuleDef_lookup_name Container_lookup_name
#define ModuleDef_describe_contents Container_describe_contents
#define ModuleDef_somDefaultInit SOMObject_somDefaultInit
#define ModuleDef_somDestruct SOMObject_somDestruct
#define ModuleDef_somDefaultCopyInit SOMObject_somDefaultCopyInit
#define ModuleDef_somDefaultAssign SOMObject_somDefaultAssign
#define ModuleDef_somDefaultConstCopyInit SOMObject_somDefaultConstCopyInit
#define ModuleDef_somDefaultVCopyInit SOMObject_somDefaultVCopyInit
#define ModuleDef_somDefaultConstVCopyInit SOMObject_somDefaultConstVCopyInit
#define ModuleDef_somDefaultConstAssign SOMObject_somDefaultConstAssign
#define ModuleDef_somDefaultVAssign SOMObject_somDefaultVAssign
#define ModuleDef_somDefaultConstVAssign SOMObject_somDefaultConstVAssign
#define ModuleDef_somFree SOMObject_somFree
#define ModuleDef_somGetClass SOMObject_somGetClass
#define ModuleDef_somGetClassName SOMObject_somGetClassName
#define ModuleDef_somGetSize SOMObject_somGetSize
#define ModuleDef_somIsA SOMObject_somIsA
#define ModuleDef_somIsInstanceOf SOMObject_somIsInstanceOf
#define ModuleDef_somRespondsTo SOMObject_somRespondsTo
#define ModuleDef_somDispatch SOMObject_somDispatch
#define ModuleDef_somClassDispatch SOMObject_somClassDispatch
#define ModuleDef_somCastObj SOMObject_somCastObj
#define ModuleDef_somResetObj SOMObject_somResetObj
#define ModuleDef_somDispatchV SOMObject_somDispatchV
#define ModuleDef_somDispatchL SOMObject_somDispatchL
#define ModuleDef_somDispatchA SOMObject_somDispatchA
#define ModuleDef_somDispatchD SOMObject_somDispatchD
#define ModuleDef_somPrintSelf SOMObject_somPrintSelf
#endif /* SOM_DONT_USE_INHERITED_MACROS */

#endif       /* SOM_ModuleDef_h */
