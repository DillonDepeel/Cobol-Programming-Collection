
/*
 * This file was generated by the SOM Compiler.
 * FileName: c:\somtk\include\SOMSSOCK.xh.
 * Generated using:
 *     SOM Precompiler somipc: 2.29.1.7
 *     SOM Emitter emitxh: 2.42
 */

/*
 * 
 *    COMPONENT_NAME: somu
 * 
 *    ORIGINS: 27
 * 
 * 
 *    10H9767, 10H9769  (C) COPYRIGHT International Business Machines Corp. 1992,1994
 *    All Rights Reserved
 *    Licensed Materials - Property of IBM
 *    US Government Users Restricted Rights - Use, duplication or
 *    disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
 * 
 */


#ifndef SOM_Sockets_xh
#define SOM_Sockets_xh

class Sockets;

#define Sockets_MajorVersion 2
#define Sockets_MinorVersion 1

/* C++ SOM defs */
#include <somcls.xh>
#include <somcm.xh>

/* C++ parent defs */
#ifndef SOM_SOMObject_xh
#include <somobj.xh>
#endif

/*
 * C++ metaclass def
 */
#include <snglicls.xh>

#ifndef Sockets_API
#define Sockets_API
/*
 * -- The Class API
 */

/*
 * Start of user-defined types:
 */
class SOMClass;
class SOMObject;

/*
 * End of user-defined types.
 */

/* A procedure to create the Sockets Class */
class SOMMSingleInstance;
SOMEXTERN SOMMSingleInstance * SOMLINK SocketsNewClass(
		integer4 majorVersion,
		integer4 minorVersion);

/* The API to the Sockets class object, and the methods it introduces. */
SOMEXTERN struct SocketsClassDataStructure {
	SOMMSingleInstance *classObject;
	somMToken somsAccept;
	somMToken somsBind;
	somMToken somsConnect;
	somMToken somsGethostbyaddr;
	somMToken somsGethostbyname;
	somMToken somsGethostent;
	somMToken somsGethostid;
	somMToken somsGethostname;
	somMToken somsGetpeername;
	somMToken somsGetsockname;
	somMToken somsGetsockopt;
	somMToken somsHtonl;
	somMToken somsHtons;
	somMToken somsIoctl;
	somMToken somsInet_addr;
	somMToken somsInet_lnaof;
	somMToken somsInet_makeaddr;
	somMToken somsInet_netof;
	somMToken somsInet_network;
	somMToken somsInet_ntoa;
	somMToken somsListen;
	somMToken somsNtohl;
	somMToken somsNtohs;
	somMToken somsReadv;
	somMToken somsRecv;
	somMToken somsRecvfrom;
	somMToken somsRecvmsg;
	somMToken somsSelect;
	somMToken somsSend;
	somMToken somsSendmsg;
	somMToken somsSendto;
	somMToken somsSetsockopt;
	somMToken somsShutdown;
	somMToken somsSocket;
	somMToken somsSoclose;
	somMToken somsWritev;
	somMToken _set_serrno;
	somMToken _get_serrno;
	somMToken somsGetservbyname;
} SOMDLINK SocketsClassData;
#define _Sockets SocketsClassData.classObject

/* The API to parentMtabs for Sockets, and the instance data it introduces. */
SOMEXTERN struct SocketsCClassDataStructure {
	somMethodTabs parentMtab;
	somDToken              instanceDataToken;
} SOMDLINK SocketsCClassData;

/*
 * -- Typedefs for Sockets Method Procedures
 */
SOMEXTERN {
typedef long   SOMLINK somTP_Sockets_somsAccept(Sockets *somSelf, Environment *ev,
		long s,
		sockaddr* name,
		long* namelen);
typedef somTP_Sockets_somsAccept *somTD_Sockets_somsAccept;
typedef long   SOMLINK somTP_Sockets_somsBind(Sockets *somSelf, Environment *ev,
		long s,
		sockaddr* name,
		long namelen);
typedef somTP_Sockets_somsBind *somTD_Sockets_somsBind;
typedef long   SOMLINK somTP_Sockets_somsConnect(Sockets *somSelf, Environment *ev,
		long s,
		sockaddr* name,
		long namelen);
typedef somTP_Sockets_somsConnect *somTD_Sockets_somsConnect;
typedef hostent*   SOMLINK somTP_Sockets_somsGethostbyaddr(Sockets *somSelf, Environment *ev,
		char* addr,
		long addrlen,
		long domain);
typedef somTP_Sockets_somsGethostbyaddr *somTD_Sockets_somsGethostbyaddr;
typedef hostent*   SOMLINK somTP_Sockets_somsGethostbyname(Sockets *somSelf, Environment *ev,
		string name);
typedef somTP_Sockets_somsGethostbyname *somTD_Sockets_somsGethostbyname;
typedef hostent*   SOMLINK somTP_Sockets_somsGethostent(Sockets *somSelf, Environment *ev);
typedef somTP_Sockets_somsGethostent *somTD_Sockets_somsGethostent;
typedef unsigned long   SOMLINK somTP_Sockets_somsGethostid(Sockets *somSelf, Environment *ev);
typedef somTP_Sockets_somsGethostid *somTD_Sockets_somsGethostid;
typedef long   SOMLINK somTP_Sockets_somsGethostname(Sockets *somSelf, Environment *ev,
		string name,
		long namelength);
typedef somTP_Sockets_somsGethostname *somTD_Sockets_somsGethostname;
typedef long   SOMLINK somTP_Sockets_somsGetpeername(Sockets *somSelf, Environment *ev,
		long s,
		sockaddr* name,
		long* namelen);
typedef somTP_Sockets_somsGetpeername *somTD_Sockets_somsGetpeername;
typedef servent*   SOMLINK somTP_Sockets_somsGetservbyname(Sockets *somSelf, Environment *ev,
		string name,
		string protocol);
typedef somTP_Sockets_somsGetservbyname *somTD_Sockets_somsGetservbyname;
typedef long   SOMLINK somTP_Sockets_somsGetsockname(Sockets *somSelf, Environment *ev,
		long s,
		sockaddr* name,
		long* namelen);
typedef somTP_Sockets_somsGetsockname *somTD_Sockets_somsGetsockname;
typedef long   SOMLINK somTP_Sockets_somsGetsockopt(Sockets *somSelf, Environment *ev,
		long s,
		long level,
		long optname,
		char* optval,
		long* option);
typedef somTP_Sockets_somsGetsockopt *somTD_Sockets_somsGetsockopt;
typedef unsigned long   SOMLINK somTP_Sockets_somsHtonl(Sockets *somSelf, Environment *ev,
		unsigned long a);
typedef somTP_Sockets_somsHtonl *somTD_Sockets_somsHtonl;
typedef unsigned short   SOMLINK somTP_Sockets_somsHtons(Sockets *somSelf, Environment *ev,
		unsigned short a);
typedef somTP_Sockets_somsHtons *somTD_Sockets_somsHtons;
typedef long   SOMLINK somTP_Sockets_somsIoctl(Sockets *somSelf, Environment *ev,
		long s,
		long cmd,
		char* data,
		long length);
typedef somTP_Sockets_somsIoctl *somTD_Sockets_somsIoctl;
typedef unsigned long   SOMLINK somTP_Sockets_somsInet_addr(Sockets *somSelf, Environment *ev,
		string cp);
typedef somTP_Sockets_somsInet_addr *somTD_Sockets_somsInet_addr;
typedef unsigned long   SOMLINK somTP_Sockets_somsInet_lnaof(Sockets *somSelf, Environment *ev,
		in_addr* addr);
typedef somTP_Sockets_somsInet_lnaof *somTD_Sockets_somsInet_lnaof;
typedef in_addr   SOMLINK somTP_Sockets_somsInet_makeaddr(Sockets *somSelf, Environment *ev,
		unsigned long net,
		unsigned long lna);
typedef somTP_Sockets_somsInet_makeaddr *somTD_Sockets_somsInet_makeaddr;
typedef unsigned long   SOMLINK somTP_Sockets_somsInet_netof(Sockets *somSelf, Environment *ev,
		in_addr* addr);
typedef somTP_Sockets_somsInet_netof *somTD_Sockets_somsInet_netof;
typedef unsigned long   SOMLINK somTP_Sockets_somsInet_network(Sockets *somSelf, Environment *ev,
		string cp);
typedef somTP_Sockets_somsInet_network *somTD_Sockets_somsInet_network;
typedef string   SOMLINK somTP_Sockets_somsInet_ntoa(Sockets *somSelf, Environment *ev,
		in_addr* addr);
typedef somTP_Sockets_somsInet_ntoa *somTD_Sockets_somsInet_ntoa;
typedef long   SOMLINK somTP_Sockets_somsListen(Sockets *somSelf, Environment *ev,
		long s,
		long backlog);
typedef somTP_Sockets_somsListen *somTD_Sockets_somsListen;
typedef unsigned long   SOMLINK somTP_Sockets_somsNtohl(Sockets *somSelf, Environment *ev,
		unsigned long a);
typedef somTP_Sockets_somsNtohl *somTD_Sockets_somsNtohl;
typedef unsigned short   SOMLINK somTP_Sockets_somsNtohs(Sockets *somSelf, Environment *ev,
		unsigned short a);
typedef somTP_Sockets_somsNtohs *somTD_Sockets_somsNtohs;
typedef long   SOMLINK somTP_Sockets_somsReadv(Sockets *somSelf, Environment *ev,
		long s,
		iovec* iov,
		long iovcnt);
typedef somTP_Sockets_somsReadv *somTD_Sockets_somsReadv;
typedef long   SOMLINK somTP_Sockets_somsRecv(Sockets *somSelf, Environment *ev,
		long s,
		char* buf,
		long len,
		long flags);
typedef somTP_Sockets_somsRecv *somTD_Sockets_somsRecv;
typedef long   SOMLINK somTP_Sockets_somsRecvfrom(Sockets *somSelf, Environment *ev,
		long s,
		char* buf,
		long len,
		long flags,
		sockaddr* name,
		long* namelen);
typedef somTP_Sockets_somsRecvfrom *somTD_Sockets_somsRecvfrom;
typedef long   SOMLINK somTP_Sockets_somsRecvmsg(Sockets *somSelf, Environment *ev,
		long s,
		msghdr* msg,
		long flags);
typedef somTP_Sockets_somsRecvmsg *somTD_Sockets_somsRecvmsg;
typedef long   SOMLINK somTP_Sockets_somsSelect(Sockets *somSelf, Environment *ev,
		long nfds,
		fd_set* readfds,
		fd_set* writefds,
		fd_set* exceptfds,
		timeval* timeout);
typedef somTP_Sockets_somsSelect *somTD_Sockets_somsSelect;
typedef long   SOMLINK somTP_Sockets_somsSend(Sockets *somSelf, Environment *ev,
		long s,
		char* msg,
		long len,
		long flags);
typedef somTP_Sockets_somsSend *somTD_Sockets_somsSend;
typedef long   SOMLINK somTP_Sockets_somsSendmsg(Sockets *somSelf, Environment *ev,
		long s,
		msghdr* msg,
		long flags);
typedef somTP_Sockets_somsSendmsg *somTD_Sockets_somsSendmsg;
typedef long   SOMLINK somTP_Sockets_somsSendto(Sockets *somSelf, Environment *ev,
		long s,
		char* msg,
		long len,
		long flags,
		sockaddr* to,
		long tolen);
typedef somTP_Sockets_somsSendto *somTD_Sockets_somsSendto;
typedef long   SOMLINK somTP_Sockets_somsSetsockopt(Sockets *somSelf, Environment *ev,
		long s,
		long level,
		long optname,
		char* optval,
		long optlen);
typedef somTP_Sockets_somsSetsockopt *somTD_Sockets_somsSetsockopt;
typedef long   SOMLINK somTP_Sockets_somsShutdown(Sockets *somSelf, Environment *ev,
		long s,
		long how);
typedef somTP_Sockets_somsShutdown *somTD_Sockets_somsShutdown;
typedef long   SOMLINK somTP_Sockets_somsSocket(Sockets *somSelf, Environment *ev,
		long domain,
		long type,
		long protocol);
typedef somTP_Sockets_somsSocket *somTD_Sockets_somsSocket;
typedef long   SOMLINK somTP_Sockets_somsSoclose(Sockets *somSelf, Environment *ev,
		long s);
typedef somTP_Sockets_somsSoclose *somTD_Sockets_somsSoclose;
typedef long   SOMLINK somTP_Sockets_somsWritev(Sockets *somSelf, Environment *ev,
		long s,
		iovec* iov,
		long iovcnt);
typedef somTP_Sockets_somsWritev *somTD_Sockets_somsWritev;
typedef long   SOMLINK somTP_Sockets__get_serrno(Sockets *somSelf, Environment *ev);
typedef somTP_Sockets__get_serrno *somTD_Sockets__get_serrno;
typedef void   SOMLINK somTP_Sockets__set_serrno(Sockets *somSelf, Environment *ev,
		long serrno);
typedef somTP_Sockets__set_serrno *somTD_Sockets__set_serrno;

/*
 * -- Typedefs for Reintroduced Wrapper Methods
 */
typedef SOMMSingleInstance*   SOMLINK somTP_Sockets_somGetClass(Sockets *somSelf);
typedef somTP_Sockets_somGetClass *somTD_Sockets_somGetClass;
}

#endif /* Sockets_API */


/*
 * -- This emitter treats Method Tokens as Thunks by default.
 * -- Use the sc modifier "nothunks" to change this default
 */
#undef somresolve_
#define somresolve_(obj,mToken) ((somMethodProc*)((void)obj, mToken))

/*
 * -- The C++ Wrapper Class for Sockets
 */
class Sockets : public SOMObject
{
public:

// Sockets::new creates the class object if necessary, and then uses somNewNoInit
// to allocate memory and create the object. Initialization is in ctors.
void *operator new(size_t)
{
   if (!_Sockets) SocketsNewClass(Sockets_MajorVersion,Sockets_MinorVersion);
   return (void*)
      SOM_Resolve(_Sockets,SOMClass,somNewNoInit)
         ((SOMClass *)((void*)_Sockets));
}

// Sockets::delete uses somDestruct.
void operator delete(void * obj)
{
   if (obj && *(void**)obj) {
      SOM_Resolve(obj,SOMObject,somDestruct)
         ((SOMObject*)obj, 1, 0);
   }
}

Sockets()
{
   if (*(void**)this != 
       ((somParentMtabStructPtr)
        (SocketsCClassData.parentMtab))->mtab)
      return;
   ((SOMObject*)((void*)this))->somDefaultInit(0);
}

Sockets(Sockets* fromObj)
{
   if (*(void**)this != 
       ((somParentMtabStructPtr)
        (SocketsCClassData.parentMtab))->mtab)
      return;
   ((SOMObject*)((void*)this))->somDefaultCopyInit(0,((SOMObject*)((void*)fromObj)));
}

Sockets(const Sockets* fromObj)
{
   if (*(void**)this != 
       ((somParentMtabStructPtr)
        (SocketsCClassData.parentMtab))->mtab)
      return;
   ((SOMObject*)((void*)this))->somDefaultConstCopyInit(0,((SOMObject*)((void*)fromObj)));
}


/* method: somsAccept */
long   somsAccept(Environment *ev,
		long s,
		sockaddr* name,
		long* namelen)
{
   return SOM_ResolveD(this,Sockets,Sockets,somsAccept)
	(this, ev,s,name,namelen);
}


/* method: somsBind */
long   somsBind(Environment *ev,
		long s,
		sockaddr* name,
		long namelen)
{
   return SOM_ResolveD(this,Sockets,Sockets,somsBind)
	(this, ev,s,name,namelen);
}


/* method: somsConnect */
long   somsConnect(Environment *ev,
		long s,
		sockaddr* name,
		long namelen)
{
   return SOM_ResolveD(this,Sockets,Sockets,somsConnect)
	(this, ev,s,name,namelen);
}


/* method: somsGethostbyaddr */
hostent*   somsGethostbyaddr(Environment *ev,
		char* addr,
		long addrlen,
		long domain)
{
   return SOM_ResolveD(this,Sockets,Sockets,somsGethostbyaddr)
	(this, ev,addr,addrlen,domain);
}


/* method: somsGethostbyname */
hostent*   somsGethostbyname(Environment *ev,
		string name)
{
   return SOM_ResolveD(this,Sockets,Sockets,somsGethostbyname)
	(this, ev,name);
}


/* method: somsGethostent */
hostent*   somsGethostent(Environment *ev)
{
   return SOM_ResolveD(this,Sockets,Sockets,somsGethostent)
	(this, ev);
}


/* method: somsGethostid */
unsigned long   somsGethostid(Environment *ev)
{
   return SOM_ResolveD(this,Sockets,Sockets,somsGethostid)
	(this, ev);
}


/* method: somsGethostname */
long   somsGethostname(Environment *ev,
		string name,
		long namelength)
{
   return SOM_ResolveD(this,Sockets,Sockets,somsGethostname)
	(this, ev,name,namelength);
}


/* method: somsGetpeername */
long   somsGetpeername(Environment *ev,
		long s,
		sockaddr* name,
		long* namelen)
{
   return SOM_ResolveD(this,Sockets,Sockets,somsGetpeername)
	(this, ev,s,name,namelen);
}


/* method: somsGetservbyname */
servent*   somsGetservbyname(Environment *ev,
		string name,
		string protocol)
{
   return SOM_ResolveD(this,Sockets,Sockets,somsGetservbyname)
	(this, ev,name,protocol);
}


/* method: somsGetsockname */
long   somsGetsockname(Environment *ev,
		long s,
		sockaddr* name,
		long* namelen)
{
   return SOM_ResolveD(this,Sockets,Sockets,somsGetsockname)
	(this, ev,s,name,namelen);
}


/* method: somsGetsockopt */
long   somsGetsockopt(Environment *ev,
		long s,
		long level,
		long optname,
		char* optval,
		long* option)
{
   return SOM_ResolveD(this,Sockets,Sockets,somsGetsockopt)
	(this, ev,s,level,optname,optval,option);
}


/* method: somsHtonl */
unsigned long   somsHtonl(Environment *ev,
		unsigned long a)
{
   return SOM_ResolveD(this,Sockets,Sockets,somsHtonl)
	(this, ev,a);
}


/* method: somsHtons */
unsigned short   somsHtons(Environment *ev,
		unsigned short a)
{
   return SOM_ResolveD(this,Sockets,Sockets,somsHtons)
	(this, ev,a);
}


/* method: somsIoctl */
long   somsIoctl(Environment *ev,
		long s,
		long cmd,
		char* data,
		long length)
{
   return SOM_ResolveD(this,Sockets,Sockets,somsIoctl)
	(this, ev,s,cmd,data,length);
}


/* method: somsInet_addr */
unsigned long   somsInet_addr(Environment *ev,
		string cp)
{
   return SOM_ResolveD(this,Sockets,Sockets,somsInet_addr)
	(this, ev,cp);
}


/* method: somsInet_lnaof */
unsigned long   somsInet_lnaof(Environment *ev,
		in_addr* addr)
{
   return SOM_ResolveD(this,Sockets,Sockets,somsInet_lnaof)
	(this, ev,addr);
}


/* method: somsInet_makeaddr */
in_addr   somsInet_makeaddr(Environment *ev,
		unsigned long net,
		unsigned long lna)
{
   return SOM_ResolveD(this,Sockets,Sockets,somsInet_makeaddr)
	(this, ev,net,lna);
}


/* method: somsInet_netof */
unsigned long   somsInet_netof(Environment *ev,
		in_addr* addr)
{
   return SOM_ResolveD(this,Sockets,Sockets,somsInet_netof)
	(this, ev,addr);
}


/* method: somsInet_network */
unsigned long   somsInet_network(Environment *ev,
		string cp)
{
   return SOM_ResolveD(this,Sockets,Sockets,somsInet_network)
	(this, ev,cp);
}


/* method: somsInet_ntoa */
string   somsInet_ntoa(Environment *ev,
		in_addr* addr)
{
   return SOM_ResolveD(this,Sockets,Sockets,somsInet_ntoa)
	(this, ev,addr);
}


/* method: somsListen */
long   somsListen(Environment *ev,
		long s,
		long backlog)
{
   return SOM_ResolveD(this,Sockets,Sockets,somsListen)
	(this, ev,s,backlog);
}


/* method: somsNtohl */
unsigned long   somsNtohl(Environment *ev,
		unsigned long a)
{
   return SOM_ResolveD(this,Sockets,Sockets,somsNtohl)
	(this, ev,a);
}


/* method: somsNtohs */
unsigned short   somsNtohs(Environment *ev,
		unsigned short a)
{
   return SOM_ResolveD(this,Sockets,Sockets,somsNtohs)
	(this, ev,a);
}


/* method: somsReadv */
long   somsReadv(Environment *ev,
		long s,
		iovec* iov,
		long iovcnt)
{
   return SOM_ResolveD(this,Sockets,Sockets,somsReadv)
	(this, ev,s,iov,iovcnt);
}


/* method: somsRecv */
long   somsRecv(Environment *ev,
		long s,
		char* buf,
		long len,
		long flags)
{
   return SOM_ResolveD(this,Sockets,Sockets,somsRecv)
	(this, ev,s,buf,len,flags);
}


/* method: somsRecvfrom */
long   somsRecvfrom(Environment *ev,
		long s,
		char* buf,
		long len,
		long flags,
		sockaddr* name,
		long* namelen)
{
   return SOM_ResolveD(this,Sockets,Sockets,somsRecvfrom)
	(this, ev,s,buf,len,flags,name,namelen);
}


/* method: somsRecvmsg */
long   somsRecvmsg(Environment *ev,
		long s,
		msghdr* msg,
		long flags)
{
   return SOM_ResolveD(this,Sockets,Sockets,somsRecvmsg)
	(this, ev,s,msg,flags);
}


/* method: somsSelect */
long   somsSelect(Environment *ev,
		long nfds,
		fd_set* readfds,
		fd_set* writefds,
		fd_set* exceptfds,
		timeval* timeout)
{
   return SOM_ResolveD(this,Sockets,Sockets,somsSelect)
	(this, ev,nfds,readfds,writefds,exceptfds,timeout);
}


/* method: somsSend */
long   somsSend(Environment *ev,
		long s,
		char* msg,
		long len,
		long flags)
{
   return SOM_ResolveD(this,Sockets,Sockets,somsSend)
	(this, ev,s,msg,len,flags);
}


/* method: somsSendmsg */
long   somsSendmsg(Environment *ev,
		long s,
		msghdr* msg,
		long flags)
{
   return SOM_ResolveD(this,Sockets,Sockets,somsSendmsg)
	(this, ev,s,msg,flags);
}


/* method: somsSendto */
long   somsSendto(Environment *ev,
		long s,
		char* msg,
		long len,
		long flags,
		sockaddr* to,
		long tolen)
{
   return SOM_ResolveD(this,Sockets,Sockets,somsSendto)
	(this, ev,s,msg,len,flags,to,tolen);
}


/* method: somsSetsockopt */
long   somsSetsockopt(Environment *ev,
		long s,
		long level,
		long optname,
		char* optval,
		long optlen)
{
   return SOM_ResolveD(this,Sockets,Sockets,somsSetsockopt)
	(this, ev,s,level,optname,optval,optlen);
}


/* method: somsShutdown */
long   somsShutdown(Environment *ev,
		long s,
		long how)
{
   return SOM_ResolveD(this,Sockets,Sockets,somsShutdown)
	(this, ev,s,how);
}


/* method: somsSocket */
long   somsSocket(Environment *ev,
		long domain,
		long type,
		long protocol)
{
   return SOM_ResolveD(this,Sockets,Sockets,somsSocket)
	(this, ev,domain,type,protocol);
}


/* method: somsSoclose */
long   somsSoclose(Environment *ev,
		long s)
{
   return SOM_ResolveD(this,Sockets,Sockets,somsSoclose)
	(this, ev,s);
}


/* method: somsWritev */
long   somsWritev(Environment *ev,
		long s,
		iovec* iov,
		long iovcnt)
{
   return SOM_ResolveD(this,Sockets,Sockets,somsWritev)
	(this, ev,s,iov,iovcnt);
}


/* method: _get_serrno */
long   _get_serrno(Environment *ev)
{
   return SOM_ResolveD(this,Sockets,Sockets,_get_serrno)
	(this, ev);
}


/* method: _set_serrno */
void   _set_serrno(Environment *ev,
		long serrno)
{
   SOM_ResolveD(this,Sockets,Sockets,_set_serrno)
	(this, ev,serrno);
}


/*
 * Reintroduce inherited methods
 */

/* method: somGetClass */
SOMMSingleInstance*  somGetClass()
{
   return SOM_ResolveD(this,Sockets,SOMObject,somGetClass)
	(this);
}



};   /* Sockets */



#endif       /* SOM_Sockets_xh */
