
/*
 * This file was generated by the SOM Compiler.
 * FileName: somdmprx.xh.
 * Generated using:
 *     SOM Precompiler somipc: 2.29.1.2
 *     SOM Emitter emitxh: 2.41
 */

/*
 * 
 *    COMPONENT_NAME: somd
 * 
 *    ORIGINS: 27
 * 
 * 
 *    10H9767, 10H9769  (C) COPYRIGHT International Business Machines Corp. 1992,1994
 *    All Rights Reserved
 *    Licensed Materials - Property of IBM
 *    US Government Users Restricted Rights - Use, duplication or
 *    disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
 * 
 */


#ifndef SOM_SOMDMetaproxy_xh
#define SOM_SOMDMetaproxy_xh

class SOMDMetaproxy;

#define SOMDMetaproxy_MajorVersion 0
#define SOMDMetaproxy_MinorVersion 0

/* C++ SOM defs */
#include <somcls.xh>
#include <somcm.xh>

/* C++ parent defs */
#ifndef SOM_SOMMCooperativeSistered_xh
#include <sommeta.xh>
#endif

#ifndef SOMDMetaproxy_API
#define SOMDMetaproxy_API
/*
 * -- The Class API
 */

/*
 * Start of user-defined types:
 */
class SOMClass;
class SOMObject;
class SOMMMetaCooperative;

/*
 * End of user-defined types.
 */

/* A procedure to create the SOMDMetaproxy Class */
SOMEXTERN SOMClass * SOMLINK SOMDMetaproxyNewClass(
		integer4 majorVersion,
		integer4 minorVersion);

/* The API to the SOMDMetaproxy class object, and the methods it introduces. */
SOMEXTERN struct SOMDMetaproxyClassDataStructure {
	SOMClass *classObject;
} SOMDLINK SOMDMetaproxyClassData;
#define _SOMDMetaproxy SOMDMetaproxyClassData.classObject

/* The API to parentMtabs for SOMDMetaproxy, and the instance data it introduces. */
SOMEXTERN struct SOMDMetaproxyCClassDataStructure {
	somMethodTabs parentMtab;
	somDToken              instanceDataToken;
} SOMDLINK SOMDMetaproxyCClassData;

/*
 * -- Typedefs for SOMDMetaproxy Method Procedures
 */
SOMEXTERN {

/*
 * -- Typedefs for Reintroduced Wrapper Methods
 */
typedef SOMClass*   (SOMLINK * somTD_SOMDMetaproxy__get_somSisterClass)(SOMDMetaproxy *somSelf);
typedef void   (SOMLINK * somTD_SOMDMetaproxy_somDefaultInit)(SOMDMetaproxy *somSelf,
		somInitCtrl* ctrl);
typedef void   (SOMLINK * somTD_SOMDMetaproxy_somInitMIClass)(SOMDMetaproxy *somSelf,
		long inherit_vars,
		string className,
		SOMClass_SOMClassSequence* parentClasses,
		long dataSize,
		long dataAlignment,
		long maxStaticMethods,
		long majorVersion,
		long minorVersion);
typedef somMethodProc**   (SOMLINK * somTD_SOMDMetaproxy_sommAddCooperativeInstanceMethod)(SOMDMetaproxy *somSelf,
		somId methodId,
		somMethodProc* methodProc);
typedef somMethodProc**   (SOMLINK * somTD_SOMDMetaproxy_sommAddCooperativeClassMethod)(SOMDMetaproxy *somSelf,
		somId methodId,
		somMethodProc* methodProc);
typedef void   (SOMLINK * somTD_SOMDMetaproxy_sommRequestFirstCooperativeInstanceMethodCall)(SOMDMetaproxy *somSelf,
		somId methodId,
		somMethodProc* coopProc,
		somMethodProc*** chainProcAddrAddr);
typedef void   (SOMLINK * somTD_SOMDMetaproxy_sommRequestFirstCooperativeClassMethodCall)(SOMDMetaproxy *somSelf,
		somId methodId,
		somMethodProc* coopProc,
		somMethodProc*** chainProcAddrAddr);
typedef void   (SOMLINK * somTD_SOMDMetaproxy_sommRequestFinalClassMethodCall)(SOMDMetaproxy *somSelf,
		somId methodId,
		somMethodProc* methodProc);
typedef boolean   (SOMLINK * somTD_SOMDMetaproxy_sommSatisfyRequests)(SOMDMetaproxy *somSelf);
typedef void   (SOMLINK * somTD_SOMDMetaproxy_somClassReady)(SOMDMetaproxy *somSelf);
typedef long   (SOMLINK * somTD_SOMDMetaproxy__get_somDataAlignment)(SOMDMetaproxy *somSelf);
typedef SOMClass_somOffsets   (SOMLINK * somTD_SOMDMetaproxy__get_somInstanceDataOffsets)(SOMDMetaproxy *somSelf);
typedef SOMClass_SOMClassSequence   (SOMLINK * somTD_SOMDMetaproxy__get_somDirectInitClasses)(SOMDMetaproxy *somSelf);
typedef void   (SOMLINK * somTD_SOMDMetaproxy__set_somDirectInitClasses)(SOMDMetaproxy *somSelf,
		SOMClass_SOMClassSequence* somDirectInitClasses);
typedef SOMObject*   (SOMLINK * somTD_SOMDMetaproxy_somNew)(SOMDMetaproxy *somSelf);
typedef SOMObject*   (SOMLINK * somTD_SOMDMetaproxy_somNewNoInit)(SOMDMetaproxy *somSelf);
typedef SOMObject*   (SOMLINK * somTD_SOMDMetaproxy_somRenew)(SOMDMetaproxy *somSelf,
		void* obj);
typedef SOMObject*   (SOMLINK * somTD_SOMDMetaproxy_somRenewNoInit)(SOMDMetaproxy *somSelf,
		void* obj);
typedef SOMObject*   (SOMLINK * somTD_SOMDMetaproxy_somRenewNoZero)(SOMDMetaproxy *somSelf,
		void* obj);
typedef SOMObject*   (SOMLINK * somTD_SOMDMetaproxy_somRenewNoInitNoZero)(SOMDMetaproxy *somSelf,
		void* obj);
typedef string   (SOMLINK * somTD_SOMDMetaproxy_somAllocate)(SOMDMetaproxy *somSelf,
		long size);
typedef void   (SOMLINK * somTD_SOMDMetaproxy_somDeallocate)(SOMDMetaproxy *somSelf,
		string memptr);
typedef somMethodProc*   (SOMLINK * somTD_SOMDMetaproxy__get_somClassAllocate)(SOMDMetaproxy *somSelf);
typedef somMethodProc*   (SOMLINK * somTD_SOMDMetaproxy__get_somClassDeallocate)(SOMDMetaproxy *somSelf);
typedef somBooleanVector   (SOMLINK * somTD_SOMDMetaproxy_somGetInstanceInitMask)(SOMDMetaproxy *somSelf,
		somInitCtrl* ctrl);
typedef somBooleanVector   (SOMLINK * somTD_SOMDMetaproxy_somGetInstanceDestructionMask)(SOMDMetaproxy *somSelf,
		somDestructCtrl* ctrl);
typedef somBooleanVector   (SOMLINK * somTD_SOMDMetaproxy_somGetInstanceAssignmentMask)(SOMDMetaproxy *somSelf,
		somAssignCtrl* ctrl);
typedef void   (SOMLINK * somTD_SOMDMetaproxy_somInitClass)(SOMDMetaproxy *somSelf,
		string className,
		SOMClass* parentClass,
		long dataSize,
		long maxStaticMethods,
		long majorVersion,
		long minorVersion);
typedef somMToken   (SOMLINK * somTD_SOMDMetaproxy_somAddStaticMethod)(SOMDMetaproxy *somSelf,
		somId methodId,
		somId methodDescriptor,
		somMethodPtr method,
		somMethodPtr redispatchStub,
		somMethodPtr applyStub);
typedef void   (SOMLINK * somTD_SOMDMetaproxy_somAddDynamicMethod)(SOMDMetaproxy *somSelf,
		somId methodId,
		somId methodDescriptor,
		somMethodPtr method,
		somMethodPtr applyStub);
typedef void   (SOMLINK * somTD_SOMDMetaproxy_somOverrideSMethod)(SOMDMetaproxy *somSelf,
		somId methodId,
		somMethodPtr method);
typedef somMethodPtr   (SOMLINK * somTD_SOMDMetaproxy_somGetApplyStub)(SOMDMetaproxy *somSelf,
		somId methodId);
typedef somClassDataStructure*   (SOMLINK * somTD_SOMDMetaproxy_somGetClassData)(SOMDMetaproxy *somSelf);
typedef void   (SOMLINK * somTD_SOMDMetaproxy_somSetClassData)(SOMDMetaproxy *somSelf,
		somClassDataStructure* cds);
typedef somMethodTab*   (SOMLINK * somTD_SOMDMetaproxy_somGetClassMtab)(SOMDMetaproxy *somSelf);
typedef long   (SOMLINK * somTD_SOMDMetaproxy_somGetInstanceOffset)(SOMDMetaproxy *somSelf);
typedef long   (SOMLINK * somTD_SOMDMetaproxy_somGetInstancePartSize)(SOMDMetaproxy *somSelf);
typedef long   (SOMLINK * somTD_SOMDMetaproxy_somGetInstanceSize)(SOMDMetaproxy *somSelf);
typedef somDToken   (SOMLINK * somTD_SOMDMetaproxy_somGetInstanceToken)(SOMDMetaproxy *somSelf);
typedef somDToken   (SOMLINK * somTD_SOMDMetaproxy_somGetMemberToken)(SOMDMetaproxy *somSelf,
		long memberOffset,
		somDToken instanceToken);
typedef boolean   (SOMLINK * somTD_SOMDMetaproxy_somGetMethodData)(SOMDMetaproxy *somSelf,
		somId methodId,
		somMethodData* md);
typedef somMethodProc*   (SOMLINK * somTD_SOMDMetaproxy_somGetRdStub)(SOMDMetaproxy *somSelf,
		somId methodId);
typedef somId   (SOMLINK * somTD_SOMDMetaproxy_somGetMethodDescriptor)(SOMDMetaproxy *somSelf,
		somId methodId);
typedef long   (SOMLINK * somTD_SOMDMetaproxy_somGetMethodIndex)(SOMDMetaproxy *somSelf,
		somId id);
typedef somMToken   (SOMLINK * somTD_SOMDMetaproxy_somGetMethodToken)(SOMDMetaproxy *somSelf,
		somId methodId);
typedef string   (SOMLINK * somTD_SOMDMetaproxy_somGetName)(SOMDMetaproxy *somSelf);
typedef boolean   (SOMLINK * somTD_SOMDMetaproxy_somGetNthMethodData)(SOMDMetaproxy *somSelf,
		long n,
		somMethodData* md);
typedef somId   (SOMLINK * somTD_SOMDMetaproxy_somGetNthMethodInfo)(SOMDMetaproxy *somSelf,
		long n,
		somId* descriptor);
typedef long   (SOMLINK * somTD_SOMDMetaproxy_somGetNumMethods)(SOMDMetaproxy *somSelf);
typedef long   (SOMLINK * somTD_SOMDMetaproxy_somGetNumStaticMethods)(SOMDMetaproxy *somSelf);
typedef SOMClass*   (SOMLINK * somTD_SOMDMetaproxy_somGetParent)(SOMDMetaproxy *somSelf);
typedef SOMClass_SOMClassSequence   (SOMLINK * somTD_SOMDMetaproxy_somGetParents)(SOMDMetaproxy *somSelf);
typedef somMethodTabs   (SOMLINK * somTD_SOMDMetaproxy_somGetPClsMtab)(SOMDMetaproxy *somSelf);
typedef somMethodTabs   (SOMLINK * somTD_SOMDMetaproxy_somGetPClsMtabs)(SOMDMetaproxy *somSelf);
typedef void   (SOMLINK * somTD_SOMDMetaproxy_somGetVersionNumbers)(SOMDMetaproxy *somSelf,
		long* majorVersion,
		long* minorVersion);
typedef boolean   (SOMLINK * somTD_SOMDMetaproxy_somSetMethodDescriptor)(SOMDMetaproxy *somSelf,
		somId methodId,
		somId descriptor);
typedef boolean   (SOMLINK * somTD_SOMDMetaproxy_somFindMethod)(SOMDMetaproxy *somSelf,
		somId methodId,
		somMethodPtr* m);
typedef boolean   (SOMLINK * somTD_SOMDMetaproxy_somFindMethodOk)(SOMDMetaproxy *somSelf,
		somId methodId,
		somMethodPtr* m);
typedef somMethodPtr   (SOMLINK * somTD_SOMDMetaproxy_somFindSMethod)(SOMDMetaproxy *somSelf,
		somId methodId);
typedef somMethodPtr   (SOMLINK * somTD_SOMDMetaproxy_somFindSMethodOk)(SOMDMetaproxy *somSelf,
		somId methodId);
typedef somMethodPtr   (SOMLINK * somTD_SOMDMetaproxy_somLookupMethod)(SOMDMetaproxy *somSelf,
		somId methodId);
typedef boolean   (SOMLINK * somTD_SOMDMetaproxy_somCheckVersion)(SOMDMetaproxy *somSelf,
		long majorVersion,
		long minorVersion);
typedef boolean   (SOMLINK * somTD_SOMDMetaproxy_somDescendedFrom)(SOMDMetaproxy *somSelf,
		SOMClass* aClassObj);
typedef boolean   (SOMLINK * somTD_SOMDMetaproxy_somSupportsMethod)(SOMDMetaproxy *somSelf,
		somId mId);
typedef somMethodPtr   (SOMLINK * somTD_SOMDMetaproxy_somDefinedMethod)(SOMDMetaproxy *somSelf,
		somMToken method);
typedef void   (SOMLINK * somTD_SOMDMetaproxy_somOverrideMtab)(SOMDMetaproxy *somSelf);
typedef void   (SOMLINK * somTD_SOMDMetaproxy_somDestruct)(SOMDMetaproxy *somSelf,
		octet doFree,
		somDestructCtrl* ctrl);
typedef void   (SOMLINK * somTD_SOMDMetaproxy_somDefaultCopyInit)(SOMDMetaproxy *somSelf,
		somInitCtrl* ctrl,
		SOMObject* fromObj);
typedef SOMDMetaproxy*   (SOMLINK * somTD_SOMDMetaproxy_somDefaultAssign)(SOMDMetaproxy *somSelf,
		somAssignCtrl* ctrl,
		SOMObject* fromObj);
typedef void   (SOMLINK * somTD_SOMDMetaproxy_somDefaultConstCopyInit)(SOMDMetaproxy *somSelf,
		somInitCtrl* ctrl,
		SOMObject* fromObj);
typedef void   (SOMLINK * somTD_SOMDMetaproxy_somDefaultVCopyInit)(SOMDMetaproxy *somSelf,
		somInitCtrl* ctrl,
		SOMObject* fromObj);
typedef void   (SOMLINK * somTD_SOMDMetaproxy_somDefaultConstVCopyInit)(SOMDMetaproxy *somSelf,
		somInitCtrl* ctrl,
		SOMObject* fromObj);
typedef SOMDMetaproxy*   (SOMLINK * somTD_SOMDMetaproxy_somDefaultConstAssign)(SOMDMetaproxy *somSelf,
		somAssignCtrl* ctrl,
		SOMObject* fromObj);
typedef SOMDMetaproxy*   (SOMLINK * somTD_SOMDMetaproxy_somDefaultVAssign)(SOMDMetaproxy *somSelf,
		somAssignCtrl* ctrl,
		SOMObject* fromObj);
typedef SOMDMetaproxy*   (SOMLINK * somTD_SOMDMetaproxy_somDefaultConstVAssign)(SOMDMetaproxy *somSelf,
		somAssignCtrl* ctrl,
		SOMObject* fromObj);
typedef void   (SOMLINK * somTD_SOMDMetaproxy_somInit)(SOMDMetaproxy *somSelf);
typedef void   (SOMLINK * somTD_SOMDMetaproxy_somFree)(SOMDMetaproxy *somSelf);
typedef void   (SOMLINK * somTD_SOMDMetaproxy_somUninit)(SOMDMetaproxy *somSelf);
typedef SOMClass*   (SOMLINK * somTD_SOMDMetaproxy_somGetClass)(SOMDMetaproxy *somSelf);
typedef string   (SOMLINK * somTD_SOMDMetaproxy_somGetClassName)(SOMDMetaproxy *somSelf);
typedef long   (SOMLINK * somTD_SOMDMetaproxy_somGetSize)(SOMDMetaproxy *somSelf);
typedef boolean   (SOMLINK * somTD_SOMDMetaproxy_somIsA)(SOMDMetaproxy *somSelf,
		SOMClass* aClassObj);
typedef boolean   (SOMLINK * somTD_SOMDMetaproxy_somIsInstanceOf)(SOMDMetaproxy *somSelf,
		SOMClass* aClassObj);
typedef boolean   (SOMLINK * somTD_SOMDMetaproxy_somRespondsTo)(SOMDMetaproxy *somSelf,
		somId mId);
typedef boolean   (SOMLINK * somTD_SOMDMetaproxy_somDispatch)(SOMDMetaproxy *somSelf,
		somToken* retValue,
		somId methodId,
		va_list ap);
typedef boolean   (SOMLINK * somTD_SOMDMetaproxy_somClassDispatch)(SOMDMetaproxy *somSelf,
		SOMClass* clsObj,
		somToken* retValue,
		somId methodId,
		va_list ap);
typedef boolean   (SOMLINK * somTD_SOMDMetaproxy_somCastObj)(SOMDMetaproxy *somSelf,
		SOMClass* cls);
typedef boolean   (SOMLINK * somTD_SOMDMetaproxy_somResetObj)(SOMDMetaproxy *somSelf);
typedef void   (SOMLINK * somTD_SOMDMetaproxy_somDispatchV)(SOMDMetaproxy *somSelf,
		somId methodId,
		somId descriptor,
		va_list ap);
typedef long   (SOMLINK * somTD_SOMDMetaproxy_somDispatchL)(SOMDMetaproxy *somSelf,
		somId methodId,
		somId descriptor,
		va_list ap);
typedef void*   (SOMLINK * somTD_SOMDMetaproxy_somDispatchA)(SOMDMetaproxy *somSelf,
		somId methodId,
		somId descriptor,
		va_list ap);
typedef double   (SOMLINK * somTD_SOMDMetaproxy_somDispatchD)(SOMDMetaproxy *somSelf,
		somId methodId,
		somId descriptor,
		va_list ap);
typedef SOMObject*   (SOMLINK * somTD_SOMDMetaproxy_somPrintSelf)(SOMDMetaproxy *somSelf);
typedef void   (SOMLINK * somTD_SOMDMetaproxy_somDumpSelf)(SOMDMetaproxy *somSelf,
		long level);
typedef void   (SOMLINK * somTD_SOMDMetaproxy_somDumpSelfInt)(SOMDMetaproxy *somSelf,
		long level);
}

#endif /* SOMDMetaproxy_API */


/*
 * -- This emitter treats Method Tokens as Thunks by default.
 * -- Use the sc modifier "nothunks" to change this default
 */
#undef somresolve_
#define somresolve_(obj,mToken) ((somMethodProc*)((void)obj, mToken))

/*
 * -- The C++ Wrapper Class for SOMDMetaproxy
 */
class SOMDMetaproxy : public SOMMCooperativeSistered
{
public:

// SOMDMetaproxy::new creates the class object if necessary, and then uses somNewNoInit
// to allocate memory and create the object. Initialization is in ctors.
void *operator new(size_t size)
{
   SOM_IgnoreWarning(size);
   if (!_SOMDMetaproxy) SOMDMetaproxyNewClass(SOMDMetaproxy_MajorVersion,SOMDMetaproxy_MinorVersion);
   return (void*)
      SOM_Resolve(_SOMDMetaproxy,SOMClass,somNewNoInit)
         ((SOMClass *)((void*)_SOMDMetaproxy));
}

// SOMDMetaproxy::delete uses the default deallocator for the object's class.
void operator delete(void * obj)
{
   somToken objCls = obj ? *(void**)obj : (somToken) NULL;
   if (somIsObj(objCls)) {
      SOM_Resolve(objCls,SOMClass,somDeallocate)
         ((SOMClass*)objCls, (string)obj);
   }
}

SOMDMetaproxy()
{
   if (*(void**)this != 
       ((somParentMtabStructPtr)
        (SOMDMetaproxyCClassData.parentMtab))->mtab)
      return;
   somDefaultInit(0);
}

SOMDMetaproxy(SOMDMetaproxy* fromObj)
{
   if (*(void**)this != 
       ((somParentMtabStructPtr)
        (SOMDMetaproxyCClassData.parentMtab))->mtab)
      return;
   somDefaultCopyInit(0,((SOMObject*)((void*)fromObj)));
}

SOMDMetaproxy(const SOMDMetaproxy* fromObj)
{
   if (*(void**)this != 
       ((somParentMtabStructPtr)
        (SOMDMetaproxyCClassData.parentMtab))->mtab)
      return;
   somDefaultConstCopyInit(0,((SOMObject*)((void*)fromObj)));
}

~SOMDMetaproxy()
{
   if (!somIsObj(this)) return;
   somDestruct(0,0);
   *(void**)this = **(void***)this;
}


/*
 * Reintroduce inherited methods
 */

/* method: _get_somSisterClass */
SOMClass*   _get_somSisterClass()
{
   return SOM_ResolveD(this,SOMDMetaproxy,SOMMCooperativeSistered,_get_somSisterClass)
	(this);
}


/* initializer method: somDefaultInit */
void   somDefaultInit(somInitCtrl* ctrl)
{
   SOM_ResolveD(this,SOMDMetaproxy,SOMObject,somDefaultInit)
	(this,ctrl);
}


/* method: somInitMIClass */
void   somInitMIClass(long inherit_vars,
		string className,
		SOMClass_SOMClassSequence* parentClasses,
		long dataSize,
		long dataAlignment,
		long maxStaticMethods,
		long majorVersion,
		long minorVersion)
{
   SOM_ResolveD(this,SOMDMetaproxy,SOMClass,somInitMIClass)
	(this,inherit_vars,className,parentClasses,dataSize,dataAlignment,maxStaticMethods,majorVersion,minorVersion);
}


/* method: sommAddCooperativeInstanceMethod */
somMethodProc**   sommAddCooperativeInstanceMethod(somId methodId,
		somMethodProc* methodProc)
{
   return SOM_ResolveD(this,SOMDMetaproxy,SOMMCooperative,sommAddCooperativeInstanceMethod)
	(this,methodId,methodProc);
}


/* method: sommAddCooperativeClassMethod */
somMethodProc**   sommAddCooperativeClassMethod(somId methodId,
		somMethodProc* methodProc)
{
   return SOM_ResolveD(this,SOMDMetaproxy,SOMMCooperative,sommAddCooperativeClassMethod)
	(this,methodId,methodProc);
}


/* method: sommRequestFirstCooperativeInstanceMethodCall */
void   sommRequestFirstCooperativeInstanceMethodCall(somId methodId,
		somMethodProc* coopProc,
		somMethodProc*** chainProcAddrAddr)
{
   SOM_ResolveD(this,SOMDMetaproxy,SOMMCooperative,sommRequestFirstCooperativeInstanceMethodCall)
	(this,methodId,coopProc,chainProcAddrAddr);
}


/* method: sommRequestFirstCooperativeClassMethodCall */
void   sommRequestFirstCooperativeClassMethodCall(somId methodId,
		somMethodProc* coopProc,
		somMethodProc*** chainProcAddrAddr)
{
   SOM_ResolveD(this,SOMDMetaproxy,SOMMCooperative,sommRequestFirstCooperativeClassMethodCall)
	(this,methodId,coopProc,chainProcAddrAddr);
}


/* method: sommRequestFinalClassMethodCall */
void   sommRequestFinalClassMethodCall(somId methodId,
		somMethodProc* methodProc)
{
   SOM_ResolveD(this,SOMDMetaproxy,SOMMCooperative,sommRequestFinalClassMethodCall)
	(this,methodId,methodProc);
}


/* method: sommSatisfyRequests */
boolean   sommSatisfyRequests()
{
   return SOM_ResolveD(this,SOMDMetaproxy,SOMMCooperative,sommSatisfyRequests)
	(this);
}


/* method: somClassReady */
void   somClassReady()
{
   SOM_ResolveD(this,SOMDMetaproxy,SOMClass,somClassReady)
	(this);
}


/* method: _get_somDataAlignment */
long   _get_somDataAlignment()
{
   return SOM_ResolveD(this,SOMDMetaproxy,SOMClass,_get_somDataAlignment)
	(this);
}


/* nonstatic method: _get_somInstanceDataOffsets */
SOMClass_somOffsets   _get_somInstanceDataOffsets()
{
   return SOM_ResolveD(this,SOMDMetaproxy,SOMClass,_get_somInstanceDataOffsets)
	(this);
}


/* nonstatic method: _get_somDirectInitClasses */
SOMClass_SOMClassSequence   _get_somDirectInitClasses()
{
   return SOM_ResolveD(this,SOMDMetaproxy,SOMClass,_get_somDirectInitClasses)
	(this);
}


/* nonstatic method: _set_somDirectInitClasses */
void   _set_somDirectInitClasses(SOMClass_SOMClassSequence* somDirectInitClasses)
{
   SOM_ResolveD(this,SOMDMetaproxy,SOMClass,_set_somDirectInitClasses)
	(this,somDirectInitClasses);
}


/* method: somNew */
SOMObject*   somNew()
{
   return SOM_ResolveD(this,SOMDMetaproxy,SOMClass,somNew)
	(this);
}


/* method: somNewNoInit */
SOMObject*   somNewNoInit()
{
   return SOM_ResolveD(this,SOMDMetaproxy,SOMClass,somNewNoInit)
	(this);
}


/* method: somRenew */
SOMObject*   somRenew(void* obj)
{
   return SOM_ResolveD(this,SOMDMetaproxy,SOMClass,somRenew)
	(this,obj);
}


/* method: somRenewNoInit */
SOMObject*   somRenewNoInit(void* obj)
{
   return SOM_ResolveD(this,SOMDMetaproxy,SOMClass,somRenewNoInit)
	(this,obj);
}


/* method: somRenewNoZero */
SOMObject*   somRenewNoZero(void* obj)
{
   return SOM_ResolveD(this,SOMDMetaproxy,SOMClass,somRenewNoZero)
	(this,obj);
}


/* method: somRenewNoInitNoZero */
SOMObject*   somRenewNoInitNoZero(void* obj)
{
   return SOM_ResolveD(this,SOMDMetaproxy,SOMClass,somRenewNoInitNoZero)
	(this,obj);
}


/* nonstatic method: somAllocate */
string   somAllocate(long size)
{
   return SOM_ResolveD(this,SOMDMetaproxy,SOMClass,somAllocate)
	(this,size);
}


/* nonstatic method: somDeallocate */
void   somDeallocate(string memptr)
{
   SOM_ResolveD(this,SOMDMetaproxy,SOMClass,somDeallocate)
	(this,memptr);
}


/* nonstatic method: _get_somClassAllocate */
somMethodProc*   _get_somClassAllocate()
{
   return SOM_ResolveD(this,SOMDMetaproxy,SOMClass,_get_somClassAllocate)
	(this);
}


/* nonstatic method: _get_somClassDeallocate */
somMethodProc*   _get_somClassDeallocate()
{
   return SOM_ResolveD(this,SOMDMetaproxy,SOMClass,_get_somClassDeallocate)
	(this);
}


/* method: somGetInstanceInitMask */
somBooleanVector   somGetInstanceInitMask(somInitCtrl* ctrl)
{
   return SOM_ResolveD(this,SOMDMetaproxy,SOMClass,somGetInstanceInitMask)
	(this,ctrl);
}


/* method: somGetInstanceDestructionMask */
somBooleanVector   somGetInstanceDestructionMask(somDestructCtrl* ctrl)
{
   return SOM_ResolveD(this,SOMDMetaproxy,SOMClass,somGetInstanceDestructionMask)
	(this,ctrl);
}


/* method: somGetInstanceAssignmentMask */
somBooleanVector   somGetInstanceAssignmentMask(somAssignCtrl* ctrl)
{
   return SOM_ResolveD(this,SOMDMetaproxy,SOMClass,somGetInstanceAssignmentMask)
	(this,ctrl);
}


/* method: somInitClass */
void   somInitClass(string className,
		SOMClass* parentClass,
		long dataSize,
		long maxStaticMethods,
		long majorVersion,
		long minorVersion)
{
   SOM_ResolveD(this,SOMDMetaproxy,SOMClass,somInitClass)
	(this,className,parentClass,dataSize,maxStaticMethods,majorVersion,minorVersion);
}


/* method: somAddStaticMethod */
somMToken   somAddStaticMethod(somId methodId,
		somId methodDescriptor,
		somMethodPtr method,
		somMethodPtr redispatchStub,
		somMethodPtr applyStub)
{
   return SOM_ResolveD(this,SOMDMetaproxy,SOMClass,somAddStaticMethod)
	(this,methodId,methodDescriptor,method,redispatchStub,applyStub);
}


/* method: somAddDynamicMethod */
void   somAddDynamicMethod(somId methodId,
		somId methodDescriptor,
		somMethodPtr method,
		somMethodPtr applyStub)
{
   SOM_ResolveD(this,SOMDMetaproxy,SOMClass,somAddDynamicMethod)
	(this,methodId,methodDescriptor,method,applyStub);
}


/* method: somOverrideSMethod */
void   somOverrideSMethod(somId methodId,
		somMethodPtr method)
{
   SOM_ResolveD(this,SOMDMetaproxy,SOMClass,somOverrideSMethod)
	(this,methodId,method);
}


/* method: somGetApplyStub */
somMethodPtr   somGetApplyStub(somId methodId)
{
   return SOM_ResolveD(this,SOMDMetaproxy,SOMClass,somGetApplyStub)
	(this,methodId);
}


/* method: somGetClassData */
somClassDataStructure*   somGetClassData()
{
   return SOM_ResolveD(this,SOMDMetaproxy,SOMClass,somGetClassData)
	(this);
}


/* method: somSetClassData */
void   somSetClassData(somClassDataStructure* cds)
{
   SOM_ResolveD(this,SOMDMetaproxy,SOMClass,somSetClassData)
	(this,cds);
}


/* method: somGetClassMtab */
somMethodTab*   somGetClassMtab()
{
   return SOM_ResolveD(this,SOMDMetaproxy,SOMClass,somGetClassMtab)
	(this);
}


/* method: somGetInstanceOffset */
long   somGetInstanceOffset()
{
   return SOM_ResolveD(this,SOMDMetaproxy,SOMClass,somGetInstanceOffset)
	(this);
}


/* method: somGetInstancePartSize */
long   somGetInstancePartSize()
{
   return SOM_ResolveD(this,SOMDMetaproxy,SOMClass,somGetInstancePartSize)
	(this);
}


/* method: somGetInstanceSize */
long   somGetInstanceSize()
{
   return SOM_ResolveD(this,SOMDMetaproxy,SOMClass,somGetInstanceSize)
	(this);
}


/* method: somGetInstanceToken */
somDToken   somGetInstanceToken()
{
   return SOM_ResolveD(this,SOMDMetaproxy,SOMClass,somGetInstanceToken)
	(this);
}


/* method: somGetMemberToken */
somDToken   somGetMemberToken(long memberOffset,
		somDToken instanceToken)
{
   return SOM_ResolveD(this,SOMDMetaproxy,SOMClass,somGetMemberToken)
	(this,memberOffset,instanceToken);
}


/* method: somGetMethodData */
boolean   somGetMethodData(somId methodId,
		somMethodData* md)
{
   return SOM_ResolveD(this,SOMDMetaproxy,SOMClass,somGetMethodData)
	(this,methodId,md);
}


/* method: somGetRdStub */
somMethodProc*   somGetRdStub(somId methodId)
{
   return SOM_ResolveD(this,SOMDMetaproxy,SOMClass,somGetRdStub)
	(this,methodId);
}


/* method: somGetMethodDescriptor */
somId   somGetMethodDescriptor(somId methodId)
{
   return SOM_ResolveD(this,SOMDMetaproxy,SOMClass,somGetMethodDescriptor)
	(this,methodId);
}


/* method: somGetMethodIndex */
long   somGetMethodIndex(somId id)
{
   return SOM_ResolveD(this,SOMDMetaproxy,SOMClass,somGetMethodIndex)
	(this,id);
}


/* method: somGetMethodToken */
somMToken   somGetMethodToken(somId methodId)
{
   return SOM_ResolveD(this,SOMDMetaproxy,SOMClass,somGetMethodToken)
	(this,methodId);
}


/* method: somGetName */
string   somGetName()
{
   return SOM_ResolveD(this,SOMDMetaproxy,SOMClass,somGetName)
	(this);
}


/* method: somGetNthMethodData */
boolean   somGetNthMethodData(long n,
		somMethodData* md)
{
   return SOM_ResolveD(this,SOMDMetaproxy,SOMClass,somGetNthMethodData)
	(this,n,md);
}


/* method: somGetNthMethodInfo */
somId   somGetNthMethodInfo(long n,
		somId* descriptor)
{
   return SOM_ResolveD(this,SOMDMetaproxy,SOMClass,somGetNthMethodInfo)
	(this,n,descriptor);
}


/* method: somGetNumMethods */
long   somGetNumMethods()
{
   return SOM_ResolveD(this,SOMDMetaproxy,SOMClass,somGetNumMethods)
	(this);
}


/* method: somGetNumStaticMethods */
long   somGetNumStaticMethods()
{
   return SOM_ResolveD(this,SOMDMetaproxy,SOMClass,somGetNumStaticMethods)
	(this);
}


/* method: somGetParent */
SOMClass*   somGetParent()
{
   return SOM_ResolveD(this,SOMDMetaproxy,SOMClass,somGetParent)
	(this);
}


/* method: somGetParents */
SOMClass_SOMClassSequence   somGetParents()
{
   return SOM_ResolveD(this,SOMDMetaproxy,SOMClass,somGetParents)
	(this);
}


/* method: somGetPClsMtab */
somMethodTabs   somGetPClsMtab()
{
   return SOM_ResolveD(this,SOMDMetaproxy,SOMClass,somGetPClsMtab)
	(this);
}


/* method: somGetPClsMtabs */
somMethodTabs   somGetPClsMtabs()
{
   return SOM_ResolveD(this,SOMDMetaproxy,SOMClass,somGetPClsMtabs)
	(this);
}


/* method: somGetVersionNumbers */
void   somGetVersionNumbers(long* majorVersion,
		long* minorVersion)
{
   SOM_ResolveD(this,SOMDMetaproxy,SOMClass,somGetVersionNumbers)
	(this,majorVersion,minorVersion);
}


/* method: somSetMethodDescriptor */
boolean   somSetMethodDescriptor(somId methodId,
		somId descriptor)
{
   return SOM_ResolveD(this,SOMDMetaproxy,SOMClass,somSetMethodDescriptor)
	(this,methodId,descriptor);
}


/* method: somFindMethod */
boolean   somFindMethod(somId methodId,
		somMethodPtr* m)
{
   return SOM_ResolveD(this,SOMDMetaproxy,SOMClass,somFindMethod)
	(this,methodId,m);
}


/* method: somFindMethodOk */
boolean   somFindMethodOk(somId methodId,
		somMethodPtr* m)
{
   return SOM_ResolveD(this,SOMDMetaproxy,SOMClass,somFindMethodOk)
	(this,methodId,m);
}


/* method: somFindSMethod */
somMethodPtr   somFindSMethod(somId methodId)
{
   return SOM_ResolveD(this,SOMDMetaproxy,SOMClass,somFindSMethod)
	(this,methodId);
}


/* method: somFindSMethodOk */
somMethodPtr   somFindSMethodOk(somId methodId)
{
   return SOM_ResolveD(this,SOMDMetaproxy,SOMClass,somFindSMethodOk)
	(this,methodId);
}


/* method: somLookupMethod */
somMethodPtr   somLookupMethod(somId methodId)
{
   return SOM_ResolveD(this,SOMDMetaproxy,SOMClass,somLookupMethod)
	(this,methodId);
}


/* method: somCheckVersion */
boolean   somCheckVersion(long majorVersion,
		long minorVersion)
{
   return SOM_ResolveD(this,SOMDMetaproxy,SOMClass,somCheckVersion)
	(this,majorVersion,minorVersion);
}


/* method: somDescendedFrom */
boolean   somDescendedFrom(SOMClass* aClassObj)
{
   return SOM_ResolveD(this,SOMDMetaproxy,SOMClass,somDescendedFrom)
	(this,aClassObj);
}


/* method: somSupportsMethod */
boolean   somSupportsMethod(somId mId)
{
   return SOM_ResolveD(this,SOMDMetaproxy,SOMClass,somSupportsMethod)
	(this,mId);
}


/* method: somDefinedMethod */
somMethodPtr   somDefinedMethod(somMToken method)
{
   return SOM_ResolveD(this,SOMDMetaproxy,SOMClass,somDefinedMethod)
	(this,method);
}


/* method: somOverrideMtab */
void   somOverrideMtab()
{
   SOM_ResolveD(this,SOMDMetaproxy,SOMClass,somOverrideMtab)
	(this);
}


/* method: somDestruct */
void   somDestruct(octet doFree,
		somDestructCtrl* ctrl)
{
   SOM_ResolveD(this,SOMDMetaproxy,SOMObject,somDestruct)
	(this,doFree,ctrl);
}


/* method: somDefaultCopyInit */
void   somDefaultCopyInit(somInitCtrl* ctrl,
		SOMObject* fromObj)
{
   SOM_ResolveD(this,SOMDMetaproxy,SOMObject,somDefaultCopyInit)
	(this,ctrl,fromObj);
}


/* method: somDefaultAssign */
SOMDMetaproxy*  somDefaultAssign(somAssignCtrl* ctrl,
		SOMObject* fromObj)
{
   return SOM_ResolveD(this,SOMDMetaproxy,SOMObject,somDefaultAssign)
	(this,ctrl,fromObj);
}


/* method: somDefaultConstCopyInit */
void   somDefaultConstCopyInit(somInitCtrl* ctrl,
		SOMObject* fromObj)
{
   SOM_ResolveD(this,SOMDMetaproxy,SOMObject,somDefaultConstCopyInit)
	(this,ctrl,fromObj);
}


/* method: somDefaultVCopyInit */
void   somDefaultVCopyInit(somInitCtrl* ctrl,
		SOMObject* fromObj)
{
   SOM_ResolveD(this,SOMDMetaproxy,SOMObject,somDefaultVCopyInit)
	(this,ctrl,fromObj);
}


/* method: somDefaultConstVCopyInit */
void   somDefaultConstVCopyInit(somInitCtrl* ctrl,
		SOMObject* fromObj)
{
   SOM_ResolveD(this,SOMDMetaproxy,SOMObject,somDefaultConstVCopyInit)
	(this,ctrl,fromObj);
}


/* method: somDefaultConstAssign */
SOMDMetaproxy*  somDefaultConstAssign(somAssignCtrl* ctrl,
		SOMObject* fromObj)
{
   return SOM_ResolveD(this,SOMDMetaproxy,SOMObject,somDefaultConstAssign)
	(this,ctrl,fromObj);
}


/* method: somDefaultVAssign */
SOMDMetaproxy*  somDefaultVAssign(somAssignCtrl* ctrl,
		SOMObject* fromObj)
{
   return SOM_ResolveD(this,SOMDMetaproxy,SOMObject,somDefaultVAssign)
	(this,ctrl,fromObj);
}


/* method: somDefaultConstVAssign */
SOMDMetaproxy*  somDefaultConstVAssign(somAssignCtrl* ctrl,
		SOMObject* fromObj)
{
   return SOM_ResolveD(this,SOMDMetaproxy,SOMObject,somDefaultConstVAssign)
	(this,ctrl,fromObj);
}


/* method: somInit */
void   somInit()
{
   SOM_ResolveD(this,SOMDMetaproxy,SOMObject,somInit)
	(this);
}


/* method: somFree */
void   somFree()
{
   SOM_ResolveD(this,SOMDMetaproxy,SOMObject,somFree)
	(this);
}


/* method: somUninit */
void   somUninit()
{
   SOM_ResolveD(this,SOMDMetaproxy,SOMObject,somUninit)
	(this);
}


/* method: somGetClass */
SOMClass*   somGetClass()
{
   return SOM_ResolveD(this,SOMDMetaproxy,SOMObject,somGetClass)
	(this);
}


/* method: somGetClassName */
string   somGetClassName()
{
   return SOM_ResolveD(this,SOMDMetaproxy,SOMObject,somGetClassName)
	(this);
}


/* method: somGetSize */
long   somGetSize()
{
   return SOM_ResolveD(this,SOMDMetaproxy,SOMObject,somGetSize)
	(this);
}


/* method: somIsA */
boolean   somIsA(SOMClass* aClassObj)
{
   return SOM_ResolveD(this,SOMDMetaproxy,SOMObject,somIsA)
	(this,aClassObj);
}


/* method: somIsInstanceOf */
boolean   somIsInstanceOf(SOMClass* aClassObj)
{
   return SOM_ResolveD(this,SOMDMetaproxy,SOMObject,somIsInstanceOf)
	(this,aClassObj);
}


/* method: somRespondsTo */
boolean   somRespondsTo(somId mId)
{
   return SOM_ResolveD(this,SOMDMetaproxy,SOMObject,somRespondsTo)
	(this,mId);
}


/* va_list method: somDispatch */
/* the va_list invocation form */
boolean   SOMDMetaproxy_somDispatch(somToken* retValue,
		somId methodId,
		va_list ap)
{
return SOM_ResolveD(this,SOMDMetaproxy,SOMObject,somDispatch)
	(this,retValue,methodId,ap);
}

/* the varargs invocation form */
boolean   somDispatch(somToken* retValue,
		somId methodId,
		...)
{
   va_list ap;
   va_start(ap, methodId);
   boolean __somResult = 
      SOM_ResolveD(this,SOMDMetaproxy,SOMObject,somDispatch)
	(this,retValue,methodId,ap);
   va_end(ap);
   return __somResult;
}


/* va_list method: somClassDispatch */
/* the va_list invocation form */
boolean   SOMDMetaproxy_somClassDispatch(SOMClass* clsObj,
		somToken* retValue,
		somId methodId,
		va_list ap)
{
return SOM_ResolveD(this,SOMDMetaproxy,SOMObject,somClassDispatch)
	(this,clsObj,retValue,methodId,ap);
}

/* the varargs invocation form */
boolean   somClassDispatch(SOMClass* clsObj,
		somToken* retValue,
		somId methodId,
		...)
{
   va_list ap;
   va_start(ap, methodId);
   boolean __somResult = 
      SOM_ResolveD(this,SOMDMetaproxy,SOMObject,somClassDispatch)
	(this,clsObj,retValue,methodId,ap);
   va_end(ap);
   return __somResult;
}


/* method: somCastObj */
boolean   somCastObj(SOMClass* cls)
{
   return SOM_ResolveD(this,SOMDMetaproxy,SOMObject,somCastObj)
	(this,cls);
}


/* method: somResetObj */
boolean   somResetObj()
{
   return SOM_ResolveD(this,SOMDMetaproxy,SOMObject,somResetObj)
	(this);
}


/* va_list method: somDispatchV */
/* the va_list invocation form */
void   SOMDMetaproxy_somDispatchV(somId methodId,
		somId descriptor,
		va_list ap)
{
   SOM_ResolveD(this,SOMDMetaproxy,SOMObject,somDispatchV)
	(this,methodId,descriptor,ap);
}

/* the varargs invocation form */
void   somDispatchV(somId methodId,
		somId descriptor,
		...)
{
   va_list ap;
   va_start(ap, descriptor);
   SOM_ResolveD(this,SOMDMetaproxy,SOMObject,somDispatchV)
	(this,methodId,descriptor,ap);
   va_end(ap);
}


/* va_list method: somDispatchL */
/* the va_list invocation form */
long   SOMDMetaproxy_somDispatchL(somId methodId,
		somId descriptor,
		va_list ap)
{
return SOM_ResolveD(this,SOMDMetaproxy,SOMObject,somDispatchL)
	(this,methodId,descriptor,ap);
}

/* the varargs invocation form */
long   somDispatchL(somId methodId,
		somId descriptor,
		...)
{
   va_list ap;
   va_start(ap, descriptor);
   long __somResult = 
      SOM_ResolveD(this,SOMDMetaproxy,SOMObject,somDispatchL)
	(this,methodId,descriptor,ap);
   va_end(ap);
   return __somResult;
}


/* va_list method: somDispatchA */
/* the va_list invocation form */
void*   SOMDMetaproxy_somDispatchA(somId methodId,
		somId descriptor,
		va_list ap)
{
return SOM_ResolveD(this,SOMDMetaproxy,SOMObject,somDispatchA)
	(this,methodId,descriptor,ap);
}

/* the varargs invocation form */
void*   somDispatchA(somId methodId,
		somId descriptor,
		...)
{
   va_list ap;
   va_start(ap, descriptor);
   void* __somResult = 
      SOM_ResolveD(this,SOMDMetaproxy,SOMObject,somDispatchA)
	(this,methodId,descriptor,ap);
   va_end(ap);
   return __somResult;
}


/* va_list method: somDispatchD */
/* the va_list invocation form */
double   SOMDMetaproxy_somDispatchD(somId methodId,
		somId descriptor,
		va_list ap)
{
return SOM_ResolveD(this,SOMDMetaproxy,SOMObject,somDispatchD)
	(this,methodId,descriptor,ap);
}

/* the varargs invocation form */
double   somDispatchD(somId methodId,
		somId descriptor,
		...)
{
   va_list ap;
   va_start(ap, descriptor);
   double __somResult = 
      SOM_ResolveD(this,SOMDMetaproxy,SOMObject,somDispatchD)
	(this,methodId,descriptor,ap);
   va_end(ap);
   return __somResult;
}


/* method: somPrintSelf */
SOMObject*   somPrintSelf()
{
   return SOM_ResolveD(this,SOMDMetaproxy,SOMObject,somPrintSelf)
	(this);
}


/* method: somDumpSelf */
void   somDumpSelf(long level)
{
   SOM_ResolveD(this,SOMDMetaproxy,SOMObject,somDumpSelf)
	(this,level);
}


/* method: somDumpSelfInt */
void   somDumpSelfInt(long level)
{
   SOM_ResolveD(this,SOMDMetaproxy,SOMObject,somDumpSelfInt)
	(this,level);
}



};   /* SOMDMetaproxy */



#endif       /* SOM_SOMDMetaproxy_xh */
