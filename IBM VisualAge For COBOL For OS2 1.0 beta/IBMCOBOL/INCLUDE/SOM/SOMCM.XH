
/*
 * This file was generated by the SOM Compiler.
 * FileName: c:\somtk\include\somcm.xh.
 * Generated using:
 *     SOM Precompiler somipc: 2.29.1.7
 *     SOM Emitter emitxh: 2.42
 */

/*
 * 
 *    COMPONENT_NAME: somk
 * 
 *    ORIGINS: 27
 * 
 * 
 *    10H9767, 10H9769  (C) COPYRIGHT International Business Machines Corp. 1992,1994
 *    All Rights Reserved
 *    Licensed Materials - Property of IBM
 *    US Government Users Restricted Rights - Use, duplication or
 *    disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
 * 
 *   SOMClassMgr: System Object Model class manager
 */


#ifndef SOM_SOMClassMgr_xh
#define SOM_SOMClassMgr_xh

class SOMClassMgr;

#define SOMClassMgr_MajorVersion 1
#define SOMClassMgr_MinorVersion 4

/* C++ SOM defs */
#include <somcls.xh>

/* C++ parent defs */
#ifndef SOM_SOMObject_xh
#include <somobj.xh>
#endif

#ifndef SOMClassMgr_API
#define SOMClassMgr_API
/*
 * -- The Class API
 */

/*
 * Start of user-defined types:
 */
class SOMClass;
class SOMObject;
class Repository;
typedef
SOMClass* SOMClassArray;

/*
 *  Used for SOM 1.0 binary compatibility
 */
#ifndef _IDL_SEQUENCE_SOMClass_defined
#define _IDL_SEQUENCE_SOMClass_defined
typedef struct {
    unsigned long _maximum;
    unsigned long _length;
    SOMClass **_buffer;
} _IDL_SEQUENCE_SOMClass;
#endif /* _IDL_SEQUENCE_SOMClass_defined */ 

/*
 * End of user-defined types.
 */

/* A procedure to create the SOMClassMgr Class */
SOMEXTERN SOMClass * SOMLINK SOMClassMgrNewClass(
		integer4 majorVersion,
		integer4 minorVersion);

/* The API to the SOMClassMgr class object, and the methods it introduces. */
SOMEXTERN struct SOMClassMgrClassDataStructure {
	SOMClass *classObject;
	somMToken somFindClsInFile;
	somMToken somFindClass;
	somMToken somClassFromId;
	somMToken somRegisterClass;
	somMToken somUnregisterClass;
	somMToken somLocateClassFile;
	somMToken somLoadClassFile;
	somMToken somUnloadClassFile;
	somMToken somGetInitFunction;
	somMToken somMergeInto;
	somMToken somGetRelatedClasses;
	somMToken somSubstituteClass;
	somMToken _get_somInterfaceRepository;
	somMToken _set_somInterfaceRepository;
	somMToken _get_somRegisteredClasses;
	somMToken somBeginPersistentClasses;
	somMToken somEndPersistentClasses;
	somMToken somcmPrivate1;
	somMToken somcmPrivate2;
	somMToken somRegisterClassLibrary;
	somMToken somJoinAffinityGroup;
} SOMDLINK SOMClassMgrClassData;
#define _SOMClassMgr SOMClassMgrClassData.classObject

/* The API to parentMtabs for SOMClassMgr, and the instance data it introduces. */
SOMEXTERN struct SOMClassMgrCClassDataStructure {
	somMethodTabs parentMtab;
	somDToken              instanceDataToken;
} SOMDLINK SOMClassMgrCClassData;

/*
 * -- Typedefs for SOMClassMgr Method Procedures
 */
SOMEXTERN {
typedef SOMClass*   SOMLINK somTP_SOMClassMgr_somLoadClassFile(SOMClassMgr *somSelf,
		somId classId,
		long majorVersion,
		long minorVersion,
		string file);
typedef somTP_SOMClassMgr_somLoadClassFile *somTD_SOMClassMgr_somLoadClassFile;
typedef string   SOMLINK somTP_SOMClassMgr_somLocateClassFile(SOMClassMgr *somSelf,
		somId classId,
		long majorVersion,
		long minorVersion);
typedef somTP_SOMClassMgr_somLocateClassFile *somTD_SOMClassMgr_somLocateClassFile;
typedef void   SOMLINK somTP_SOMClassMgr_somRegisterClass(SOMClassMgr *somSelf,
		SOMClass* classObj);
typedef somTP_SOMClassMgr_somRegisterClass *somTD_SOMClassMgr_somRegisterClass;
typedef void   SOMLINK somTP_SOMClassMgr_somRegisterClassLibrary(SOMClassMgr *somSelf,
		string libraryName,
		somMethodPtr libraryInitRtn);
typedef somTP_SOMClassMgr_somRegisterClassLibrary *somTD_SOMClassMgr_somRegisterClassLibrary;
typedef long   SOMLINK somTP_SOMClassMgr_somUnloadClassFile(SOMClassMgr *somSelf,
		SOMClass* classObj);
typedef somTP_SOMClassMgr_somUnloadClassFile *somTD_SOMClassMgr_somUnloadClassFile;
typedef long   SOMLINK somTP_SOMClassMgr_somUnregisterClass(SOMClassMgr *somSelf,
		SOMClass* classObj);
typedef somTP_SOMClassMgr_somUnregisterClass *somTD_SOMClassMgr_somUnregisterClass;
typedef void   SOMLINK somTP_SOMClassMgr_somBeginPersistentClasses(SOMClassMgr *somSelf);
typedef somTP_SOMClassMgr_somBeginPersistentClasses *somTD_SOMClassMgr_somBeginPersistentClasses;
typedef void   SOMLINK somTP_SOMClassMgr_somEndPersistentClasses(SOMClassMgr *somSelf);
typedef somTP_SOMClassMgr_somEndPersistentClasses *somTD_SOMClassMgr_somEndPersistentClasses;
typedef boolean   SOMLINK somTP_SOMClassMgr_somJoinAffinityGroup(SOMClassMgr *somSelf,
		SOMClass* newClass,
		SOMClass* affClass);
typedef somTP_SOMClassMgr_somJoinAffinityGroup *somTD_SOMClassMgr_somJoinAffinityGroup;
typedef string   SOMLINK somTP_SOMClassMgr_somGetInitFunction(SOMClassMgr *somSelf);
typedef somTP_SOMClassMgr_somGetInitFunction *somTD_SOMClassMgr_somGetInitFunction;
typedef Repository*   SOMLINK somTP_SOMClassMgr__get_somInterfaceRepository(SOMClassMgr *somSelf);
typedef somTP_SOMClassMgr__get_somInterfaceRepository *somTD_SOMClassMgr__get_somInterfaceRepository;
typedef void   SOMLINK somTP_SOMClassMgr__set_somInterfaceRepository(SOMClassMgr *somSelf,
		Repository* somInterfaceRepository);
typedef somTP_SOMClassMgr__set_somInterfaceRepository *somTD_SOMClassMgr__set_somInterfaceRepository;
typedef _IDL_SEQUENCE_SOMClass   SOMLINK somTP_SOMClassMgr__get_somRegisteredClasses(SOMClassMgr *somSelf);
typedef somTP_SOMClassMgr__get_somRegisteredClasses *somTD_SOMClassMgr__get_somRegisteredClasses;
typedef SOMClassArray   SOMLINK somTP_SOMClassMgr_somGetRelatedClasses(SOMClassMgr *somSelf,
		SOMClass* classObj);
typedef somTP_SOMClassMgr_somGetRelatedClasses *somTD_SOMClassMgr_somGetRelatedClasses;
typedef SOMClass*   SOMLINK somTP_SOMClassMgr_somClassFromId(SOMClassMgr *somSelf,
		somId classId);
typedef somTP_SOMClassMgr_somClassFromId *somTD_SOMClassMgr_somClassFromId;
typedef SOMClass*   SOMLINK somTP_SOMClassMgr_somFindClass(SOMClassMgr *somSelf,
		somId classId,
		long majorVersion,
		long minorVersion);
typedef somTP_SOMClassMgr_somFindClass *somTD_SOMClassMgr_somFindClass;
typedef SOMClass*   SOMLINK somTP_SOMClassMgr_somFindClsInFile(SOMClassMgr *somSelf,
		somId classId,
		long majorVersion,
		long minorVersion,
		string file);
typedef somTP_SOMClassMgr_somFindClsInFile *somTD_SOMClassMgr_somFindClsInFile;
typedef void   SOMLINK somTP_SOMClassMgr_somMergeInto(SOMClassMgr *somSelf,
		SOMObject* targetObj);
typedef somTP_SOMClassMgr_somMergeInto *somTD_SOMClassMgr_somMergeInto;
typedef long   SOMLINK somTP_SOMClassMgr_somSubstituteClass(SOMClassMgr *somSelf,
		string origClassName,
		string newClassName);
typedef somTP_SOMClassMgr_somSubstituteClass *somTD_SOMClassMgr_somSubstituteClass;
}

#endif /* SOMClassMgr_API */


/*
 * -- This emitter treats Method Tokens as Thunks by default.
 * -- Use the sc modifier "nothunks" to change this default
 */
#undef somresolve_
#define somresolve_(obj,mToken) ((somMethodProc*)((void)obj, mToken))

/*
 * -- The C++ Wrapper Class for SOMClassMgr
 */
class SOMClassMgr : public SOMObject
{
public:

// SOMClassMgr::new creates the class object if necessary, and then uses somNewNoInit
// to allocate memory and create the object. Initialization is in ctors.
void *operator new(size_t)
{
   if (!_SOMClassMgr) SOMClassMgrNewClass(SOMClassMgr_MajorVersion,SOMClassMgr_MinorVersion);
   return (void*)
      SOM_Resolve(_SOMClassMgr,SOMClass,somNewNoInit)
         ((SOMClass *)((void*)_SOMClassMgr));
}

// SOMClassMgr::delete uses somDestruct.
void operator delete(void * obj)
{
   if (obj && *(void**)obj) {
      SOM_Resolve(obj,SOMObject,somDestruct)
         ((SOMObject*)obj, 1, 0);
   }
}

SOMClassMgr()
{
   if (*(void**)this != 
       ((somParentMtabStructPtr)
        (SOMClassMgrCClassData.parentMtab))->mtab)
      return;
   ((SOMObject*)((void*)this))->somDefaultInit(0);
}

SOMClassMgr(SOMClassMgr* fromObj)
{
   if (*(void**)this != 
       ((somParentMtabStructPtr)
        (SOMClassMgrCClassData.parentMtab))->mtab)
      return;
   ((SOMObject*)((void*)this))->somDefaultCopyInit(0,((SOMObject*)((void*)fromObj)));
}

SOMClassMgr(const SOMClassMgr* fromObj)
{
   if (*(void**)this != 
       ((somParentMtabStructPtr)
        (SOMClassMgrCClassData.parentMtab))->mtab)
      return;
   ((SOMObject*)((void*)this))->somDefaultConstCopyInit(0,((SOMObject*)((void*)fromObj)));
}


/* method: somLoadClassFile */
SOMClass*   somLoadClassFile(somId classId,
		long majorVersion,
		long minorVersion,
		string file)
{
   return SOM_ResolveD(this,SOMClassMgr,SOMClassMgr,somLoadClassFile)
	(this,classId,majorVersion,minorVersion,file);
}


/* method: somLocateClassFile */
string   somLocateClassFile(somId classId,
		long majorVersion,
		long minorVersion)
{
   return SOM_ResolveD(this,SOMClassMgr,SOMClassMgr,somLocateClassFile)
	(this,classId,majorVersion,minorVersion);
}


/* method: somRegisterClass */
void   somRegisterClass(SOMClass* classObj)
{
   SOM_ResolveD(this,SOMClassMgr,SOMClassMgr,somRegisterClass)
	(this,classObj);
}


/* method: somRegisterClassLibrary */
void   somRegisterClassLibrary(string libraryName,
		somMethodPtr libraryInitRtn)
{
   SOM_ResolveD(this,SOMClassMgr,SOMClassMgr,somRegisterClassLibrary)
	(this,libraryName,libraryInitRtn);
}


/* method: somUnloadClassFile */
long   somUnloadClassFile(SOMClass* classObj)
{
   return SOM_ResolveD(this,SOMClassMgr,SOMClassMgr,somUnloadClassFile)
	(this,classObj);
}


/* method: somUnregisterClass */
long   somUnregisterClass(SOMClass* classObj)
{
   return SOM_ResolveD(this,SOMClassMgr,SOMClassMgr,somUnregisterClass)
	(this,classObj);
}


/* method: somBeginPersistentClasses */
void   somBeginPersistentClasses()
{
   SOM_ResolveD(this,SOMClassMgr,SOMClassMgr,somBeginPersistentClasses)
	(this);
}


/* method: somEndPersistentClasses */
void   somEndPersistentClasses()
{
   SOM_ResolveD(this,SOMClassMgr,SOMClassMgr,somEndPersistentClasses)
	(this);
}


/* method: somJoinAffinityGroup */
boolean   somJoinAffinityGroup(SOMClass* newClass,
		SOMClass* affClass)
{
   return SOM_ResolveD(this,SOMClassMgr,SOMClassMgr,somJoinAffinityGroup)
	(this,newClass,affClass);
}


/* method: somGetInitFunction */
string   somGetInitFunction()
{
   return SOM_ResolveD(this,SOMClassMgr,SOMClassMgr,somGetInitFunction)
	(this);
}


/* method: _get_somInterfaceRepository */
Repository*   _get_somInterfaceRepository()
{
   return SOM_ResolveD(this,SOMClassMgr,SOMClassMgr,_get_somInterfaceRepository)
	(this);
}


/* method: _set_somInterfaceRepository */
void   _set_somInterfaceRepository(Repository* somInterfaceRepository)
{
   SOM_ResolveD(this,SOMClassMgr,SOMClassMgr,_set_somInterfaceRepository)
	(this,somInterfaceRepository);
}


/* method: _get_somRegisteredClasses */
_IDL_SEQUENCE_SOMClass   _get_somRegisteredClasses()
{
   return SOM_ResolveD(this,SOMClassMgr,SOMClassMgr,_get_somRegisteredClasses)
	(this);
}


/* method: somGetRelatedClasses */
SOMClassArray   somGetRelatedClasses(SOMClass* classObj)
{
   return SOM_ResolveD(this,SOMClassMgr,SOMClassMgr,somGetRelatedClasses)
	(this,classObj);
}


/* method: somClassFromId */
SOMClass*   somClassFromId(somId classId)
{
   return SOM_ResolveD(this,SOMClassMgr,SOMClassMgr,somClassFromId)
	(this,classId);
}


/* method: somFindClass */
SOMClass*   somFindClass(somId classId,
		long majorVersion,
		long minorVersion)
{
   return SOM_ResolveD(this,SOMClassMgr,SOMClassMgr,somFindClass)
	(this,classId,majorVersion,minorVersion);
}


/* method: somFindClsInFile */
SOMClass*   somFindClsInFile(somId classId,
		long majorVersion,
		long minorVersion,
		string file)
{
   return SOM_ResolveD(this,SOMClassMgr,SOMClassMgr,somFindClsInFile)
	(this,classId,majorVersion,minorVersion,file);
}


/* method: somMergeInto */
void   somMergeInto(SOMObject* targetObj)
{
   SOM_ResolveD(this,SOMClassMgr,SOMClassMgr,somMergeInto)
	(this,targetObj);
}


/* method: somSubstituteClass */
long   somSubstituteClass(string origClassName,
		string newClassName)
{
   return SOM_ResolveD(this,SOMClassMgr,SOMClassMgr,somSubstituteClass)
	(this,origClassName,newClassName);
}



};   /* SOMClassMgr */



#endif       /* SOM_SOMClassMgr_xh */
