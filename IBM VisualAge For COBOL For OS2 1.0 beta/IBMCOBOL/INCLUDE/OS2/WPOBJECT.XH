
/*
 * This file was generated by the SOM Compiler.
 * FileName: wpobject.xh.
 * Generated using:
 *     SOM Precompiler somipc: 2.29.1.2
 *     SOM Emitter emitxh: 2.41
 */

/*
 * 
 *  File:  wptypes.idl
 * 
 *  This file contains the IDL type definitions for the foreign types
 *  defined in the WPSH IDL files.
 * 
 * 
 */


#ifndef SOM_WPObject_xh
#define SOM_WPObject_xh

class WPObject;

#define WPObject_MajorVersion 1
#define WPObject_MinorVersion 2

/*
 * Passthru lines: File: "C.xh", "before"
 */

   #define INCL_WINSTDCNR
   #include <pmstddlg.h>

      class M_WPObject;
      class WPObject;


      #ifdef _wpCreateShadowObject2
         #undef _wpCreateShadowObject2
      #endif
      #define _wpCreateShadowObject2 _wpCreateShadowObjectExt


      /* Object style flags (see wpSetStyle) */

      #define OBJSTYLE_NOMOVE          2
      #define OBJSTYLE_NOLINK          4
      #define OBJSTYLE_NOCOPY          8
      #define OBJSTYLE_NOTDEFAULTICON 16   /* Intentionally not declared CLSSTYLE */ 
      #define OBJSTYLE_TEMPLATE       32
      #define OBJSTYLE_NODELETE       64
      #define OBJSTYLE_NOPRINT       128
      #define OBJSTYLE_NODRAG        256
      #define OBJSTYLE_NOTVISIBLE    512
      #define OBJSTYLE_NOSETTINGS   1024
      #define OBJSTYLE_NORENAME     2048
      #define OBJSTYLE_NODROP       4096
      #define OBJSTYLE_NODROPON     8192   /* Use instead of OBJSTYLE_NODROP, 
                                              because OBJSTYLE_NODROP and     
                                              CLSSTYLE_PRIVATE have the same  
                                              value (DD 86093F) */            
      #define OBJSTYLE_CUSTOMICON   16384  /* Use instead of OBJSTYLE_NOTDEFAULTICON  
                                               because OBJSTYLE_NOTDEFAULTICON and    
                                               CLSSTYLE_NEVERTEMPLATE have the same   
                                               value (DD 86093F) */                   

      /*  Class style flags (see wpclsQueryStyle) */

      #define CLSSTYLE_NEVERMOVE      OBJSTYLE_NOMOVE
      #define CLSSTYLE_NEVERLINK      OBJSTYLE_NOLINK
      #define CLSSTYLE_NEVERCOPY      OBJSTYLE_NOCOPY
      #define CLSSTYLE_NEVERTEMPLATE  16
      #define CLSSTYLE_NEVERDELETE    OBJSTYLE_NODELETE
      #define CLSSTYLE_NEVERPRINT     OBJSTYLE_NOPRINT
      #define CLSSTYLE_NEVERDRAG      OBJSTYLE_NODRAG
      #define CLSSTYLE_NEVERVISIBLE   OBJSTYLE_NOTVISIBLE
      #define CLSSTYLE_NEVERRENAME    OBJSTYLE_NORENAME
      #define CLSSTYLE_PRIVATE        4096   /* Intentionally not declared OBJSTYLE */     
      #define CLSSTYLE_NEVERSETTINGS  OBJSTYLE_NOSETTINGS                      /*DD 86093F*/ 
      #define CLSSTYLE_NEVERDROPON    OBJSTYLE_NODROPON                        /*DD 86093F*/ 
      #define CLSSTYLE_HIDDEN         32768  /* Use instead of CLSSTYLE_PRIVATE          
                                                 because OBJSTYLE_NODROP and             
                                                 CLSSTYLE_PRIVATE have the same          
                                                 value (DD 86093F) */                    
      #define CLSSTYLE_DONTTEMPLATE   65536  /* Use instead of CLSSTYLE_NEVERTEMPLATE    
                                                 because OBJSTYLE_NOTDEFAULTICON and     
                                                 CLSSTYLE_NEVERTEMPLATE have the same    
                                                 value (DD 86093F) */                    

      /* Flags for wpObjectReady() method */ 
      #define OR_NEW           0x00000001
      #define OR_AWAKE         0x00000002
      #define OR_REFERENCE     0x10000000
      #define OR_FROMTEMPLATE (0x00000004 | OR_REFERENCE)
      #define OR_FROMCOPY     (0x00000008 | OR_REFERENCE)
      #define OR_SHADOW       (0x00000010 | OR_REFERENCE)

      /*  Flags for the wpFilterPopupMenu() method */

      #define CTXT_CRANOTHER     0x0001   /* Flags for ulFlags */
      #define CTXT_NEW           CTXT_CRANOTHER
      #define CTXT_OPEN          0x0002
      #define CTXT_WINDOW        0x0004
      #define CTXT_SWITCHTO      CTXT_WINDOW
      #define CTXT_CLOSE         0x0008
      #define CTXT_SETTINGS      0x0010
      #define CTXT_PRINT         0x0020
      #define CTXT_HELP          0x0040
      #define CTXT_DELETE        0x0080
      #define CTXT_COPY          0x0100
      #define CTXT_MOVE          0x0200
      #define CTXT_SHADOW        0x0400
      #define CTXT_LINK          CTXT_SHADOW
      #define CTXT_PROGRAM       0x0800
      #define CTXT_ICON        0x001000
      #define CTXT_TREE        0x002000
      #define CTXT_DETAILS     0x004000
      #define CTXT_FIND        0x008000
      #define CTXT_SELECT      0x010000
      #define CTXT_ARRANGE     0x020000
      #define CTXT_SORT        0x040000
      #define CTXT_SHUTDOWN    0x080000
      #define CTXT_LOCKUP      0x100000
      #define CTXT_PALETTE     0x200000
      #define CTXT_REFRESH     0x400000
      #define CTXT_PICKUP      0x800000              /*rme88844*/
      #define CTXT_PUTDOWN        0x1000000          /*rme88844*/
      #define CTXT_PUTDOWN_CANCEL 0x2000000          /*rme88844*/

     /* Flags for the wpDisplayMenu() method */

     #define MENU_OBJECTPOPUP          0x00000001
     #define MENU_OPENVIEWPOPUP        0x00000002
     #define MENU_TITLEBARPULLDOWN     0x00000003
     #define MENU_TITLEBARPULLDOWNINT  0x00000004
     #define MENU_USER                 0x80000000

      /* common context menu ids */

      #define WPMENUID_USER          0x6500
      #define WPMENUID_PRIMARY            0
      #define WPMENUID_OPEN               1
      #define WPMENUID_HELP               2
      #define WPMENUID_PRINT              3
      #define WPMENUID_SELECT             4
      #define WPMENUID_SORT               5
      #define WPMENUID_TREE               123                                 /*DD 86092F*/  
      #define WPMENUID_FIND               8                                   /*DD 86092F*/  
      #define WPMENUID_CREATEANOTHER      101                                 /*DD 86092F*/  
      #define WPMENUID_MOVE               107                                 /*DD 86092F*/  
      #define WPMENUID_COPY               108                                 /*DD 86092F*/  
      #define WPMENUID_DELETE             109                                 /*DD 86092F*/  
      #define WPMENUID_PROPERTIES         112                                 /*DD 86092F*/  
      #define WPMENUID_SELALL             114                                 /*DD 86092F*/  
      #define WPMENUID_DESELALL           115                                 /*DD 86092F*/  
      #define WPMENUID_RESERVED1          118                                 /*DD 86092F*/  
      #define WPMENUID_CLOSE              120                                 /*DD 86092F*/  
      #define WPMENUID_FORMAT             124                                 /*DD 86092F*/  
      #define WPMENUID_CHKDSK             128                                 /*DD 86092F*/  
      #define WPMENUID_FIXDSK             129                                 /*DD 86092F*/  
      #define WPMENUID_PROGRAM            132                                 /*DD 86092F*/  
      #define WPMENUID_COPYDSK            182                                 /*DD 86092F*/  
      #define WPMENUID_LOCKDISK           184                                 /*DD 86092F*/  
      #define WPMENUID_EJECTDISK          185                                 /*DD 86092F*/  
      #define WPMENUID_UNLOCKDISK         186                                 /*DD 86092F*/  
      #define WPMENUID_PICKUP             188                                 /* rme77131*/  
      #define WPMENUID_PUTDOWN            189                                 /* rme77131*/  
      #define WPMENUID_PUTDOWN_COPY       190                                 /* rme77131*/  
      #define WPMENUID_PUTDOWN_MOVE       191                                 /* rme77131*/  
      #define WPMENUID_PUTDOWN_LINK       192                                 /* rme77131*/  
      #define WPMENUID_PUTDOWN_CANCEL     193                                 /* rme77131*/  
      #define WPMENUID_PUTDOWN_CREATE     194                                 /* rme77131*/  
      #define WPMENUID_ICON               303                                 /*DD 86092F*/  
      #define WPMENUID_DETAILS            304                                 /*DD 86092F*/  
      #define WPMENUID_ARRANGE            309                                 /*DD 86092F*/  
      #define WPMENUID_RESERVED2          315                                 /*DD 86092F*/  
      #define WPMENUID_CREATESHADOW       316                                 /*DD 86092F*/  
      #define WPMENUID_PALETTE            317                                 /*DD 86092F*/  
      #define WPMENUID_REFRESH            503                                 /*DD 86092F*/  
      #define WPMENUID_HELP_FOR_HELP      601                                 /*DD 86092F*/  
      #define WPMENUID_HOWTOGETHELP       601                                 /*DD 86092F*/  
      #define WPMENUID_EXTENDEDHELP       602                                 /*DD 86092F*/  
      #define WPMENUID_HELPKEYS           603                                 /*DD 86092F*/  
      #define WPMENUID_HELPINDEX          604                                 /*DD 86092F*/  
      #define WPMENUID_SHUTDOWN           704                                 /*DD 86092F*/  
      #define WPMENUID_LOCKUP             705                                 /*DD 86092F*/  
      #define WPMENUID_LOGIN              708                                 /*DD 86092F*/  
      #define WPMENUID_LOGOUT             709                                 /*DD 86092F*/  
      #define WPMENUID_ASSIGN             710                                 /*DD 86092F*/  
      #define WPMENUID_UNASSIGN           711                                 /*DD 86092F*/  
      #define WPMENUID_ACCESSNEW          712                                 /*DD 86092F*/  
      #define WPMENUID_SYSTEMSETUP        713                                 /*DD 86092F*/  


      /*  Open views for the wpOpen() method */

      #define OPEN_UNKNOWN      -1
      #define OPEN_DEFAULT       0
      #define OPEN_CONTENTS      1
      #define OPEN_SETTINGS      2
      #define OPEN_HELP          3
      #define OPEN_RUNNING       4
      #define OPEN_PROMPTDLG     5
      #define OPEN_PALETTE       121                                   /*SPLIT*/
      #define OPEN_USER          0x6500

      /*  Definitions for the INUSE list that is kept
       *  for every object via wpAddToObjUseList and
       *  wpRemoveFromObjUseList methods...
       */

      /* This structure is always followed immediately by a type
       * dependant struct such as MEMORYITEM,RECORDITEM,VIEWITEM
       * or some other user defined structure...
       */
      typedef struct _USEITEM
      {
         ULONG  type;                  /* Type of this Item */
         struct _USEITEM *pNext;   /* Next item in use list */
      } USEITEM;
      typedef USEITEM *PUSEITEM;

      #define USAGE_MEMORY          1  /* Values of 'type' */
      #define USAGE_RECORD          4
      #define USAGE_OPENVIEW        5
      #define USAGE_LINK            6
      #define USAGE_OPENFILE       20

      typedef struct _MEMORYITEM       /* USAGE_MEMORY struct */
      {
         ULONG     cbBuffer;           /* Number of bytes in memory block */
      } MEMORYITEM;
      typedef MEMORYITEM *PMEMORYITEM;

      typedef struct _RECORDITEM       /* USAGE_RECORD struct */
      {
         HWND            hwndCnr;      /* Cnr into which object is inserted */
         PMINIRECORDCORE pRecord;      /* Record pointer within that cnr */
         ULONG           ulUser;       /* For application use RECSH */ 
      } RECORDITEM;
      typedef RECORDITEM *PRECORDITEM;

      #define VIEWSTATE_OPENING       0x0001   /* The view is being opened */
      #define VIEWSTATE_OBJECTDELETED 0x0002   /* The object has been deleted */
      #define VIEWSTATE_USERHIDDEN    0x0004   /* The view was hidden by user */
      #define VIEWSTATE_POPULATING    0x0008   /* The view is populating      */
      #define VIEWSTATE_USERMINIMIZED 0x0010   /* The view was minimized by the user */
      #define VIEWSTATE_CLOSING       0x0020   /* The view is closing */
      #define VIEWSTATE_DELETING      0x0040   /* The object is being deleted */

      typedef struct _VIEWITEM         /* USAGE_OPENVIEW struct */
      {
         ULONG        view;            /* Object view that this represents */
         LHANDLE      handle;          /* Open handle */
         ULONG        ulViewState;     /* View State flags */
         HWND         hwndCnr;         /* System use only (window animation) */
         PMINIRECORDCORE pRecord;      /* System use only (window animation) */
      } VIEWITEM;
      typedef VIEWITEM *PVIEWITEM;

      typedef struct _LINKITEM         /* USAGE_LINK struct */
      {
         WPObject    *LinkObj;         /* The link object */
      } LINKITEM;
      typedef LINKITEM *PLINKITEM;

      typedef struct _VIEWFILE         /* USAGE_OPENFILE struct */
      {
         ULONG        ulMenuId;        /* Menu id if association or menu page */
         LHANDLE      handle;          /* Open handle */
         HWND         hwndCnr;         /* System use only (window animation) */
         PMINIRECORDCORE pRecord;      /* System use only (window animation) */
      } VIEWFILE;
      typedef VIEWFILE *PVIEWFILE;

      /* Notes: The class name immediately follows the control block. The
       *        first instance variable control block immediately follows
       *        this.
       */
      typedef struct _WPSRCLASSBLOCK
      {
        SHORT   ClassNameLength;       /* Length of class name, including the
                                        * .. null terminator. This must be a
                                        * .. SHORT and must be at the beginning
                                        * .. of the structure.
                                        */
        USHORT  IVarLength;            /* Length of instance variable
                                        * .. information, including the two-
                                        * .. byte null terminator
                                        */
      } WPSRCLASSBLOCK;

      /*  Persistant storage structures (see wpSaveShort
       *  and wpRestoreShort etc...)
       */


      /* This control structure does not reside in the dormant state.
       * It is used only when a persistant data block is
       * resident in memory - either when an object is being saved or
       * when it is being restored...
       */
      typedef struct _OBJDATA
      {
         WPSRCLASSBLOCK       *CurrentClass;
         WPSRCLASSBLOCK       *First;
         PUCHAR                NextData;
         USHORT                Length;
      } OBJDATA;
      typedef OBJDATA *POBJDATA;

      /*  wpCnrInsertObject/wpCnrRemoveObject structs
       *  and macros...
       */

      typedef struct _CLASSDETAILS     /* Class Details struct */
      {
         PSZ          pszAttribute;    /* Translatable string for a class attribute*/
         PVOID        pSortRecord;     /* Function pointer for sort function for attribute*/
         struct _CLASSDETAILS *pNext; /* Next item in class details list */
      } CLASSDETAILS;
      typedef CLASSDETAILS *PCLASSDETAILS;

      /* Macro to return the object associated with a given MINIRECORDCORE
       * that was inserted using the wpCnrInsertObject method
       */
      #define OBJECT_FROM_PREC( prec )   ( (WPObject *)( * (((PULONG)prec)-2) ) )

      /* Macro to access the app defineable dword within the RECORDITEM
       * structure that is created when an object is put into a list
       * control using the wpCnrInsertObject method.
       */
      PULONG EXPENTRY ShlGetUserWordPtr(
         HWND            hwndCnr,
         PMINIRECORDCORE prec );

      #define USERWORD_FROM_PREC( hwnd, prec )              \ 
         ( (ULONG)( *ShlGetUserWordPtr(hwnd,prec) ) )

      /* Details comparison function definition
       *
       *    Param1  PVOID   - Pointer to details field value
       *    Param2  PVOID   - Pointer to value to be compared with
       *
       *    Returns LONG    - Must be CMP_EQUAL, CMP_GREATER, CMP_LESS
       */
      typedef LONG (EXPENTRY FNCOMPARE)(PVOID,PVOID);
      typedef FNCOMPARE *PFNCOMPARE;

      #define CMP_EQUAL            0
      #define CMP_GREATER          1
      #define CMP_LESS             2
      #define CMP_GREATER_OR_EQUAL 3
      #define CMP_LESS_OR_EQUAL    4
      #define CMP_NOT_EQUAL        5

      #define NUM_CMP_VALUES       6

      /* Owner draw function definition
       *
       *    Param1  HWND  - Handle of window that is being painted
       *    Param2  PVOID - POWNERITEM structure pointer, see the container
       *                    control programming reference for the meaning
       *                    of the fields in this structure.
       *    Param3  PVOID - Pointer to the comparison value to draw (this
       *                    is NULL, except when this function is painting
       *                    its value into the include criteria dialog
       *                    when it points to Criteria.CompareValue...)
       *
       *    Returns BOOL  - TRUE if the field was ownerdrawn, FALSE if the
       *                    container control should do default painting.
       */
      typedef BOOL (EXPENTRY FNOWNDRW)(HWND,PVOID,PVOID);
      typedef FNOWNDRW *PFNOWNDRW;

      /* Details comparison criteria structure
       */
      typedef struct _CRITERIA
      {
         PVOID            pReserved;           /* Reserved - MUST be null!!!! */
         struct _CRITERIA *pNext;
         struct _CRITERIA *pPrev;
         ULONG            ClassFieldInfoIndex; /* Index of the details field  */
         ULONG            LogicalOperator;     /* CRITERIA_AND or CRITERIA_OR */
         ULONG            ComparisonType;      /* CMP_LESS_OR_EQUAL etc...    */
         ULONG            ulLenCompareValue;   /* sizeof(ComparisonData)      */
         CHAR             CompareValue[1];     /* Value to be compared with   */
      } CRITERIA;
      typedef CRITERIA *PCRITERIA;

      #define CRITERIA_AND        0
      #define CRITERIA_OR         1

      /* ClassCriteria structure: points to a linked list of CRITERIA
       * for the given class. ClassCriteria may be linked into a list
       * too - and passed to a filter object, or the wpclsFindObjectFirst
       * method call...
       */
      typedef struct _CLASSCRITERIA                                     /*!INC*/
      {
         struct _CLASSCRITERIA *pNext;
         struct _CLASSCRITERIA *pPrev;
         M_WPObject            *Class;          /* Class object */
         PCRITERIA              pCriteria;      /* Linked list of criteria */
         WPObject              *NotifyObject;   /* Owner of the criteria list */
      } CLASSCRITERIA;
      typedef CLASSCRITERIA *PCLASSCRITERIA;

      /* This structure is passed to a details criteria edit window
       * when it is created, so that it knows the current value and
       * min/max values for the criteria to be edited.
       *
       * As the user modifies the compare value using the criteria
       * edit window, it should update the buffer pointed to by
       * 'pCompareValue'.
       */
      typedef struct _EDITCTLINIT                                       /*!INC*/
      {
         ULONG cb;                /* must have length in control data! MindyP */
         PVOID pCompareValue;     /* Buffer containing the current value */
         ULONG ulLenCompareValue; /* Length of pCompareValue buffer */
         PVOID pMinCompareValue;  /* READ-ONLY parameter, NULL => default */
         PVOID pMaxCompareValue;  /* READ-ONLY parameter, NULL => default */
      } EDITCTLINIT;
      typedef EDITCTLINIT *PEDITCTLINIT;

      /* Structure for wpclsQueryDetailsInfo method
       *
       * CLASSFIELDINFO is identical to the FIELDINFO structure of the
       * container control with the following differences:
       *
       * - The offStruct field from FIELDINFO is reserved.
       * - The offFieldData and usLenFieldData structure elements have
       *   been added.
       * - Compare/Sort/Ownerdraw fields have also been added for the
       *   convenience of the programmer, so that object details can
       *   be customized and objects can be found or included by any
       *   of their displayable object details.
       *
       * For example if the application has the following details data:
       *
       * typedef struct _SAMPLE {
       *   CDATE   cdate;
       *   CTIME   ctime;
       *   PSZ     psz;
       * }  SAMPLE;
       *
       * classfieldinfo[0].offFieldData   = FIELDOFFSET(SAMPLE,cdate);
       * classfieldinfo[0].ulLenFieldData = FIELDOFFSET(SAMPLE,ctime) -
       *                                    FIELDOFFSET(SAMPLE,cdate);
       *
       * classfieldinfo[1].offFieldData   = FIELDOFFSET(SAMPLE,ctime);
       * classfieldinfo[1].ulLenFieldData = FIELDOFFSET(SAMPLE,psz) -
       *                                    FIELDOFFSET(SAMPLE,ctime);
       *
       * classfieldinfo[2].offFieldData   = FIELDOFFSET(SAMPLE,psz);
       * classfieldinfo[2].ulLenFieldData = sizeof(SAMPLE) -
       *                                    FIELDOFFSET(SAMPLE,psz);
       *
       * NOTE: It is essential that the fields be linked in order ex. above
       *       cdate must be followed by ctime and finally psz.
       */
      typedef struct _CLASSFIELDINFO                                    /*!INC*/
      {
         /* Details field attributes
          */
         ULONG      cb;                  /* size of CLASSFIELDINFO struct  */
         ULONG      flData;              /* attributes of field's data     */
         ULONG      flTitle;             /* attributes of field's title    */
         PVOID      pTitleData;          /* title data (default is string) */
                                         /* If CFT_BITMAP, must be HBITMAP */
         ULONG      ulReserved;          /* Reserved                       */
         PVOID      pUserData;           /* pointer to user data           */
         struct _CLASSFIELDINFO *pNextFieldInfo; /* pointer to next linked */
                                                /* CLASSFIELDINFO structure*/
         ULONG      cxWidth;             /* width of field in pels         */
         ULONG      offFieldData;        /* offset from beginning of       */
                                         /*   this class's data for this   */
                                         /*   field. (first field is 0).   */
         ULONG      ulLenFieldData;      /* width of data in bytes.        */
                                         /*   (4 for a pointer).           */
         PFNOWNDRW  pfnOwnerDraw;        /* Ownerdraw procedure for detail */
                                         /* column. Can be NULL except if  */
                                         /* ownerdraw is being used.       */
         /* Include/Sort parameters
          */
         ULONG      flCompare;           /* Flags: for example, use the    */
                                         /*   COMPARE_SUPPORTED flag if    */
                                         /*   your field can be compared   */
         PFNCOMPARE pfnCompare;          /* Comparison function for this   */
                                         /*   field. Can be NULL unless    */
                                         /*   ownerdraw is used.           */
         ULONG      DefaultComparison;   /* This is the default compare    */
                                         /*   operator in the include      */
                                         /*   page criteria dialog. (eg:   */
                                         /*   CMP_LESS_OR_EQUAL)           */
         ULONG      ulLenCompareValue;   /* Maximum length of the compare  */
                                         /*   data. Can be NULL unless     */
                                         /*   ownerdraw is used.           */
         PVOID      pDefCompareValue;    /* The default value to be used   */
                                         /*   for comparisons. Can be NULL */
                                         /*   unless ownerdraw is used.    */
         PVOID      pMinCompareValue;    /* The default value to be used   */
                                         /*   for comparisons.Can be NULL  */
                                         /*   unless ownerdraw is used.    */
         PVOID      pMaxCompareValue;    /* The default value to be used   */
                                         /*   for comparisons.Can be NULL  */
                                         /*   unless ownerdraw is used.    */
         PSZ        pszEditControlClass; /* Window class to be used to edit*/
                                         /*   the compare value. Can be    */
                                         /*   NULL unless ownerdraw is used*/
         PFNCOMPARE pfnSort;             /* Sort function for this @SM09511*/
                                         /*   field. Can be NULL unless    */
                                         /*   ownerdraw is used.           */
         PSZ        *pNewComp;
      } CLASSFIELDINFO;

      typedef CLASSFIELDINFO *PCLASSFIELDINFO;

      #define COMPARE_SUPPORTED      1
      #define SORTBY_SUPPORTED       2

      /* Standard notebook size constants */
      #define STDNOTEBOOKWIDTH    290
      #define STDNOTEBOOKHEIGHT   275

      /* Confirm flags */
      #define CONFIRM_DELETE             0x0001
      #define CONFIRM_DELETEFOLDER       0x0002
      #define CONFIRM_RENAMEFILESWITHEXT 0x0004
      #define CONFIRM_KEEPASSOC          0x0008
      #define CONFIRM_ACTION             0x0010
      #define CONFIRM_PROGRESS           0x0020
      #define CONFIRM_ALLOWFORCEDELETE   0x0040
      #define CONFIRM_FORCEDELETE        0x0080

      #define OK_DELETE             1
      #define NO_DELETE             2
      #define CANCEL_DELETE         3

      #define NUM_OBJDETAILS_FIELDS    5     /* number of object details */

      /* Search Type for wpclsQueryExtendedCriteria */

      #define SEARCH_ALL_FOLDERS 1
      #define SEARCH_THIS_FOLDER 2
      #define SEARCH_THIS_TREE   3

      /* Find method related types and constants */

      typedef WPObject   *OBJECT;                             /* FIND */
      typedef OBJECT     *POBJECT;
      typedef M_WPObject *CLASS;
      typedef CLASS      *PCLASS;
      typedef LHANDLE     HFIND;
      typedef HFIND      *PHFIND;

      /* wpDrop method return code  */

      #define RC_DROP_DROPCOMPLETE 2
      #define RC_DROP_ITEMCOMPLETE 1
      #define RC_DROP_RENDERING    0
      #define RC_DROP_ERROR       -1

      /*handle for files being tracked by the shell */

      typedef LHANDLE HFS;
      #define MAXSZHFS 10       /* size of the translated string */

      #define SETTINGS_PAGE_REMOVED  -1

    /* wpSetConcurrentView values */
      #define CCVIEW_DEFAULT 0
      #define CCVIEW_ON      1
      #define CCVIEW_OFF     2

    /* wpSetMinWindow values */
      #define MINWIN_DEFAULT 0
      #define MINWIN_HIDDEN  1
      #define MINWIN_VIEWER  2
      #define MINWIN_DESKTOP 3

    /* wpSetButtonAppearance values */
      #define HIDEBUTTON      1
      #define MINBUTTON      2
      #define DEFAULTBUTTON  3

      #define  HIDDENMINWINDOW_DEFAULT MINWIN_VIEWER
      #ifndef WPFolder
      #ifndef SOM_WPFolder_xh
        #define WPFolder WPObject
      #endif
      #endif

      typedef struct _TASKREC
      {
         struct _TASKREC *next;     /* next in the list of current tasks   */
         ULONG            useCount; /* can be referenced by multiple object*/
         PVOID            pStdDlg;  /* ptr to standard WP task dialog      */
         WPFolder        *folder;   /* intended folder for the object      */
         LONG             xOrigin;  /* intended position for the object    */
         LONG             yOrigin;  /* intended position for the object    */
         PSZ              pszTitle; /* intended name for the object        */
         ULONG            cbTitle;  /* length of the name buffer           */
         PMINIRECORDCORE  positionAfterRecord; /* intended sort position   */
         BOOL            fKeepAssociations;
         PVOID            pReserved;    /* reserved - equal null           */

      }  TASKREC;
      typedef TASKREC *PTASKREC;

      typedef struct _OBJDETAILS
      {
        PSZ    ObjTitle;
        ULONG  ObjStyle;
        PSZ    ObjClass;
      } OBJDETAILS;
      typedef OBJDETAILS *POBJDETAILS;

#define VIEW_CONTENTS      0x00000001
#define VIEW_SETTINGS      0x00000002
#define VIEW_HELP          0x00000004
#define VIEW_RUNNING       0x00000008
#define VIEW_DETAILS       0x00000010
#define VIEW_TREE          0x00000020
#define VIEW_ANY           0xFFFFFFFF  /* Special case - will find any ViewItem */

/*
 * Passthru some stuff to the .h file
 */


/* C++ SOM defs */
#include <somcls.xh>
#include <somcm.xh>

/* C++ parent defs */
#ifndef SOM_SOMObject_xh
#include <somobj.xh>
#endif

#ifndef WPObject_API
#define WPObject_API
/*
 * -- The Class API
 */

/*
 * Start of user-defined types:
 */
class SOMClass;
class SOMObject;
class WPFolder;
class M_WPObject;
class WPObject;

/*
 * End of user-defined types.
 */

/* A procedure to create the WPObject Class */
class M_WPObject;
SOMEXTERN M_WPObject * SOMLINK WPObjectNewClass(
		integer4 majorVersion,
		integer4 minorVersion);

/* The API to the WPObject class object, and the methods it introduces. */
SOMEXTERN struct WPObjectClassDataStructure {
	M_WPObject *classObject;
	somMToken wpSetTitle;
	somMToken wpQueryTitle;
	somMToken wpSetStyle;
	somMToken wpQueryStyle;
	somMToken wpSetIcon;
	somMToken wpQueryIcon;
	somMToken wpSetFolder;
	somMToken wpQueryFolder;
	somMToken wpSetNextObj;
	somMToken wpQueryNextObj;
	somMToken wpSetDefaultView;
	somMToken wpQueryDefaultView;
	somMToken wpMakeDormant;
	somMToken wpSaveState;
	somMToken wpBeginSave;
	somMToken wpEndSave;
	somMToken wpSaveLong;
	somMToken wpSaveString;
	somMToken wpSaveData;
	somMToken wpAppendSaveData;
	somMToken wpRestoreState;
	somMToken wpBeginRestore;
	somMToken wpEndRestore;
	somMToken wpRestoreLong;
	somMToken wpRestoreString;
	somMToken wpRestoreData;
	somMToken wpExtractRestoreData;
	somMToken wpAllocMem;
	somMToken wpFreeMem;
	somMToken wpAddToObjUseList;
	somMToken wpDeleteFromObjUseList;
	somMToken wpFindUseItem;
	somMToken wpSwitchTo;
	somMToken withdrawn1;
	somMToken wpFilterPopupMenu;
	somMToken wpModifyPopupMenu;
	somMToken wpMenuItemSelected;
	somMToken wpFormatDragItem;
	somMToken wpDrop;
	somMToken wpDragOver;
	somMToken wpRender;
	somMToken wpEndConversation;
	somMToken withdrawn10;
	somMToken wpMakeObject;
	somMToken wpDestroyObject;
	somMToken wpFree;
	somMToken wpCopiedFromTemplate;
	somMToken wpAddSettingsPages;
	somMToken wpAddObjectGeneralPage;
	somMToken wpDisplayHelp;
	somMToken wpMenuItemHelpSelected;
	somMToken wpInsertSettingsPage;
	somMToken wpInsertPopupMenuItems;
	somMToken withdrawn5;
	somMToken withdrawn6;
	somMToken withdrawn4;
	somMToken withdrawn3;
	somMToken wpCnrInsertObject;
	somMToken wpCnrRemoveObject;
	somMToken wpInitData;
	somMToken wpUnInitData;
	somMToken wpSetup;
	somMToken wpScanSetupString;
	somMToken wpSaveImmediate;
	somMToken wpOpen;
	somMToken wpClose;
	somMToken wpHide;
	somMToken wpRestore;
	somMToken wpSetIconData;
	somMToken wpQueryIconData;
	somMToken wpQueryIconSaved;
	somMToken wpDelete;
	somMToken wpConfirmDelete;
	somMToken withdrawn2;
	somMToken withdrawn11;
	somMToken withdrawn7;
	somMToken wpRegisterView;
	somMToken wpIdentify;
	somMToken wpSetDefaultHelp;
	somMToken wpQueryDefaultHelp;
	somMToken wpDoesObjectMatch;
	somMToken wpCnrRefreshDetails;
	somMToken wpSetError;
	somMToken wpQueryError;
	somMToken wpDraggedOverObject;
	somMToken wpDroppedOnObject;
	somMToken wpSetDefaultIconPos;
	somMToken wpQueryDefaultIconPos;
	somMToken wpSetState;
	somMToken wpQueryState;
	somMToken wpSetObjectID;
	somMToken wpQueryObjectID;
	somMToken wpIsDeleteable;
	somMToken wpQueryHandle;
	somMToken wpSaveDeferred;
	somMToken wpAddObjectWindowPage;
	somMToken wpQueryConcurrentView;
	somMToken wpSetConcurrentView;
	somMToken wpQueryMinWindow;
	somMToken wpSetMinWindow;
	somMToken wpViewObject;
	somMToken wpQueryButtonAppearance;
	somMToken wpSetButtonAppearance;
	somMToken wpQueryConfirmations;
	somMToken wpCnrSetEmphasis;
	somMToken wpQueryCoreRecord;
	somMToken wpFindViewItem;
	somMToken wpCreateFromTemplate;
	somMToken wpQueryTrueStyle;
	somMToken wpAssertObjectMutexSem;
	somMToken wpReleaseObjectMutexSem;
	somMToken wpRequestObjectMutexSem;
	somMToken wpCreateAnother;
	somMToken wpCreateShadowObject;
	somMToken wpCopyObject;
	somMToken wpMoveObject;
	somMToken wpLockObject;
	somMToken wpUnlockObject;
	somMToken wpIsLocked;
	somMToken wpRenderComplete;
	somMToken wpQueryDetailsData;
	somMToken wpPrintObject;
	somMToken wpQueryTaskRec;
	somMToken wpSetTaskRec;
	somMToken wpSnoozeNotify;
	somMToken wpModifyStyle;
	somMToken wpSetInsertState;
	somMToken wpFindTaskRec;
	somMToken wpAppendObject;
	somMToken wpReplaceObject;
	somMToken wpQueryNameClashOptions;
	somMToken wpConfirmObjectTitle;
	somMToken _get_pobjNext;
	somMToken wpQueryContainerFlagPtr;
	somMToken wpAddWindowPosKey;
	somMToken wpDeleteWindowPosKeys;
	somMToken wpObjectInsertPreparation;
	somMToken wpCnrDeleteUseItem;
	somMToken wpObjectReady;
	somMToken wpIsObjectInitialized;
	somMToken wpCreateShadowObjectExt;
	somMToken wpSetIconHandle;
	somMToken wpQueryContainer;
	somMToken wpSetContainer;
	somMToken wpDisplayMenu;
	somMToken wpWaitForClose;
	somMToken wpQueryScreenGroupID;
	somMToken wpSetupOnce;
	somMToken wpAddObjectGeneralPage2;
	somMToken wpFindTaskRec2;
	somMToken wpModifyState;
} SOMDLINK WPObjectClassData;
#define _WPObject WPObjectClassData.classObject

/* The API to parentMtabs for WPObject, and the instance data it introduces. */
SOMEXTERN struct WPObjectCClassDataStructure {
	somMethodTabs parentMtab;
	somDToken              instanceDataToken;
} SOMDLINK WPObjectCClassData;

/*
 * -- Typedefs for WPObject Method Procedures
 */
SOMEXTERN {
typedef ULONG   (SOMLINK * somTD_WPObject_wpAddObjectGeneralPage)(WPObject *somSelf,
		HWND hwndNotebook);
typedef ULONG   (SOMLINK * somTD_WPObject_wpAddObjectGeneralPage2)(WPObject *somSelf,
		HWND hwndNotebook);
typedef ULONG   (SOMLINK * somTD_WPObject_wpAddObjectWindowPage)(WPObject *somSelf,
		HWND hwndNotebook);
typedef BOOL   (SOMLINK * somTD_WPObject_wpAddSettingsPages)(WPObject *somSelf,
		HWND hwndNotebook);
typedef BOOL   (SOMLINK * somTD_WPObject_wpAddToObjUseList)(WPObject *somSelf,
		PUSEITEM pUseItem);
typedef PBYTE   (SOMLINK * somTD_WPObject_wpAllocMem)(WPObject *somSelf,
		ULONG cbBytes,
		PULONG prc);
typedef BOOL32   (SOMLINK * somTD_WPObject_wpAppendObject)(WPObject *somSelf,
		WPObject* targetObject,
		BOOL32 fMove);
typedef BOOL   (SOMLINK * somTD_WPObject_wpAssertObjectMutexSem)(WPObject *somSelf);
typedef BOOL   (SOMLINK * somTD_WPObject_wpClose)(WPObject *somSelf);
typedef PMINIRECORDCORE   (SOMLINK * somTD_WPObject_wpCnrInsertObject)(WPObject *somSelf,
		HWND hwndCnr,
		PPOINTL pptlIcon,
		PMINIRECORDCORE preccParent,
		PRECORDINSERT pRecInsert);
typedef BOOL   (SOMLINK * somTD_WPObject_wpCnrRemoveObject)(WPObject *somSelf,
		HWND hwndCnr);
typedef BOOL   (SOMLINK * somTD_WPObject_wpCnrSetEmphasis)(WPObject *somSelf,
		ULONG ulEmphasisAttr,
		BOOL fTurnOn);
typedef ULONG   (SOMLINK * somTD_WPObject_wpConfirmDelete)(WPObject *somSelf,
		ULONG fConfirmations);
typedef ULONG   (SOMLINK * somTD_WPObject_wpConfirmObjectTitle)(WPObject *somSelf,
		WPFolder* Folder,
		WPObject** ppDuplicate,
		PSZ pszTitle,
		ULONG cbTitle,
		ULONG menuID);
typedef void   (SOMLINK * somTD_WPObject_wpCopiedFromTemplate)(WPObject *somSelf);
typedef WPObject*   (SOMLINK * somTD_WPObject_wpCopyObject)(WPObject *somSelf,
		WPFolder* Folder,
		BOOL fLock);
typedef WPObject*   (SOMLINK * somTD_WPObject_wpCreateAnother)(WPObject *somSelf,
		PSZ pszTitle,
		PSZ pszSetupEnv,
		WPFolder* Folder);
typedef WPObject*   (SOMLINK * somTD_WPObject_wpCreateFromTemplate)(WPObject *somSelf,
		WPFolder* folder,
		BOOL fLock);
typedef WPObject*   (SOMLINK * somTD_WPObject_wpCreateShadowObject)(WPObject *somSelf,
		WPFolder* Folder,
		BOOL fLock);
typedef ULONG   (SOMLINK * somTD_WPObject_wpDelete)(WPObject *somSelf,
		ULONG fConfirmations);
typedef BOOL   (SOMLINK * somTD_WPObject_wpDeleteFromObjUseList)(WPObject *somSelf,
		PUSEITEM pUseItem);
typedef BOOL   (SOMLINK * somTD_WPObject_wpDisplayHelp)(WPObject *somSelf,
		ULONG HelpPanelId,
		PSZ HelpLibrary);
typedef HWND   (SOMLINK * somTD_WPObject_wpDisplayMenu)(WPObject *somSelf,
		HWND hwndOwner,
		HWND hwndClient,
		POINTL* ptlPopupPt,
		ULONG ulMenuType,
		ULONG ulReserved);
typedef BOOL   (SOMLINK * somTD_WPObject_wpDoesObjectMatch)(WPObject *somSelf,
		PVOID pvoidExtendedCriteria);
typedef MRESULT   (SOMLINK * somTD_WPObject_wpDraggedOverObject)(WPObject *somSelf,
		WPObject* DraggedOverObject);
typedef MRESULT   (SOMLINK * somTD_WPObject_wpDragOver)(WPObject *somSelf,
		HWND hwndCnr,
		PDRAGINFO pdrgInfo);
typedef MRESULT   (SOMLINK * somTD_WPObject_wpDrop)(WPObject *somSelf,
		HWND hwndCnr,
		PDRAGINFO pdrgInfo,
		PDRAGITEM pdrgItem);
typedef BOOL   (SOMLINK * somTD_WPObject_wpDroppedOnObject)(WPObject *somSelf,
		WPObject* DroppedOnObject);
typedef MRESULT   (SOMLINK * somTD_WPObject_wpEndConversation)(WPObject *somSelf,
		ULONG ulItemID,
		ULONG flResult);
typedef ULONG   (SOMLINK * somTD_WPObject_wpFilterPopupMenu)(WPObject *somSelf,
		ULONG ulFlags,
		HWND hwndCnr,
		BOOL fMultiSelect);
typedef PUSEITEM   (SOMLINK * somTD_WPObject_wpFindUseItem)(WPObject *somSelf,
		ULONG type,
		PUSEITEM pCurrentItem);
typedef BOOL   (SOMLINK * somTD_WPObject_wpFormatDragItem)(WPObject *somSelf,
		PDRAGITEM pdrgItem);
typedef BOOL   (SOMLINK * somTD_WPObject_wpFree)(WPObject *somSelf);
typedef BOOL   (SOMLINK * somTD_WPObject_wpFreeMem)(WPObject *somSelf,
		PBYTE pByte);
typedef BOOL   (SOMLINK * somTD_WPObject_wpHide)(WPObject *somSelf);
typedef void   (SOMLINK * somTD_WPObject_wpInitData)(WPObject *somSelf);
typedef BOOL   (SOMLINK * somTD_WPObject_wpInsertPopupMenuItems)(WPObject *somSelf,
		HWND hwndMenu,
		ULONG iPosition,
		HMODULE hmod,
		ULONG MenuID,
		ULONG SubMenuID);
typedef ULONG   (SOMLINK * somTD_WPObject_wpInsertSettingsPage)(WPObject *somSelf,
		HWND hwndNotebook,
		PPAGEINFO ppageinfo);
typedef BOOL   (SOMLINK * somTD_WPObject_wpMenuItemHelpSelected)(WPObject *somSelf,
		ULONG MenuId);
typedef BOOL   (SOMLINK * somTD_WPObject_wpMenuItemSelected)(WPObject *somSelf,
		HWND hwndFrame,
		ULONG ulMenuId);
typedef BOOL   (SOMLINK * somTD_WPObject_wpModifyPopupMenu)(WPObject *somSelf,
		HWND hwndMenu,
		HWND hwndCnr,
		ULONG iPosition);
typedef BOOL   (SOMLINK * somTD_WPObject_wpMoveObject)(WPObject *somSelf,
		WPFolder* Folder);
typedef HWND   (SOMLINK * somTD_WPObject_wpOpen)(WPObject *somSelf,
		HWND hwndCnr,
		ULONG ulView,
		ULONG param);
typedef BOOL   (SOMLINK * somTD_WPObject_wpPrintObject)(WPObject *somSelf,
		PPRINTDEST pPrintDest,
		ULONG ulReserved);
typedef ULONG   (SOMLINK * somTD_WPObject_wpQueryConcurrentView)(WPObject *somSelf);
typedef ULONG   (SOMLINK * somTD_WPObject_wpQueryButtonAppearance)(WPObject *somSelf);
typedef ULONG   (SOMLINK * somTD_WPObject_wpQueryConfirmations)(WPObject *somSelf);
typedef BOOL   (SOMLINK * somTD_WPObject_wpQueryDefaultHelp)(WPObject *somSelf,
		PULONG pHelpPanelId,
		PSZ HelpLibrary);
typedef ULONG   (SOMLINK * somTD_WPObject_wpQueryDefaultView)(WPObject *somSelf);
typedef ULONG   (SOMLINK * somTD_WPObject_wpQueryDetailsData)(WPObject *somSelf,
		PVOID* ppDetailsData,
		PULONG pcp);
typedef ULONG   (SOMLINK * somTD_WPObject_wpQueryError)(WPObject *somSelf);
typedef BOOL   (SOMLINK * somTD_WPObject_wpSetFolder)(WPObject *somSelf,
		WPObject* container);
typedef WPObject*   (SOMLINK * somTD_WPObject_wpQueryFolder)(WPObject *somSelf);
typedef HPOINTER   (SOMLINK * somTD_WPObject_wpQueryIcon)(WPObject *somSelf);
typedef ULONG   (SOMLINK * somTD_WPObject_wpQueryIconData)(WPObject *somSelf,
		PICONINFO pIconInfo);
typedef ULONG   (SOMLINK * somTD_WPObject_wpQueryMinWindow)(WPObject *somSelf);
typedef ULONG   (SOMLINK * somTD_WPObject_wpQueryNameClashOptions)(WPObject *somSelf,
		ULONG menuID);
typedef ULONG   (SOMLINK * somTD_WPObject_wpQueryStyle)(WPObject *somSelf);
typedef BOOL32   (SOMLINK * somTD_WPObject_wpSetTaskRec)(WPObject *somSelf,
		PTASKREC pNew,
		PTASKREC pOld);
typedef PTASKREC   (SOMLINK * somTD_WPObject_wpFindTaskRec)(WPObject *somSelf);
typedef PSZ   (SOMLINK * somTD_WPObject_wpQueryTitle)(WPObject *somSelf);
typedef BOOL   (SOMLINK * somTD_WPObject_wpRegisterView)(WPObject *somSelf,
		HWND hwndFrame,
		PSZ pszViewTitle);
typedef ULONG   (SOMLINK * somTD_WPObject_wpReleaseObjectMutexSem)(WPObject *somSelf);
typedef MRESULT   (SOMLINK * somTD_WPObject_wpRender)(WPObject *somSelf,
		PDRAGTRANSFER pdxfer);
typedef MRESULT   (SOMLINK * somTD_WPObject_wpRenderComplete)(WPObject *somSelf,
		PDRAGTRANSFER pdxfer,
		ULONG ulResult);
typedef BOOL32   (SOMLINK * somTD_WPObject_wpReplaceObject)(WPObject *somSelf,
		WPObject* targetObject,
		BOOL32 fMove);
typedef ULONG   (SOMLINK * somTD_WPObject_wpRequestObjectMutexSem)(WPObject *somSelf,
		ULONG ulTimeout);
typedef BOOL   (SOMLINK * somTD_WPObject_wpRestore)(WPObject *somSelf);
typedef BOOL   (SOMLINK * somTD_WPObject_wpRestoreData)(WPObject *somSelf,
		PSZ pszClass,
		ULONG ulKey,
		PBYTE pValue,
		PULONG pcbValue);
typedef BOOL   (SOMLINK * somTD_WPObject_wpRestoreLong)(WPObject *somSelf,
		PSZ pszClass,
		ULONG ulKey,
		PULONG pulValue);
typedef BOOL   (SOMLINK * somTD_WPObject_wpRestoreState)(WPObject *somSelf,
		ULONG ulReserved);
typedef BOOL   (SOMLINK * somTD_WPObject_wpRestoreString)(WPObject *somSelf,
		PSZ pszClass,
		ULONG ulKey,
		PSZ pszValue,
		PULONG pcbValue);
typedef BOOL   (SOMLINK * somTD_WPObject_wpSaveData)(WPObject *somSelf,
		PSZ pszClass,
		ULONG ulKey,
		PBYTE pValue,
		ULONG cbValue);
typedef BOOL   (SOMLINK * somTD_WPObject_wpSaveImmediate)(WPObject *somSelf);
typedef BOOL   (SOMLINK * somTD_WPObject_wpSaveDeferred)(WPObject *somSelf);
typedef BOOL   (SOMLINK * somTD_WPObject_wpSaveLong)(WPObject *somSelf,
		PSZ pszClass,
		ULONG ulKey,
		ULONG ulValue);
typedef BOOL   (SOMLINK * somTD_WPObject_wpSaveState)(WPObject *somSelf);
typedef BOOL   (SOMLINK * somTD_WPObject_wpSaveString)(WPObject *somSelf,
		PSZ pszClass,
		ULONG ulKey,
		PSZ pszValue);
typedef BOOL   (SOMLINK * somTD_WPObject_wpScanSetupString)(WPObject *somSelf,
		PSZ pszSetupString,
		PSZ pszKey,
		PSZ pszValue,
		PULONG pcbValue);
typedef void   (SOMLINK * somTD_WPObject_wpSetConcurrentView)(WPObject *somSelf,
		ULONG ulCCView);
typedef void   (SOMLINK * somTD_WPObject_wpSetButtonAppearance)(WPObject *somSelf,
		ULONG ulButtonType);
typedef BOOL   (SOMLINK * somTD_WPObject_wpSetDefaultHelp)(WPObject *somSelf,
		ULONG HelpPanelId,
		PSZ HelpLibrary);
typedef BOOL   (SOMLINK * somTD_WPObject_wpSetDefaultView)(WPObject *somSelf,
		ULONG ulView);
typedef BOOL   (SOMLINK * somTD_WPObject_wpSetError)(WPObject *somSelf,
		ULONG ulErrorId);
typedef BOOL   (SOMLINK * somTD_WPObject_wpSetIconHandle)(WPObject *somSelf,
		HPOINTER hptrNewIcon);
typedef USHORT   (SOMLINK * somTD_WPObject_wpQueryScreenGroupID)(WPObject *somSelf,
		USHORT usPrevSgId);
typedef BOOL   (SOMLINK * somTD_WPObject_wpSetupOnce)(WPObject *somSelf,
		PSZ pszSetupString);
typedef BOOL   (SOMLINK * somTD_WPObject_wpSetIcon)(WPObject *somSelf,
		HPOINTER hptrNewIcon);
typedef BOOL   (SOMLINK * somTD_WPObject_wpSetIconData)(WPObject *somSelf,
		PICONINFO pIconInfo);
typedef void   (SOMLINK * somTD_WPObject_wpSetMinWindow)(WPObject *somSelf,
		ULONG ulMinWindow);
typedef BOOL   (SOMLINK * somTD_WPObject_wpSetStyle)(WPObject *somSelf,
		ULONG ulNewStyle);
typedef BOOL   (SOMLINK * somTD_WPObject_wpModifyStyle)(WPObject *somSelf,
		ULONG ulStyleFlags,
		ULONG ulStyleMask);
typedef BOOL   (SOMLINK * somTD_WPObject_wpSetTitle)(WPObject *somSelf,
		PSZ pszNewTitle);
typedef BOOL   (SOMLINK * somTD_WPObject_wpSetup)(WPObject *somSelf,
		PSZ pszSetupString);
typedef BOOL   (SOMLINK * somTD_WPObject_wpSwitchTo)(WPObject *somSelf,
		ULONG View);
typedef void   (SOMLINK * somTD_WPObject_wpUnInitData)(WPObject *somSelf);
typedef HWND   (SOMLINK * somTD_WPObject_wpViewObject)(WPObject *somSelf,
		HWND hwndCnr,
		ULONG ulView,
		ULONG param);
typedef ULONG   (SOMLINK * somTD_WPObject_wpQueryTrueStyle)(WPObject *somSelf);
typedef HOBJECT   (SOMLINK * somTD_WPObject_wpQueryHandle)(WPObject *somSelf);
typedef BOOL   (SOMLINK * somTD_WPObject_wpUnlockObject)(WPObject *somSelf);
typedef void   (SOMLINK * somTD_WPObject_wpObjectReady)(WPObject *somSelf,
		ULONG ulCode,
		WPObject* refObject);
typedef BOOL   (SOMLINK * somTD_WPObject_wpIsObjectInitialized)(WPObject *somSelf);
typedef WPObject*   (SOMLINK * somTD_WPObject_wpCreateShadowObjectExt)(WPObject *somSelf,
		WPFolder* Folder,
		BOOL fLock,
		PSZ pszSetup,
		M_WPObject* shadowClass);
typedef BOOL   (SOMLINK * somTD_WPObject_wpCnrDeleteUseItem)(WPObject *somSelf,
		HWND hwndCnr);
typedef BOOL   (SOMLINK * somTD_WPObject_wpIsDeleteable)(WPObject *somSelf);
typedef PMINIRECORDCORE   (SOMLINK * somTD_WPObject_wpQueryCoreRecord)(WPObject *somSelf);
typedef BOOL   (SOMLINK * somTD_WPObject_wpSetObjectID)(WPObject *somSelf,
		PSZ pszObjectID);
typedef PSZ   (SOMLINK * somTD_WPObject_wpQueryObjectID)(WPObject *somSelf);
typedef BOOL   (SOMLINK * somTD_WPObject_wpSetDefaultIconPos)(WPObject *somSelf,
		PPOINTL pPointl);
typedef BOOL   (SOMLINK * somTD_WPObject_wpQueryDefaultIconPos)(WPObject *somSelf,
		PPOINTL pPointl);
typedef void   (SOMLINK * somTD_WPObject_wpCnrRefreshDetails)(WPObject *somSelf);
typedef PVIEWITEM   (SOMLINK * somTD_WPObject_wpFindViewItem)(WPObject *somSelf,
		ULONG flViews,
		PVIEWITEM pCurrentItem);
typedef void   (SOMLINK * somTD_WPObject_wpLockObject)(WPObject *somSelf);
typedef BOOL   (SOMLINK * somTD_WPObject_wpIsLocked)(WPObject *somSelf);
typedef PULONG   (SOMLINK * somTD_WPObject_wpQueryContainerFlagPtr)(WPObject *somSelf);
typedef ULONG   (SOMLINK * somTD_WPObject_wpWaitForClose)(WPObject *somSelf,
		LHANDLE lhView,
		ULONG ulViews,
		long lTimeOut,
		BOOL bAutoClose);

/*
 * -- Typedefs for Reintroduced Wrapper Methods
 */
typedef void   (SOMLINK * somTD_WPObject_somDefaultInit)(WPObject *somSelf,
		somInitCtrl* ctrl);
typedef void   (SOMLINK * somTD_WPObject_somDestruct)(WPObject *somSelf,
		octet doFree,
		somDestructCtrl* ctrl);
typedef void   (SOMLINK * somTD_WPObject_somDefaultCopyInit)(WPObject *somSelf,
		somInitCtrl* ctrl,
		SOMObject* fromObj);
typedef WPObject*   (SOMLINK * somTD_WPObject_somDefaultAssign)(WPObject *somSelf,
		somAssignCtrl* ctrl,
		SOMObject* fromObj);
typedef void   (SOMLINK * somTD_WPObject_somDefaultConstCopyInit)(WPObject *somSelf,
		somInitCtrl* ctrl,
		SOMObject* fromObj);
typedef void   (SOMLINK * somTD_WPObject_somDefaultVCopyInit)(WPObject *somSelf,
		somInitCtrl* ctrl,
		SOMObject* fromObj);
typedef void   (SOMLINK * somTD_WPObject_somDefaultConstVCopyInit)(WPObject *somSelf,
		somInitCtrl* ctrl,
		SOMObject* fromObj);
typedef WPObject*   (SOMLINK * somTD_WPObject_somDefaultConstAssign)(WPObject *somSelf,
		somAssignCtrl* ctrl,
		SOMObject* fromObj);
typedef WPObject*   (SOMLINK * somTD_WPObject_somDefaultVAssign)(WPObject *somSelf,
		somAssignCtrl* ctrl,
		SOMObject* fromObj);
typedef WPObject*   (SOMLINK * somTD_WPObject_somDefaultConstVAssign)(WPObject *somSelf,
		somAssignCtrl* ctrl,
		SOMObject* fromObj);
typedef void   (SOMLINK * somTD_WPObject_somInit)(WPObject *somSelf);
typedef void   (SOMLINK * somTD_WPObject_somFree)(WPObject *somSelf);
typedef void   (SOMLINK * somTD_WPObject_somUninit)(WPObject *somSelf);
typedef M_WPObject*   (SOMLINK * somTD_WPObject_somGetClass)(WPObject *somSelf);
typedef string   (SOMLINK * somTD_WPObject_somGetClassName)(WPObject *somSelf);
typedef long   (SOMLINK * somTD_WPObject_somGetSize)(WPObject *somSelf);
typedef boolean   (SOMLINK * somTD_WPObject_somIsA)(WPObject *somSelf,
		SOMClass* aClassObj);
typedef boolean   (SOMLINK * somTD_WPObject_somIsInstanceOf)(WPObject *somSelf,
		SOMClass* aClassObj);
typedef boolean   (SOMLINK * somTD_WPObject_somRespondsTo)(WPObject *somSelf,
		somId mId);
typedef boolean   (SOMLINK * somTD_WPObject_somDispatch)(WPObject *somSelf,
		somToken* retValue,
		somId methodId,
		va_list ap);
typedef boolean   (SOMLINK * somTD_WPObject_somClassDispatch)(WPObject *somSelf,
		SOMClass* clsObj,
		somToken* retValue,
		somId methodId,
		va_list ap);
typedef boolean   (SOMLINK * somTD_WPObject_somCastObj)(WPObject *somSelf,
		SOMClass* cls);
typedef boolean   (SOMLINK * somTD_WPObject_somResetObj)(WPObject *somSelf);
typedef void   (SOMLINK * somTD_WPObject_somDispatchV)(WPObject *somSelf,
		somId methodId,
		somId descriptor,
		va_list ap);
typedef long   (SOMLINK * somTD_WPObject_somDispatchL)(WPObject *somSelf,
		somId methodId,
		somId descriptor,
		va_list ap);
typedef void*   (SOMLINK * somTD_WPObject_somDispatchA)(WPObject *somSelf,
		somId methodId,
		somId descriptor,
		va_list ap);
typedef double   (SOMLINK * somTD_WPObject_somDispatchD)(WPObject *somSelf,
		somId methodId,
		somId descriptor,
		va_list ap);
typedef SOMObject*   (SOMLINK * somTD_WPObject_somPrintSelf)(WPObject *somSelf);
typedef void   (SOMLINK * somTD_WPObject_somDumpSelf)(WPObject *somSelf,
		long level);
typedef void   (SOMLINK * somTD_WPObject_somDumpSelfInt)(WPObject *somSelf,
		long level);
}

#endif /* WPObject_API */


/*
 * -- This emitter treats Method Tokens as Thunks by default.
 * -- Use the sc modifier "nothunks" to change this default
 */
#undef somresolve_
#define somresolve_(obj,mToken) ((somMethodProc*)((void)obj, mToken))

/*
 * -- The C++ Wrapper Class for WPObject
 */
class WPObject : public SOMObject
{
public:

// WPObject::new creates the class object if necessary, and then uses somNewNoInit
// to allocate memory and create the object. Initialization is in ctors.
void *operator new(size_t size)
{
   SOM_IgnoreWarning(size);
   if (!_WPObject) WPObjectNewClass(WPObject_MajorVersion,WPObject_MinorVersion);
   return (void*)
      SOM_Resolve(_WPObject,SOMClass,somNewNoInit)
         ((SOMClass *)((void*)_WPObject));
}

// WPObject::delete uses the default deallocator for the object's class.
void operator delete(void * obj)
{
   somToken objCls = obj ? *(void**)obj : (somToken) NULL;
   if (somIsObj(objCls)) {
      SOM_Resolve(objCls,SOMClass,somDeallocate)
         ((SOMClass*)objCls, (string)obj);
   }
}

WPObject()
{
   if (*(void**)this != 
       ((somParentMtabStructPtr)
        (WPObjectCClassData.parentMtab))->mtab)
      return;
   somDefaultInit(0);
}

WPObject(WPObject* fromObj)
{
   if (*(void**)this != 
       ((somParentMtabStructPtr)
        (WPObjectCClassData.parentMtab))->mtab)
      return;
   somDefaultCopyInit(0,((SOMObject*)((void*)fromObj)));
}

WPObject(const WPObject* fromObj)
{
   if (*(void**)this != 
       ((somParentMtabStructPtr)
        (WPObjectCClassData.parentMtab))->mtab)
      return;
   somDefaultConstCopyInit(0,((SOMObject*)((void*)fromObj)));
}

~WPObject()
{
   if (!somIsObj(this)) return;
   somDestruct(0,0);
   *(void**)this = **(void***)this;
}


/* method: wpAddObjectGeneralPage */
ULONG   wpAddObjectGeneralPage(HWND hwndNotebook)
{
   return SOM_ResolveD(this,WPObject,WPObject,wpAddObjectGeneralPage)
	(this,hwndNotebook);
}


/* method: wpAddObjectGeneralPage2 */
ULONG   wpAddObjectGeneralPage2(HWND hwndNotebook)
{
   return SOM_ResolveD(this,WPObject,WPObject,wpAddObjectGeneralPage2)
	(this,hwndNotebook);
}


/* method: wpAddObjectWindowPage */
ULONG   wpAddObjectWindowPage(HWND hwndNotebook)
{
   return SOM_ResolveD(this,WPObject,WPObject,wpAddObjectWindowPage)
	(this,hwndNotebook);
}


/* method: wpAddSettingsPages */
BOOL   wpAddSettingsPages(HWND hwndNotebook)
{
   return SOM_ResolveD(this,WPObject,WPObject,wpAddSettingsPages)
	(this,hwndNotebook);
}


/* method: wpAddToObjUseList */
BOOL   wpAddToObjUseList(PUSEITEM pUseItem)
{
   return SOM_ResolveD(this,WPObject,WPObject,wpAddToObjUseList)
	(this,pUseItem);
}


/* method: wpAllocMem */
PBYTE   wpAllocMem(ULONG cbBytes,
		PULONG prc)
{
   return SOM_ResolveD(this,WPObject,WPObject,wpAllocMem)
	(this,cbBytes,prc);
}


/* method: wpAppendObject */
BOOL32   wpAppendObject(WPObject* targetObject,
		BOOL32 fMove)
{
   return SOM_ResolveD(this,WPObject,WPObject,wpAppendObject)
	(this,targetObject,fMove);
}


/* method: wpAssertObjectMutexSem */
BOOL   wpAssertObjectMutexSem()
{
   return SOM_ResolveD(this,WPObject,WPObject,wpAssertObjectMutexSem)
	(this);
}


/* method: wpClose */
BOOL   wpClose()
{
   return SOM_ResolveD(this,WPObject,WPObject,wpClose)
	(this);
}


/* method: wpCnrInsertObject */
PMINIRECORDCORE   wpCnrInsertObject(HWND hwndCnr,
		PPOINTL pptlIcon,
		PMINIRECORDCORE preccParent,
		PRECORDINSERT pRecInsert)
{
   return SOM_ResolveD(this,WPObject,WPObject,wpCnrInsertObject)
	(this,hwndCnr,pptlIcon,preccParent,pRecInsert);
}


/* method: wpCnrRemoveObject */
BOOL   wpCnrRemoveObject(HWND hwndCnr)
{
   return SOM_ResolveD(this,WPObject,WPObject,wpCnrRemoveObject)
	(this,hwndCnr);
}


/* method: wpCnrSetEmphasis */
BOOL   wpCnrSetEmphasis(ULONG ulEmphasisAttr,
		BOOL fTurnOn)
{
   return SOM_ResolveD(this,WPObject,WPObject,wpCnrSetEmphasis)
	(this,ulEmphasisAttr,fTurnOn);
}


/* method: wpConfirmDelete */
ULONG   wpConfirmDelete(ULONG fConfirmations)
{
   return SOM_ResolveD(this,WPObject,WPObject,wpConfirmDelete)
	(this,fConfirmations);
}


/* method: wpConfirmObjectTitle */
ULONG   wpConfirmObjectTitle(WPFolder* Folder,
		WPObject** ppDuplicate,
		PSZ pszTitle,
		ULONG cbTitle,
		ULONG menuID)
{
   return SOM_ResolveD(this,WPObject,WPObject,wpConfirmObjectTitle)
	(this,Folder,ppDuplicate,pszTitle,cbTitle,menuID);
}


/* method: wpCopiedFromTemplate */
void   wpCopiedFromTemplate()
{
   SOM_ResolveD(this,WPObject,WPObject,wpCopiedFromTemplate)
	(this);
}


/* method: wpCopyObject */
WPObject*   wpCopyObject(WPFolder* Folder,
		BOOL fLock)
{
   return SOM_ResolveD(this,WPObject,WPObject,wpCopyObject)
	(this,Folder,fLock);
}


/* method: wpCreateAnother */
WPObject*   wpCreateAnother(PSZ pszTitle,
		PSZ pszSetupEnv,
		WPFolder* Folder)
{
   return SOM_ResolveD(this,WPObject,WPObject,wpCreateAnother)
	(this,pszTitle,pszSetupEnv,Folder);
}


/* method: wpCreateFromTemplate */
WPObject*   wpCreateFromTemplate(WPFolder* folder,
		BOOL fLock)
{
   return SOM_ResolveD(this,WPObject,WPObject,wpCreateFromTemplate)
	(this,folder,fLock);
}


/* method: wpCreateShadowObject */
WPObject*   wpCreateShadowObject(WPFolder* Folder,
		BOOL fLock)
{
   return SOM_ResolveD(this,WPObject,WPObject,wpCreateShadowObject)
	(this,Folder,fLock);
}


/* method: wpDelete */
ULONG   wpDelete(ULONG fConfirmations)
{
   return SOM_ResolveD(this,WPObject,WPObject,wpDelete)
	(this,fConfirmations);
}


/* method: wpDeleteFromObjUseList */
BOOL   wpDeleteFromObjUseList(PUSEITEM pUseItem)
{
   return SOM_ResolveD(this,WPObject,WPObject,wpDeleteFromObjUseList)
	(this,pUseItem);
}


/* method: wpDisplayHelp */
BOOL   wpDisplayHelp(ULONG HelpPanelId,
		PSZ HelpLibrary)
{
   return SOM_ResolveD(this,WPObject,WPObject,wpDisplayHelp)
	(this,HelpPanelId,HelpLibrary);
}


/* method: wpDisplayMenu */
HWND   wpDisplayMenu(HWND hwndOwner,
		HWND hwndClient,
		POINTL* ptlPopupPt,
		ULONG ulMenuType,
		ULONG ulReserved)
{
   return SOM_ResolveD(this,WPObject,WPObject,wpDisplayMenu)
	(this,hwndOwner,hwndClient,ptlPopupPt,ulMenuType,ulReserved);
}


/* method: wpDoesObjectMatch */
BOOL   wpDoesObjectMatch(PVOID pvoidExtendedCriteria)
{
   return SOM_ResolveD(this,WPObject,WPObject,wpDoesObjectMatch)
	(this,pvoidExtendedCriteria);
}


/* method: wpDraggedOverObject */
MRESULT   wpDraggedOverObject(WPObject* DraggedOverObject)
{
   return SOM_ResolveD(this,WPObject,WPObject,wpDraggedOverObject)
	(this,DraggedOverObject);
}


/* method: wpDragOver */
MRESULT   wpDragOver(HWND hwndCnr,
		PDRAGINFO pdrgInfo)
{
   return SOM_ResolveD(this,WPObject,WPObject,wpDragOver)
	(this,hwndCnr,pdrgInfo);
}


/* method: wpDrop */
MRESULT   wpDrop(HWND hwndCnr,
		PDRAGINFO pdrgInfo,
		PDRAGITEM pdrgItem)
{
   return SOM_ResolveD(this,WPObject,WPObject,wpDrop)
	(this,hwndCnr,pdrgInfo,pdrgItem);
}


/* method: wpDroppedOnObject */
BOOL   wpDroppedOnObject(WPObject* DroppedOnObject)
{
   return SOM_ResolveD(this,WPObject,WPObject,wpDroppedOnObject)
	(this,DroppedOnObject);
}


/* method: wpEndConversation */
MRESULT   wpEndConversation(ULONG ulItemID,
		ULONG flResult)
{
   return SOM_ResolveD(this,WPObject,WPObject,wpEndConversation)
	(this,ulItemID,flResult);
}


/* method: wpFilterPopupMenu */
ULONG   wpFilterPopupMenu(ULONG ulFlags,
		HWND hwndCnr,
		BOOL fMultiSelect)
{
   return SOM_ResolveD(this,WPObject,WPObject,wpFilterPopupMenu)
	(this,ulFlags,hwndCnr,fMultiSelect);
}


/* method: wpFindUseItem */
PUSEITEM   wpFindUseItem(ULONG type,
		PUSEITEM pCurrentItem)
{
   return SOM_ResolveD(this,WPObject,WPObject,wpFindUseItem)
	(this,type,pCurrentItem);
}


/* method: wpFormatDragItem */
BOOL   wpFormatDragItem(PDRAGITEM pdrgItem)
{
   return SOM_ResolveD(this,WPObject,WPObject,wpFormatDragItem)
	(this,pdrgItem);
}


/* method: wpFree */
BOOL   wpFree()
{
   return SOM_ResolveD(this,WPObject,WPObject,wpFree)
	(this);
}


/* method: wpFreeMem */
BOOL   wpFreeMem(PBYTE pByte)
{
   return SOM_ResolveD(this,WPObject,WPObject,wpFreeMem)
	(this,pByte);
}


/* method: wpHide */
BOOL   wpHide()
{
   return SOM_ResolveD(this,WPObject,WPObject,wpHide)
	(this);
}


/* method: wpInitData */
void   wpInitData()
{
   SOM_ResolveD(this,WPObject,WPObject,wpInitData)
	(this);
}


/* method: wpInsertPopupMenuItems */
BOOL   wpInsertPopupMenuItems(HWND hwndMenu,
		ULONG iPosition,
		HMODULE hmod,
		ULONG MenuID,
		ULONG SubMenuID)
{
   return SOM_ResolveD(this,WPObject,WPObject,wpInsertPopupMenuItems)
	(this,hwndMenu,iPosition,hmod,MenuID,SubMenuID);
}


/* method: wpInsertSettingsPage */
ULONG   wpInsertSettingsPage(HWND hwndNotebook,
		PPAGEINFO ppageinfo)
{
   return SOM_ResolveD(this,WPObject,WPObject,wpInsertSettingsPage)
	(this,hwndNotebook,ppageinfo);
}


/* method: wpMenuItemHelpSelected */
BOOL   wpMenuItemHelpSelected(ULONG MenuId)
{
   return SOM_ResolveD(this,WPObject,WPObject,wpMenuItemHelpSelected)
	(this,MenuId);
}


/* method: wpMenuItemSelected */
BOOL   wpMenuItemSelected(HWND hwndFrame,
		ULONG ulMenuId)
{
   return SOM_ResolveD(this,WPObject,WPObject,wpMenuItemSelected)
	(this,hwndFrame,ulMenuId);
}


/* method: wpModifyPopupMenu */
BOOL   wpModifyPopupMenu(HWND hwndMenu,
		HWND hwndCnr,
		ULONG iPosition)
{
   return SOM_ResolveD(this,WPObject,WPObject,wpModifyPopupMenu)
	(this,hwndMenu,hwndCnr,iPosition);
}


/* method: wpMoveObject */
BOOL   wpMoveObject(WPFolder* Folder)
{
   return SOM_ResolveD(this,WPObject,WPObject,wpMoveObject)
	(this,Folder);
}


/* method: wpOpen */
HWND   wpOpen(HWND hwndCnr,
		ULONG ulView,
		ULONG param)
{
   return SOM_ResolveD(this,WPObject,WPObject,wpOpen)
	(this,hwndCnr,ulView,param);
}


/* method: wpPrintObject */
BOOL   wpPrintObject(PPRINTDEST pPrintDest,
		ULONG ulReserved)
{
   return SOM_ResolveD(this,WPObject,WPObject,wpPrintObject)
	(this,pPrintDest,ulReserved);
}


/* method: wpQueryConcurrentView */
ULONG   wpQueryConcurrentView()
{
   return SOM_ResolveD(this,WPObject,WPObject,wpQueryConcurrentView)
	(this);
}


/* method: wpQueryButtonAppearance */
ULONG   wpQueryButtonAppearance()
{
   return SOM_ResolveD(this,WPObject,WPObject,wpQueryButtonAppearance)
	(this);
}


/* method: wpQueryConfirmations */
ULONG   wpQueryConfirmations()
{
   return SOM_ResolveD(this,WPObject,WPObject,wpQueryConfirmations)
	(this);
}


/* method: wpQueryDefaultHelp */
BOOL   wpQueryDefaultHelp(PULONG pHelpPanelId,
		PSZ HelpLibrary)
{
   return SOM_ResolveD(this,WPObject,WPObject,wpQueryDefaultHelp)
	(this,pHelpPanelId,HelpLibrary);
}


/* method: wpQueryDefaultView */
ULONG   wpQueryDefaultView()
{
   return SOM_ResolveD(this,WPObject,WPObject,wpQueryDefaultView)
	(this);
}


/* method: wpQueryDetailsData */
ULONG   wpQueryDetailsData(PVOID* ppDetailsData,
		PULONG pcp)
{
   return SOM_ResolveD(this,WPObject,WPObject,wpQueryDetailsData)
	(this,ppDetailsData,pcp);
}


/* method: wpQueryError */
ULONG   wpQueryError()
{
   return SOM_ResolveD(this,WPObject,WPObject,wpQueryError)
	(this);
}


/* method: wpSetFolder */
BOOL   wpSetFolder(WPObject* container)
{
   return SOM_ResolveD(this,WPObject,WPObject,wpSetFolder)
	(this,container);
}


/* method: wpQueryFolder */
WPObject*   wpQueryFolder()
{
   return SOM_ResolveD(this,WPObject,WPObject,wpQueryFolder)
	(this);
}


/* method: wpQueryIcon */
HPOINTER   wpQueryIcon()
{
   return SOM_ResolveD(this,WPObject,WPObject,wpQueryIcon)
	(this);
}


/* method: wpQueryIconData */
ULONG   wpQueryIconData(PICONINFO pIconInfo)
{
   return SOM_ResolveD(this,WPObject,WPObject,wpQueryIconData)
	(this,pIconInfo);
}


/* method: wpQueryMinWindow */
ULONG   wpQueryMinWindow()
{
   return SOM_ResolveD(this,WPObject,WPObject,wpQueryMinWindow)
	(this);
}


/* method: wpQueryNameClashOptions */
ULONG   wpQueryNameClashOptions(ULONG menuID)
{
   return SOM_ResolveD(this,WPObject,WPObject,wpQueryNameClashOptions)
	(this,menuID);
}


/* method: wpQueryStyle */
ULONG   wpQueryStyle()
{
   return SOM_ResolveD(this,WPObject,WPObject,wpQueryStyle)
	(this);
}


/* method: wpSetTaskRec */
BOOL32   wpSetTaskRec(PTASKREC pNew,
		PTASKREC pOld)
{
   return SOM_ResolveD(this,WPObject,WPObject,wpSetTaskRec)
	(this,pNew,pOld);
}


/* method: wpFindTaskRec */
PTASKREC   wpFindTaskRec()
{
   return SOM_ResolveD(this,WPObject,WPObject,wpFindTaskRec)
	(this);
}


/* method: wpQueryTitle */
PSZ   wpQueryTitle()
{
   return SOM_ResolveD(this,WPObject,WPObject,wpQueryTitle)
	(this);
}


/* method: wpRegisterView */
BOOL   wpRegisterView(HWND hwndFrame,
		PSZ pszViewTitle)
{
   return SOM_ResolveD(this,WPObject,WPObject,wpRegisterView)
	(this,hwndFrame,pszViewTitle);
}


/* method: wpReleaseObjectMutexSem */
ULONG   wpReleaseObjectMutexSem()
{
   return SOM_ResolveD(this,WPObject,WPObject,wpReleaseObjectMutexSem)
	(this);
}


/* method: wpRender */
MRESULT   wpRender(PDRAGTRANSFER pdxfer)
{
   return SOM_ResolveD(this,WPObject,WPObject,wpRender)
	(this,pdxfer);
}


/* method: wpRenderComplete */
MRESULT   wpRenderComplete(PDRAGTRANSFER pdxfer,
		ULONG ulResult)
{
   return SOM_ResolveD(this,WPObject,WPObject,wpRenderComplete)
	(this,pdxfer,ulResult);
}


/* method: wpReplaceObject */
BOOL32   wpReplaceObject(WPObject* targetObject,
		BOOL32 fMove)
{
   return SOM_ResolveD(this,WPObject,WPObject,wpReplaceObject)
	(this,targetObject,fMove);
}


/* method: wpRequestObjectMutexSem */
ULONG   wpRequestObjectMutexSem(ULONG ulTimeout)
{
   return SOM_ResolveD(this,WPObject,WPObject,wpRequestObjectMutexSem)
	(this,ulTimeout);
}


/* method: wpRestore */
BOOL   wpRestore()
{
   return SOM_ResolveD(this,WPObject,WPObject,wpRestore)
	(this);
}


/* method: wpRestoreData */
BOOL   wpRestoreData(PSZ pszClass,
		ULONG ulKey,
		PBYTE pValue,
		PULONG pcbValue)
{
   return SOM_ResolveD(this,WPObject,WPObject,wpRestoreData)
	(this,pszClass,ulKey,pValue,pcbValue);
}


/* method: wpRestoreLong */
BOOL   wpRestoreLong(PSZ pszClass,
		ULONG ulKey,
		PULONG pulValue)
{
   return SOM_ResolveD(this,WPObject,WPObject,wpRestoreLong)
	(this,pszClass,ulKey,pulValue);
}


/* method: wpRestoreState */
BOOL   wpRestoreState(ULONG ulReserved)
{
   return SOM_ResolveD(this,WPObject,WPObject,wpRestoreState)
	(this,ulReserved);
}


/* method: wpRestoreString */
BOOL   wpRestoreString(PSZ pszClass,
		ULONG ulKey,
		PSZ pszValue,
		PULONG pcbValue)
{
   return SOM_ResolveD(this,WPObject,WPObject,wpRestoreString)
	(this,pszClass,ulKey,pszValue,pcbValue);
}


/* method: wpSaveData */
BOOL   wpSaveData(PSZ pszClass,
		ULONG ulKey,
		PBYTE pValue,
		ULONG cbValue)
{
   return SOM_ResolveD(this,WPObject,WPObject,wpSaveData)
	(this,pszClass,ulKey,pValue,cbValue);
}


/* method: wpSaveImmediate */
BOOL   wpSaveImmediate()
{
   return SOM_ResolveD(this,WPObject,WPObject,wpSaveImmediate)
	(this);
}


/* method: wpSaveDeferred */
BOOL   wpSaveDeferred()
{
   return SOM_ResolveD(this,WPObject,WPObject,wpSaveDeferred)
	(this);
}


/* method: wpSaveLong */
BOOL   wpSaveLong(PSZ pszClass,
		ULONG ulKey,
		ULONG ulValue)
{
   return SOM_ResolveD(this,WPObject,WPObject,wpSaveLong)
	(this,pszClass,ulKey,ulValue);
}


/* method: wpSaveState */
BOOL   wpSaveState()
{
   return SOM_ResolveD(this,WPObject,WPObject,wpSaveState)
	(this);
}


/* method: wpSaveString */
BOOL   wpSaveString(PSZ pszClass,
		ULONG ulKey,
		PSZ pszValue)
{
   return SOM_ResolveD(this,WPObject,WPObject,wpSaveString)
	(this,pszClass,ulKey,pszValue);
}


/* method: wpScanSetupString */
BOOL   wpScanSetupString(PSZ pszSetupString,
		PSZ pszKey,
		PSZ pszValue,
		PULONG pcbValue)
{
   return SOM_ResolveD(this,WPObject,WPObject,wpScanSetupString)
	(this,pszSetupString,pszKey,pszValue,pcbValue);
}


/* method: wpSetConcurrentView */
void   wpSetConcurrentView(ULONG ulCCView)
{
   SOM_ResolveD(this,WPObject,WPObject,wpSetConcurrentView)
	(this,ulCCView);
}


/* method: wpSetButtonAppearance */
void   wpSetButtonAppearance(ULONG ulButtonType)
{
   SOM_ResolveD(this,WPObject,WPObject,wpSetButtonAppearance)
	(this,ulButtonType);
}


/* method: wpSetDefaultHelp */
BOOL   wpSetDefaultHelp(ULONG HelpPanelId,
		PSZ HelpLibrary)
{
   return SOM_ResolveD(this,WPObject,WPObject,wpSetDefaultHelp)
	(this,HelpPanelId,HelpLibrary);
}


/* method: wpSetDefaultView */
BOOL   wpSetDefaultView(ULONG ulView)
{
   return SOM_ResolveD(this,WPObject,WPObject,wpSetDefaultView)
	(this,ulView);
}


/* method: wpSetError */
BOOL   wpSetError(ULONG ulErrorId)
{
   return SOM_ResolveD(this,WPObject,WPObject,wpSetError)
	(this,ulErrorId);
}


/* method: wpSetIconHandle */
BOOL   wpSetIconHandle(HPOINTER hptrNewIcon)
{
   return SOM_ResolveD(this,WPObject,WPObject,wpSetIconHandle)
	(this,hptrNewIcon);
}


/* method: wpQueryScreenGroupID */
USHORT   wpQueryScreenGroupID(USHORT usPrevSgId)
{
   return SOM_ResolveD(this,WPObject,WPObject,wpQueryScreenGroupID)
	(this,usPrevSgId);
}


/* method: wpSetupOnce */
BOOL   wpSetupOnce(PSZ pszSetupString)
{
   return SOM_ResolveD(this,WPObject,WPObject,wpSetupOnce)
	(this,pszSetupString);
}


/* method: wpSetIcon */
BOOL   wpSetIcon(HPOINTER hptrNewIcon)
{
   return SOM_ResolveD(this,WPObject,WPObject,wpSetIcon)
	(this,hptrNewIcon);
}


/* method: wpSetIconData */
BOOL   wpSetIconData(PICONINFO pIconInfo)
{
   return SOM_ResolveD(this,WPObject,WPObject,wpSetIconData)
	(this,pIconInfo);
}


/* method: wpSetMinWindow */
void   wpSetMinWindow(ULONG ulMinWindow)
{
   SOM_ResolveD(this,WPObject,WPObject,wpSetMinWindow)
	(this,ulMinWindow);
}


/* method: wpSetStyle */
BOOL   wpSetStyle(ULONG ulNewStyle)
{
   return SOM_ResolveD(this,WPObject,WPObject,wpSetStyle)
	(this,ulNewStyle);
}


/* method: wpModifyStyle */
BOOL   wpModifyStyle(ULONG ulStyleFlags,
		ULONG ulStyleMask)
{
   return SOM_ResolveD(this,WPObject,WPObject,wpModifyStyle)
	(this,ulStyleFlags,ulStyleMask);
}


/* method: wpSetTitle */
BOOL   wpSetTitle(PSZ pszNewTitle)
{
   return SOM_ResolveD(this,WPObject,WPObject,wpSetTitle)
	(this,pszNewTitle);
}


/* method: wpSetup */
BOOL   wpSetup(PSZ pszSetupString)
{
   return SOM_ResolveD(this,WPObject,WPObject,wpSetup)
	(this,pszSetupString);
}


/* method: wpSwitchTo */
BOOL   wpSwitchTo(ULONG View)
{
   return SOM_ResolveD(this,WPObject,WPObject,wpSwitchTo)
	(this,View);
}


/* method: wpUnInitData */
void   wpUnInitData()
{
   SOM_ResolveD(this,WPObject,WPObject,wpUnInitData)
	(this);
}


/* method: wpViewObject */
HWND   wpViewObject(HWND hwndCnr,
		ULONG ulView,
		ULONG param)
{
   return SOM_ResolveD(this,WPObject,WPObject,wpViewObject)
	(this,hwndCnr,ulView,param);
}


/* method: wpQueryTrueStyle */
ULONG   wpQueryTrueStyle()
{
   return SOM_ResolveD(this,WPObject,WPObject,wpQueryTrueStyle)
	(this);
}


/* method: wpQueryHandle */
HOBJECT   wpQueryHandle()
{
   return SOM_ResolveD(this,WPObject,WPObject,wpQueryHandle)
	(this);
}


/* method: wpUnlockObject */
BOOL   wpUnlockObject()
{
   return SOM_ResolveD(this,WPObject,WPObject,wpUnlockObject)
	(this);
}


/* method: wpObjectReady */
void   wpObjectReady(ULONG ulCode,
		WPObject* refObject)
{
   SOM_ResolveD(this,WPObject,WPObject,wpObjectReady)
	(this,ulCode,refObject);
}


/* method: wpIsObjectInitialized */
BOOL   wpIsObjectInitialized()
{
   return SOM_ResolveD(this,WPObject,WPObject,wpIsObjectInitialized)
	(this);
}


/* method: wpCreateShadowObjectExt */
WPObject*   wpCreateShadowObjectExt(WPFolder* Folder,
		BOOL fLock,
		PSZ pszSetup,
		M_WPObject* shadowClass)
{
   return SOM_ResolveD(this,WPObject,WPObject,wpCreateShadowObjectExt)
	(this,Folder,fLock,pszSetup,shadowClass);
}


/* method: wpCnrDeleteUseItem */
BOOL   wpCnrDeleteUseItem(HWND hwndCnr)
{
   return SOM_ResolveD(this,WPObject,WPObject,wpCnrDeleteUseItem)
	(this,hwndCnr);
}


/* method: wpIsDeleteable */
BOOL   wpIsDeleteable()
{
   return SOM_ResolveD(this,WPObject,WPObject,wpIsDeleteable)
	(this);
}


/* method: wpQueryCoreRecord */
PMINIRECORDCORE   wpQueryCoreRecord()
{
   return SOM_ResolveD(this,WPObject,WPObject,wpQueryCoreRecord)
	(this);
}


/* method: wpSetObjectID */
BOOL   wpSetObjectID(PSZ pszObjectID)
{
   return SOM_ResolveD(this,WPObject,WPObject,wpSetObjectID)
	(this,pszObjectID);
}


/* method: wpQueryObjectID */
PSZ   wpQueryObjectID()
{
   return SOM_ResolveD(this,WPObject,WPObject,wpQueryObjectID)
	(this);
}


/* method: wpSetDefaultIconPos */
BOOL   wpSetDefaultIconPos(PPOINTL pPointl)
{
   return SOM_ResolveD(this,WPObject,WPObject,wpSetDefaultIconPos)
	(this,pPointl);
}


/* method: wpQueryDefaultIconPos */
BOOL   wpQueryDefaultIconPos(PPOINTL pPointl)
{
   return SOM_ResolveD(this,WPObject,WPObject,wpQueryDefaultIconPos)
	(this,pPointl);
}


/* method: wpCnrRefreshDetails */
void   wpCnrRefreshDetails()
{
   SOM_ResolveD(this,WPObject,WPObject,wpCnrRefreshDetails)
	(this);
}


/* method: wpFindViewItem */
PVIEWITEM   wpFindViewItem(ULONG flViews,
		PVIEWITEM pCurrentItem)
{
   return SOM_ResolveD(this,WPObject,WPObject,wpFindViewItem)
	(this,flViews,pCurrentItem);
}


/* method: wpLockObject */
void   wpLockObject()
{
   SOM_ResolveD(this,WPObject,WPObject,wpLockObject)
	(this);
}


/* method: wpIsLocked */
BOOL   wpIsLocked()
{
   return SOM_ResolveD(this,WPObject,WPObject,wpIsLocked)
	(this);
}


/* method: wpQueryContainerFlagPtr */
PULONG   wpQueryContainerFlagPtr()
{
   return SOM_ResolveD(this,WPObject,WPObject,wpQueryContainerFlagPtr)
	(this);
}


/* method: wpWaitForClose */
ULONG   wpWaitForClose(LHANDLE lhView,
		ULONG ulViews,
		long lTimeOut,
		BOOL bAutoClose)
{
   return SOM_ResolveD(this,WPObject,WPObject,wpWaitForClose)
	(this,lhView,ulViews,lTimeOut,bAutoClose);
}


/*
 * Reintroduce inherited methods
 */

/* initializer method: somDefaultInit */
void   somDefaultInit(somInitCtrl* ctrl)
{
   SOM_ResolveD(this,WPObject,SOMObject,somDefaultInit)
	(this,ctrl);
}


/* method: somDestruct */
void   somDestruct(octet doFree,
		somDestructCtrl* ctrl)
{
   SOM_ResolveD(this,WPObject,SOMObject,somDestruct)
	(this,doFree,ctrl);
}


/* method: somDefaultCopyInit */
void   somDefaultCopyInit(somInitCtrl* ctrl,
		SOMObject* fromObj)
{
   SOM_ResolveD(this,WPObject,SOMObject,somDefaultCopyInit)
	(this,ctrl,fromObj);
}


/* method: somDefaultAssign */
WPObject*  somDefaultAssign(somAssignCtrl* ctrl,
		SOMObject* fromObj)
{
   return SOM_ResolveD(this,WPObject,SOMObject,somDefaultAssign)
	(this,ctrl,fromObj);
}


/* method: somDefaultConstCopyInit */
void   somDefaultConstCopyInit(somInitCtrl* ctrl,
		SOMObject* fromObj)
{
   SOM_ResolveD(this,WPObject,SOMObject,somDefaultConstCopyInit)
	(this,ctrl,fromObj);
}


/* method: somDefaultVCopyInit */
void   somDefaultVCopyInit(somInitCtrl* ctrl,
		SOMObject* fromObj)
{
   SOM_ResolveD(this,WPObject,SOMObject,somDefaultVCopyInit)
	(this,ctrl,fromObj);
}


/* method: somDefaultConstVCopyInit */
void   somDefaultConstVCopyInit(somInitCtrl* ctrl,
		SOMObject* fromObj)
{
   SOM_ResolveD(this,WPObject,SOMObject,somDefaultConstVCopyInit)
	(this,ctrl,fromObj);
}


/* method: somDefaultConstAssign */
WPObject*  somDefaultConstAssign(somAssignCtrl* ctrl,
		SOMObject* fromObj)
{
   return SOM_ResolveD(this,WPObject,SOMObject,somDefaultConstAssign)
	(this,ctrl,fromObj);
}


/* method: somDefaultVAssign */
WPObject*  somDefaultVAssign(somAssignCtrl* ctrl,
		SOMObject* fromObj)
{
   return SOM_ResolveD(this,WPObject,SOMObject,somDefaultVAssign)
	(this,ctrl,fromObj);
}


/* method: somDefaultConstVAssign */
WPObject*  somDefaultConstVAssign(somAssignCtrl* ctrl,
		SOMObject* fromObj)
{
   return SOM_ResolveD(this,WPObject,SOMObject,somDefaultConstVAssign)
	(this,ctrl,fromObj);
}


/* method: somInit */
void   somInit()
{
   SOM_ResolveD(this,WPObject,SOMObject,somInit)
	(this);
}


/* method: somFree */
void   somFree()
{
   SOM_ResolveD(this,WPObject,SOMObject,somFree)
	(this);
}


/* method: somUninit */
void   somUninit()
{
   SOM_ResolveD(this,WPObject,SOMObject,somUninit)
	(this);
}


/* method: somGetClass */
M_WPObject*  somGetClass()
{
   return SOM_ResolveD(this,WPObject,SOMObject,somGetClass)
	(this);
}


/* method: somGetClassName */
string   somGetClassName()
{
   return SOM_ResolveD(this,WPObject,SOMObject,somGetClassName)
	(this);
}


/* method: somGetSize */
long   somGetSize()
{
   return SOM_ResolveD(this,WPObject,SOMObject,somGetSize)
	(this);
}


/* method: somIsA */
boolean   somIsA(SOMClass* aClassObj)
{
   return SOM_ResolveD(this,WPObject,SOMObject,somIsA)
	(this,aClassObj);
}


/* method: somIsInstanceOf */
boolean   somIsInstanceOf(SOMClass* aClassObj)
{
   return SOM_ResolveD(this,WPObject,SOMObject,somIsInstanceOf)
	(this,aClassObj);
}


/* method: somRespondsTo */
boolean   somRespondsTo(somId mId)
{
   return SOM_ResolveD(this,WPObject,SOMObject,somRespondsTo)
	(this,mId);
}


/* va_list method: somDispatch */
/* the va_list invocation form */
boolean   WPObject_somDispatch(somToken* retValue,
		somId methodId,
		va_list ap)
{
return SOM_ResolveD(this,WPObject,SOMObject,somDispatch)
	(this,retValue,methodId,ap);
}

/* the varargs invocation form */
boolean   somDispatch(somToken* retValue,
		somId methodId,
		...)
{
   va_list ap;
   va_start(ap, methodId);
   boolean __somResult = 
      SOM_ResolveD(this,WPObject,SOMObject,somDispatch)
	(this,retValue,methodId,ap);
   va_end(ap);
   return __somResult;
}


/* va_list method: somClassDispatch */
/* the va_list invocation form */
boolean   WPObject_somClassDispatch(SOMClass* clsObj,
		somToken* retValue,
		somId methodId,
		va_list ap)
{
return SOM_ResolveD(this,WPObject,SOMObject,somClassDispatch)
	(this,clsObj,retValue,methodId,ap);
}

/* the varargs invocation form */
boolean   somClassDispatch(SOMClass* clsObj,
		somToken* retValue,
		somId methodId,
		...)
{
   va_list ap;
   va_start(ap, methodId);
   boolean __somResult = 
      SOM_ResolveD(this,WPObject,SOMObject,somClassDispatch)
	(this,clsObj,retValue,methodId,ap);
   va_end(ap);
   return __somResult;
}


/* method: somCastObj */
boolean   somCastObj(SOMClass* cls)
{
   return SOM_ResolveD(this,WPObject,SOMObject,somCastObj)
	(this,cls);
}


/* method: somResetObj */
boolean   somResetObj()
{
   return SOM_ResolveD(this,WPObject,SOMObject,somResetObj)
	(this);
}


/* va_list method: somDispatchV */
/* the va_list invocation form */
void   WPObject_somDispatchV(somId methodId,
		somId descriptor,
		va_list ap)
{
   SOM_ResolveD(this,WPObject,SOMObject,somDispatchV)
	(this,methodId,descriptor,ap);
}

/* the varargs invocation form */
void   somDispatchV(somId methodId,
		somId descriptor,
		...)
{
   va_list ap;
   va_start(ap, descriptor);
   SOM_ResolveD(this,WPObject,SOMObject,somDispatchV)
	(this,methodId,descriptor,ap);
   va_end(ap);
}


/* va_list method: somDispatchL */
/* the va_list invocation form */
long   WPObject_somDispatchL(somId methodId,
		somId descriptor,
		va_list ap)
{
return SOM_ResolveD(this,WPObject,SOMObject,somDispatchL)
	(this,methodId,descriptor,ap);
}

/* the varargs invocation form */
long   somDispatchL(somId methodId,
		somId descriptor,
		...)
{
   va_list ap;
   va_start(ap, descriptor);
   long __somResult = 
      SOM_ResolveD(this,WPObject,SOMObject,somDispatchL)
	(this,methodId,descriptor,ap);
   va_end(ap);
   return __somResult;
}


/* va_list method: somDispatchA */
/* the va_list invocation form */
void*   WPObject_somDispatchA(somId methodId,
		somId descriptor,
		va_list ap)
{
return SOM_ResolveD(this,WPObject,SOMObject,somDispatchA)
	(this,methodId,descriptor,ap);
}

/* the varargs invocation form */
void*   somDispatchA(somId methodId,
		somId descriptor,
		...)
{
   va_list ap;
   va_start(ap, descriptor);
   void* __somResult = 
      SOM_ResolveD(this,WPObject,SOMObject,somDispatchA)
	(this,methodId,descriptor,ap);
   va_end(ap);
   return __somResult;
}


/* va_list method: somDispatchD */
/* the va_list invocation form */
double   WPObject_somDispatchD(somId methodId,
		somId descriptor,
		va_list ap)
{
return SOM_ResolveD(this,WPObject,SOMObject,somDispatchD)
	(this,methodId,descriptor,ap);
}

/* the varargs invocation form */
double   somDispatchD(somId methodId,
		somId descriptor,
		...)
{
   va_list ap;
   va_start(ap, descriptor);
   double __somResult = 
      SOM_ResolveD(this,WPObject,SOMObject,somDispatchD)
	(this,methodId,descriptor,ap);
   va_end(ap);
   return __somResult;
}


/* method: somPrintSelf */
SOMObject*   somPrintSelf()
{
   return SOM_ResolveD(this,WPObject,SOMObject,somPrintSelf)
	(this);
}


/* method: somDumpSelf */
void   somDumpSelf(long level)
{
   SOM_ResolveD(this,WPObject,SOMObject,somDumpSelf)
	(this,level);
}


/* method: somDumpSelfInt */
void   somDumpSelfInt(long level)
{
   SOM_ResolveD(this,WPObject,SOMObject,somDumpSelfInt)
	(this,level);
}



};   /* WPObject */



#endif       /* SOM_WPObject_xh */

#ifndef SOM_M_WPObject_xh
#define SOM_M_WPObject_xh

class M_WPObject;

#define M_WPObject_MajorVersion 1
#define M_WPObject_MinorVersion 2

/* C++ SOM defs */
#include <somcls.xh>
#include <somcm.xh>

/* C++ parent defs */
#ifndef SOM_SOMClass_xh
#include <somcls.xh>
#endif

#ifndef M_WPObject_API
#define M_WPObject_API
/*
 * -- The Class API
 */

/*
 * Start of user-defined types:
 */

/*
 * End of user-defined types.
 */

/*
 * -- M_WPObject is a metaclass for WPObject. Make sure WPObject is known.
 */
class WPObject;


/* A procedure to create the M_WPObject Class */
SOMEXTERN SOMClass * SOMLINK M_WPObjectNewClass(
		integer4 majorVersion,
		integer4 minorVersion);

/* The API to the M_WPObject class object, and the methods it introduces. */
SOMEXTERN struct M_WPObjectClassDataStructure {
	SOMClass *classObject;
	somMToken wpclsInitData;
	somMToken wpclsUnInitData;
	somMToken withdrawn8;
	somMToken wpclsMakeAwake;
	somMToken wpclsIncUsage;
	somMToken wpclsDecUsage;
	somMToken wpclsQueryTitle;
	somMToken wpclsQueryIcon;
	somMToken wpclsQueryDefaultHelp;
	somMToken wpclsQueryStyle;
	somMToken wpclsQueryDetailsInfo;
	somMToken wpclsQueryDefaultView;
	somMToken wpclsQueryDetails;
	somMToken wpclsQuerySearchInfo;
	somMToken wpclsQueryExtendedCriteria;
	somMToken wpclsCreateDefaultTemplates;
	somMToken withdrawn9;
	somMToken wpclsFindObjectFirst;
	somMToken wpclsFindObjectNext;
	somMToken wpclsFindObjectEnd;
	somMToken wpclsFindObjects;
	somMToken wpclsSetError;
	somMToken wpclsQueryError;
	somMToken wpclsQuerySettingsPageSize;
	somMToken wpclsSetSettingsPageSize;
	somMToken wpclsQueryIconData;
	somMToken wpclsSetIcon;
	somMToken wpclsSetIconData;
	somMToken wpclsQueryObject;
	somMToken wpclsObjectFromHandle;
	somMToken wpclsSaveDirtyObjects;
	somMToken wpclsLockDirtyList;
	somMToken wpclsUnlockDirtyList;
	somMToken wpclsLockRestartList;
	somMToken wpclsUnlockRestartList;
	somMToken wpclsQueryButtonAppearance;
	somMToken wpclsNew;
	somMToken wpclsQueryFolder;
	somMToken wpclsLockSleepyList;
	somMToken wpclsUnlockSleepyList;
	somMToken wpclsRemoveObjects;
	somMToken wpclsInsertMultipleObjects;
	somMToken wpclsINew;
	somMToken wpclsFindOneObject;
	somMToken wpclsQueryMaxAnimationIcons;
} SOMDLINK M_WPObjectClassData;
#define _M_WPObject M_WPObjectClassData.classObject

/* The API to parentMtabs for M_WPObject, and the instance data it introduces. */
SOMEXTERN struct M_WPObjectCClassDataStructure {
	somMethodTabs parentMtab;
	somDToken              instanceDataToken;
} SOMDLINK M_WPObjectCClassData;

/*
 * -- Typedefs for M_WPObject Method Procedures
 */
SOMEXTERN {
typedef BOOL   (SOMLINK * somTD_M_WPObject_wpclsCreateDefaultTemplates)(M_WPObject *somSelf,
		WPObject* Folder);
typedef void   (SOMLINK * somTD_M_WPObject_wpclsInitData)(M_WPObject *somSelf);
typedef WPObject*   (SOMLINK * somTD_M_WPObject_wpclsMakeAwake)(M_WPObject *somSelf,
		PSZ pszTitle,
		ULONG ulStyle,
		HPOINTER hptrIcon,
		POBJDATA pObjData,
		WPFolder* Folder,
		ULONG ulUser);
typedef WPObject*   (SOMLINK * somTD_M_WPObject_wpclsNew)(M_WPObject *somSelf,
		PSZ pszTitle,
		PSZ pszSetupEnv,
		WPFolder* Folder,
		BOOL fLock);
typedef BOOL   (SOMLINK * somTD_M_WPObject_wpclsQueryDefaultHelp)(M_WPObject *somSelf,
		PULONG pHelpPanelId,
		PSZ pszHelpLibrary);
typedef ULONG   (SOMLINK * somTD_M_WPObject_wpclsQueryDefaultView)(M_WPObject *somSelf);
typedef PCLASSDETAILS   (SOMLINK * somTD_M_WPObject_wpclsQueryDetails)(M_WPObject *somSelf);
typedef ULONG   (SOMLINK * somTD_M_WPObject_wpclsQueryDetailsInfo)(M_WPObject *somSelf,
		PCLASSFIELDINFO* ppClassFieldInfo,
		PULONG pSize);
typedef BOOL   (SOMLINK * somTD_M_WPObject_wpclsQueryExtendedCriteria)(M_WPObject *somSelf,
		PSZ pszName,
		ULONG ulSearchType,
		PVOID pvoidExtendedCriteria);
typedef WPObject*   (SOMLINK * somTD_M_WPObject_wpclsQueryFolder)(M_WPObject *somSelf,
		PSZ pszLocation,
		BOOL fLock);
typedef HPOINTER   (SOMLINK * somTD_M_WPObject_wpclsQueryIcon)(M_WPObject *somSelf);
typedef void   (SOMLINK * somTD_M_WPObject_wpclsQuerySearchInfo)(M_WPObject *somSelf,
		M_WPObject** ClassExtended,
		M_WPObject** ClassCreate,
		PULONG pulClassCriteriaSize);
typedef ULONG   (SOMLINK * somTD_M_WPObject_wpclsQueryStyle)(M_WPObject *somSelf);
typedef PSZ   (SOMLINK * somTD_M_WPObject_wpclsQueryTitle)(M_WPObject *somSelf);
typedef void   (SOMLINK * somTD_M_WPObject_wpclsUnInitData)(M_WPObject *somSelf);
typedef BOOL   (SOMLINK * somTD_M_WPObject_wpclsFindObjectFirst)(M_WPObject *somSelf,
		PCLASS pClassList,
		PHFIND phFind,
		PSZ pszTitle,
		WPFolder* Folder,
		BOOL fSubfolders,
		PVOID pExtendedCriteria,
		POBJECT pBuffer,
		PULONG pCount);
typedef BOOL   (SOMLINK * somTD_M_WPObject_wpclsFindObjectNext)(M_WPObject *somSelf,
		HFIND hFind,
		POBJECT pBuffer,
		PULONG pCount);
typedef BOOL   (SOMLINK * somTD_M_WPObject_wpclsFindObjectEnd)(M_WPObject *somSelf,
		HFIND hFind);
typedef BOOL   (SOMLINK * somTD_M_WPObject_wpclsSetError)(M_WPObject *somSelf,
		ULONG ulErrorId);
typedef ULONG   (SOMLINK * somTD_M_WPObject_wpclsQueryError)(M_WPObject *somSelf);
typedef BOOL   (SOMLINK * somTD_M_WPObject_wpclsQuerySettingsPageSize)(M_WPObject *somSelf,
		PSIZEL pSizl);
typedef ULONG   (SOMLINK * somTD_M_WPObject_wpclsQueryIconData)(M_WPObject *somSelf,
		PICONINFO pIconInfo);
typedef WPObject*   (SOMLINK * somTD_M_WPObject_wpclsQueryObject)(M_WPObject *somSelf,
		HOBJECT hObject);
typedef ULONG   (SOMLINK * somTD_M_WPObject_wpclsQueryButtonAppearance)(M_WPObject *somSelf);
typedef void   (SOMLINK * somTD_M_WPObject_wpclsDecUsage)(M_WPObject *somSelf);
typedef void   (SOMLINK * somTD_M_WPObject_wpclsIncUsage)(M_WPObject *somSelf);
typedef BOOL   (SOMLINK * somTD_M_WPObject_wpclsInsertMultipleObjects)(M_WPObject *somSelf,
		HWND hwndCnr,
		PPOINTL pptlIcon,
		PVOID* pObjectArray,
		PVOID pRecordParent,
		ULONG NumRecords);
typedef WPObject*   (SOMLINK * somTD_M_WPObject_wpclsFindOneObject)(M_WPObject *somSelf,
		HWND hwndOwner,
		PSZ pszFindParams);
typedef BOOL   (SOMLINK * somTD_M_WPObject_wpclsSetSettingsPageSize)(M_WPObject *somSelf,
		PSIZEL pSizl);
typedef BOOL   (SOMLINK * somTD_M_WPObject_wpclsSetIconData)(M_WPObject *somSelf,
		PICONINFO pIconInfo);
typedef BOOL   (SOMLINK * somTD_M_WPObject_wpclsSetIcon)(M_WPObject *somSelf,
		HPOINTER hptrNewIcon);
typedef WPObject*   (SOMLINK * somTD_M_WPObject_wpclsObjectFromHandle)(M_WPObject *somSelf,
		HOBJECT hObject);
typedef BOOL   (SOMLINK * somTD_M_WPObject_wpclsRemoveObjects)(M_WPObject *somSelf,
		HWND hwndCnr,
		PVOID* pRecordArray,
		ULONG NumRecords,
		BOOL RemoveAll);

/*
 * -- Typedefs for Reintroduced Wrapper Methods
 */
typedef long   (SOMLINK * somTD_M_WPObject__get_somDataAlignment)(M_WPObject *somSelf);
typedef SOMClass_somOffsets   (SOMLINK * somTD_M_WPObject__get_somInstanceDataOffsets)(M_WPObject *somSelf);
typedef SOMClass_SOMClassSequence   (SOMLINK * somTD_M_WPObject__get_somDirectInitClasses)(M_WPObject *somSelf);
typedef void   (SOMLINK * somTD_M_WPObject__set_somDirectInitClasses)(M_WPObject *somSelf,
		SOMClass_SOMClassSequence* somDirectInitClasses);
typedef WPObject*   (SOMLINK * somTD_M_WPObject_somNew)(M_WPObject *somSelf);
typedef SOMObject*   (SOMLINK * somTD_M_WPObject_somNewNoInit)(M_WPObject *somSelf);
typedef SOMObject*   (SOMLINK * somTD_M_WPObject_somRenew)(M_WPObject *somSelf,
		void* obj);
typedef SOMObject*   (SOMLINK * somTD_M_WPObject_somRenewNoInit)(M_WPObject *somSelf,
		void* obj);
typedef SOMObject*   (SOMLINK * somTD_M_WPObject_somRenewNoZero)(M_WPObject *somSelf,
		void* obj);
typedef SOMObject*   (SOMLINK * somTD_M_WPObject_somRenewNoInitNoZero)(M_WPObject *somSelf,
		void* obj);
typedef string   (SOMLINK * somTD_M_WPObject_somAllocate)(M_WPObject *somSelf,
		long size);
typedef void   (SOMLINK * somTD_M_WPObject_somDeallocate)(M_WPObject *somSelf,
		string memptr);
typedef somMethodProc*   (SOMLINK * somTD_M_WPObject__get_somClassAllocate)(M_WPObject *somSelf);
typedef somMethodProc*   (SOMLINK * somTD_M_WPObject__get_somClassDeallocate)(M_WPObject *somSelf);
typedef somBooleanVector   (SOMLINK * somTD_M_WPObject_somGetInstanceInitMask)(M_WPObject *somSelf,
		somInitCtrl* ctrl);
typedef somBooleanVector   (SOMLINK * somTD_M_WPObject_somGetInstanceDestructionMask)(M_WPObject *somSelf,
		somDestructCtrl* ctrl);
typedef somBooleanVector   (SOMLINK * somTD_M_WPObject_somGetInstanceAssignmentMask)(M_WPObject *somSelf,
		somAssignCtrl* ctrl);
typedef void   (SOMLINK * somTD_M_WPObject_somInitClass)(M_WPObject *somSelf,
		string className,
		SOMClass* parentClass,
		long dataSize,
		long maxStaticMethods,
		long majorVersion,
		long minorVersion);
typedef void   (SOMLINK * somTD_M_WPObject_somInitMIClass)(M_WPObject *somSelf,
		long inherit_vars,
		string className,
		SOMClass_SOMClassSequence* parentClasses,
		long dataSize,
		long dataAlignment,
		long maxStaticMethods,
		long majorVersion,
		long minorVersion);
typedef somMToken   (SOMLINK * somTD_M_WPObject_somAddStaticMethod)(M_WPObject *somSelf,
		somId methodId,
		somId methodDescriptor,
		somMethodPtr method,
		somMethodPtr redispatchStub,
		somMethodPtr applyStub);
typedef void   (SOMLINK * somTD_M_WPObject_somAddDynamicMethod)(M_WPObject *somSelf,
		somId methodId,
		somId methodDescriptor,
		somMethodPtr method,
		somMethodPtr applyStub);
typedef void   (SOMLINK * somTD_M_WPObject_somOverrideSMethod)(M_WPObject *somSelf,
		somId methodId,
		somMethodPtr method);
typedef void   (SOMLINK * somTD_M_WPObject_somClassReady)(M_WPObject *somSelf);
typedef somMethodPtr   (SOMLINK * somTD_M_WPObject_somGetApplyStub)(M_WPObject *somSelf,
		somId methodId);
typedef somClassDataStructure*   (SOMLINK * somTD_M_WPObject_somGetClassData)(M_WPObject *somSelf);
typedef void   (SOMLINK * somTD_M_WPObject_somSetClassData)(M_WPObject *somSelf,
		somClassDataStructure* cds);
typedef somMethodTab*   (SOMLINK * somTD_M_WPObject_somGetClassMtab)(M_WPObject *somSelf);
typedef long   (SOMLINK * somTD_M_WPObject_somGetInstanceOffset)(M_WPObject *somSelf);
typedef long   (SOMLINK * somTD_M_WPObject_somGetInstancePartSize)(M_WPObject *somSelf);
typedef long   (SOMLINK * somTD_M_WPObject_somGetInstanceSize)(M_WPObject *somSelf);
typedef somDToken   (SOMLINK * somTD_M_WPObject_somGetInstanceToken)(M_WPObject *somSelf);
typedef somDToken   (SOMLINK * somTD_M_WPObject_somGetMemberToken)(M_WPObject *somSelf,
		long memberOffset,
		somDToken instanceToken);
typedef boolean   (SOMLINK * somTD_M_WPObject_somGetMethodData)(M_WPObject *somSelf,
		somId methodId,
		somMethodData* md);
typedef somMethodProc*   (SOMLINK * somTD_M_WPObject_somGetRdStub)(M_WPObject *somSelf,
		somId methodId);
typedef somId   (SOMLINK * somTD_M_WPObject_somGetMethodDescriptor)(M_WPObject *somSelf,
		somId methodId);
typedef long   (SOMLINK * somTD_M_WPObject_somGetMethodIndex)(M_WPObject *somSelf,
		somId id);
typedef somMToken   (SOMLINK * somTD_M_WPObject_somGetMethodToken)(M_WPObject *somSelf,
		somId methodId);
typedef string   (SOMLINK * somTD_M_WPObject_somGetName)(M_WPObject *somSelf);
typedef boolean   (SOMLINK * somTD_M_WPObject_somGetNthMethodData)(M_WPObject *somSelf,
		long n,
		somMethodData* md);
typedef somId   (SOMLINK * somTD_M_WPObject_somGetNthMethodInfo)(M_WPObject *somSelf,
		long n,
		somId* descriptor);
typedef long   (SOMLINK * somTD_M_WPObject_somGetNumMethods)(M_WPObject *somSelf);
typedef long   (SOMLINK * somTD_M_WPObject_somGetNumStaticMethods)(M_WPObject *somSelf);
typedef SOMClass*   (SOMLINK * somTD_M_WPObject_somGetParent)(M_WPObject *somSelf);
typedef SOMClass_SOMClassSequence   (SOMLINK * somTD_M_WPObject_somGetParents)(M_WPObject *somSelf);
typedef somMethodTabs   (SOMLINK * somTD_M_WPObject_somGetPClsMtab)(M_WPObject *somSelf);
typedef somMethodTabs   (SOMLINK * somTD_M_WPObject_somGetPClsMtabs)(M_WPObject *somSelf);
typedef void   (SOMLINK * somTD_M_WPObject_somGetVersionNumbers)(M_WPObject *somSelf,
		long* majorVersion,
		long* minorVersion);
typedef boolean   (SOMLINK * somTD_M_WPObject_somSetMethodDescriptor)(M_WPObject *somSelf,
		somId methodId,
		somId descriptor);
typedef boolean   (SOMLINK * somTD_M_WPObject_somFindMethod)(M_WPObject *somSelf,
		somId methodId,
		somMethodPtr* m);
typedef boolean   (SOMLINK * somTD_M_WPObject_somFindMethodOk)(M_WPObject *somSelf,
		somId methodId,
		somMethodPtr* m);
typedef somMethodPtr   (SOMLINK * somTD_M_WPObject_somFindSMethod)(M_WPObject *somSelf,
		somId methodId);
typedef somMethodPtr   (SOMLINK * somTD_M_WPObject_somFindSMethodOk)(M_WPObject *somSelf,
		somId methodId);
typedef somMethodPtr   (SOMLINK * somTD_M_WPObject_somLookupMethod)(M_WPObject *somSelf,
		somId methodId);
typedef boolean   (SOMLINK * somTD_M_WPObject_somCheckVersion)(M_WPObject *somSelf,
		long majorVersion,
		long minorVersion);
typedef boolean   (SOMLINK * somTD_M_WPObject_somDescendedFrom)(M_WPObject *somSelf,
		SOMClass* aClassObj);
typedef boolean   (SOMLINK * somTD_M_WPObject_somSupportsMethod)(M_WPObject *somSelf,
		somId mId);
typedef somMethodPtr   (SOMLINK * somTD_M_WPObject_somDefinedMethod)(M_WPObject *somSelf,
		somMToken method);
typedef void   (SOMLINK * somTD_M_WPObject_somOverrideMtab)(M_WPObject *somSelf);
typedef void   (SOMLINK * somTD_M_WPObject_somDefaultInit)(M_WPObject *somSelf,
		somInitCtrl* ctrl);
typedef void   (SOMLINK * somTD_M_WPObject_somDestruct)(M_WPObject *somSelf,
		octet doFree,
		somDestructCtrl* ctrl);
typedef void   (SOMLINK * somTD_M_WPObject_somDefaultCopyInit)(M_WPObject *somSelf,
		somInitCtrl* ctrl,
		SOMObject* fromObj);
typedef M_WPObject*   (SOMLINK * somTD_M_WPObject_somDefaultAssign)(M_WPObject *somSelf,
		somAssignCtrl* ctrl,
		SOMObject* fromObj);
typedef void   (SOMLINK * somTD_M_WPObject_somDefaultConstCopyInit)(M_WPObject *somSelf,
		somInitCtrl* ctrl,
		SOMObject* fromObj);
typedef void   (SOMLINK * somTD_M_WPObject_somDefaultVCopyInit)(M_WPObject *somSelf,
		somInitCtrl* ctrl,
		SOMObject* fromObj);
typedef void   (SOMLINK * somTD_M_WPObject_somDefaultConstVCopyInit)(M_WPObject *somSelf,
		somInitCtrl* ctrl,
		SOMObject* fromObj);
typedef M_WPObject*   (SOMLINK * somTD_M_WPObject_somDefaultConstAssign)(M_WPObject *somSelf,
		somAssignCtrl* ctrl,
		SOMObject* fromObj);
typedef M_WPObject*   (SOMLINK * somTD_M_WPObject_somDefaultVAssign)(M_WPObject *somSelf,
		somAssignCtrl* ctrl,
		SOMObject* fromObj);
typedef M_WPObject*   (SOMLINK * somTD_M_WPObject_somDefaultConstVAssign)(M_WPObject *somSelf,
		somAssignCtrl* ctrl,
		SOMObject* fromObj);
typedef void   (SOMLINK * somTD_M_WPObject_somInit)(M_WPObject *somSelf);
typedef void   (SOMLINK * somTD_M_WPObject_somFree)(M_WPObject *somSelf);
typedef void   (SOMLINK * somTD_M_WPObject_somUninit)(M_WPObject *somSelf);
typedef SOMClass*   (SOMLINK * somTD_M_WPObject_somGetClass)(M_WPObject *somSelf);
typedef string   (SOMLINK * somTD_M_WPObject_somGetClassName)(M_WPObject *somSelf);
typedef long   (SOMLINK * somTD_M_WPObject_somGetSize)(M_WPObject *somSelf);
typedef boolean   (SOMLINK * somTD_M_WPObject_somIsA)(M_WPObject *somSelf,
		SOMClass* aClassObj);
typedef boolean   (SOMLINK * somTD_M_WPObject_somIsInstanceOf)(M_WPObject *somSelf,
		SOMClass* aClassObj);
typedef boolean   (SOMLINK * somTD_M_WPObject_somRespondsTo)(M_WPObject *somSelf,
		somId mId);
typedef boolean   (SOMLINK * somTD_M_WPObject_somDispatch)(M_WPObject *somSelf,
		somToken* retValue,
		somId methodId,
		va_list ap);
typedef boolean   (SOMLINK * somTD_M_WPObject_somClassDispatch)(M_WPObject *somSelf,
		SOMClass* clsObj,
		somToken* retValue,
		somId methodId,
		va_list ap);
typedef boolean   (SOMLINK * somTD_M_WPObject_somCastObj)(M_WPObject *somSelf,
		SOMClass* cls);
typedef boolean   (SOMLINK * somTD_M_WPObject_somResetObj)(M_WPObject *somSelf);
typedef void   (SOMLINK * somTD_M_WPObject_somDispatchV)(M_WPObject *somSelf,
		somId methodId,
		somId descriptor,
		va_list ap);
typedef long   (SOMLINK * somTD_M_WPObject_somDispatchL)(M_WPObject *somSelf,
		somId methodId,
		somId descriptor,
		va_list ap);
typedef void*   (SOMLINK * somTD_M_WPObject_somDispatchA)(M_WPObject *somSelf,
		somId methodId,
		somId descriptor,
		va_list ap);
typedef double   (SOMLINK * somTD_M_WPObject_somDispatchD)(M_WPObject *somSelf,
		somId methodId,
		somId descriptor,
		va_list ap);
typedef SOMObject*   (SOMLINK * somTD_M_WPObject_somPrintSelf)(M_WPObject *somSelf);
typedef void   (SOMLINK * somTD_M_WPObject_somDumpSelf)(M_WPObject *somSelf,
		long level);
typedef void   (SOMLINK * somTD_M_WPObject_somDumpSelfInt)(M_WPObject *somSelf,
		long level);
}

#endif /* M_WPObject_API */


/*
 * -- This emitter treats Method Tokens as Thunks by default.
 * -- Use the sc modifier "nothunks" to change this default
 */
#undef somresolve_
#define somresolve_(obj,mToken) ((somMethodProc*)((void)obj, mToken))

/*
 * -- The C++ Wrapper Class for M_WPObject
 */
class M_WPObject : public SOMClass
{
public:

// M_WPObject::new creates the class object if necessary, and then uses somNewNoInit
// to allocate memory and create the object. Initialization is in ctors.
void *operator new(size_t size)
{
   SOM_IgnoreWarning(size);
   if (!_M_WPObject) M_WPObjectNewClass(M_WPObject_MajorVersion,M_WPObject_MinorVersion);
   return (void*)
      SOM_Resolve(_M_WPObject,SOMClass,somNewNoInit)
         ((SOMClass *)((void*)_M_WPObject));
}

// M_WPObject::delete uses the default deallocator for the object's class.
void operator delete(void * obj)
{
   somToken objCls = obj ? *(void**)obj : (somToken) NULL;
   if (somIsObj(objCls)) {
      SOM_Resolve(objCls,SOMClass,somDeallocate)
         ((SOMClass*)objCls, (string)obj);
   }
}

M_WPObject()
{
   if (*(void**)this != 
       ((somParentMtabStructPtr)
        (M_WPObjectCClassData.parentMtab))->mtab)
      return;
   somDefaultInit(0);
}

M_WPObject(M_WPObject* fromObj)
{
   if (*(void**)this != 
       ((somParentMtabStructPtr)
        (M_WPObjectCClassData.parentMtab))->mtab)
      return;
   somDefaultCopyInit(0,((SOMObject*)((void*)fromObj)));
}

M_WPObject(const M_WPObject* fromObj)
{
   if (*(void**)this != 
       ((somParentMtabStructPtr)
        (M_WPObjectCClassData.parentMtab))->mtab)
      return;
   somDefaultConstCopyInit(0,((SOMObject*)((void*)fromObj)));
}

~M_WPObject()
{
   if (!somIsObj(this)) return;
   somDestruct(0,0);
   *(void**)this = **(void***)this;
}


/* method: wpclsCreateDefaultTemplates */
BOOL   wpclsCreateDefaultTemplates(WPObject* Folder)
{
   return SOM_ResolveD(this,M_WPObject,M_WPObject,wpclsCreateDefaultTemplates)
	(this,Folder);
}


/* method: wpclsInitData */
void   wpclsInitData()
{
   SOM_ResolveD(this,M_WPObject,M_WPObject,wpclsInitData)
	(this);
}


/* method: wpclsMakeAwake */
WPObject*   wpclsMakeAwake(PSZ pszTitle,
		ULONG ulStyle,
		HPOINTER hptrIcon,
		POBJDATA pObjData,
		WPFolder* Folder,
		ULONG ulUser)
{
   return SOM_ResolveD(this,M_WPObject,M_WPObject,wpclsMakeAwake)
	(this,pszTitle,ulStyle,hptrIcon,pObjData,Folder,ulUser);
}


/* method: wpclsNew */
WPObject*   wpclsNew(PSZ pszTitle,
		PSZ pszSetupEnv,
		WPFolder* Folder,
		BOOL fLock)
{
   return SOM_ResolveD(this,M_WPObject,M_WPObject,wpclsNew)
	(this,pszTitle,pszSetupEnv,Folder,fLock);
}


/* method: wpclsQueryDefaultHelp */
BOOL   wpclsQueryDefaultHelp(PULONG pHelpPanelId,
		PSZ pszHelpLibrary)
{
   return SOM_ResolveD(this,M_WPObject,M_WPObject,wpclsQueryDefaultHelp)
	(this,pHelpPanelId,pszHelpLibrary);
}


/* method: wpclsQueryDefaultView */
ULONG   wpclsQueryDefaultView()
{
   return SOM_ResolveD(this,M_WPObject,M_WPObject,wpclsQueryDefaultView)
	(this);
}


/* method: wpclsQueryDetails */
PCLASSDETAILS   wpclsQueryDetails()
{
   return SOM_ResolveD(this,M_WPObject,M_WPObject,wpclsQueryDetails)
	(this);
}


/* method: wpclsQueryDetailsInfo */
ULONG   wpclsQueryDetailsInfo(PCLASSFIELDINFO* ppClassFieldInfo,
		PULONG pSize)
{
   return SOM_ResolveD(this,M_WPObject,M_WPObject,wpclsQueryDetailsInfo)
	(this,ppClassFieldInfo,pSize);
}


/* method: wpclsQueryExtendedCriteria */
BOOL   wpclsQueryExtendedCriteria(PSZ pszName,
		ULONG ulSearchType,
		PVOID pvoidExtendedCriteria)
{
   return SOM_ResolveD(this,M_WPObject,M_WPObject,wpclsQueryExtendedCriteria)
	(this,pszName,ulSearchType,pvoidExtendedCriteria);
}


/* method: wpclsQueryFolder */
WPObject*   wpclsQueryFolder(PSZ pszLocation,
		BOOL fLock)
{
   return SOM_ResolveD(this,M_WPObject,M_WPObject,wpclsQueryFolder)
	(this,pszLocation,fLock);
}


/* method: wpclsQueryIcon */
HPOINTER   wpclsQueryIcon()
{
   return SOM_ResolveD(this,M_WPObject,M_WPObject,wpclsQueryIcon)
	(this);
}


/* method: wpclsQuerySearchInfo */
void   wpclsQuerySearchInfo(M_WPObject** ClassExtended,
		M_WPObject** ClassCreate,
		PULONG pulClassCriteriaSize)
{
   SOM_ResolveD(this,M_WPObject,M_WPObject,wpclsQuerySearchInfo)
	(this,ClassExtended,ClassCreate,pulClassCriteriaSize);
}


/* method: wpclsQueryStyle */
ULONG   wpclsQueryStyle()
{
   return SOM_ResolveD(this,M_WPObject,M_WPObject,wpclsQueryStyle)
	(this);
}


/* method: wpclsQueryTitle */
PSZ   wpclsQueryTitle()
{
   return SOM_ResolveD(this,M_WPObject,M_WPObject,wpclsQueryTitle)
	(this);
}


/* method: wpclsUnInitData */
void   wpclsUnInitData()
{
   SOM_ResolveD(this,M_WPObject,M_WPObject,wpclsUnInitData)
	(this);
}


/* method: wpclsFindObjectFirst */
BOOL   wpclsFindObjectFirst(PCLASS pClassList,
		PHFIND phFind,
		PSZ pszTitle,
		WPFolder* Folder,
		BOOL fSubfolders,
		PVOID pExtendedCriteria,
		POBJECT pBuffer,
		PULONG pCount)
{
   return SOM_ResolveD(this,M_WPObject,M_WPObject,wpclsFindObjectFirst)
	(this,pClassList,phFind,pszTitle,Folder,fSubfolders,pExtendedCriteria,pBuffer,pCount);
}


/* method: wpclsFindObjectNext */
BOOL   wpclsFindObjectNext(HFIND hFind,
		POBJECT pBuffer,
		PULONG pCount)
{
   return SOM_ResolveD(this,M_WPObject,M_WPObject,wpclsFindObjectNext)
	(this,hFind,pBuffer,pCount);
}


/* method: wpclsFindObjectEnd */
BOOL   wpclsFindObjectEnd(HFIND hFind)
{
   return SOM_ResolveD(this,M_WPObject,M_WPObject,wpclsFindObjectEnd)
	(this,hFind);
}


/* method: wpclsSetError */
BOOL   wpclsSetError(ULONG ulErrorId)
{
   return SOM_ResolveD(this,M_WPObject,M_WPObject,wpclsSetError)
	(this,ulErrorId);
}


/* method: wpclsQueryError */
ULONG   wpclsQueryError()
{
   return SOM_ResolveD(this,M_WPObject,M_WPObject,wpclsQueryError)
	(this);
}


/* method: wpclsQuerySettingsPageSize */
BOOL   wpclsQuerySettingsPageSize(PSIZEL pSizl)
{
   return SOM_ResolveD(this,M_WPObject,M_WPObject,wpclsQuerySettingsPageSize)
	(this,pSizl);
}


/* method: wpclsQueryIconData */
ULONG   wpclsQueryIconData(PICONINFO pIconInfo)
{
   return SOM_ResolveD(this,M_WPObject,M_WPObject,wpclsQueryIconData)
	(this,pIconInfo);
}


/* method: wpclsQueryObject */
WPObject*   wpclsQueryObject(HOBJECT hObject)
{
   return SOM_ResolveD(this,M_WPObject,M_WPObject,wpclsQueryObject)
	(this,hObject);
}


/* method: wpclsQueryButtonAppearance */
ULONG   wpclsQueryButtonAppearance()
{
   return SOM_ResolveD(this,M_WPObject,M_WPObject,wpclsQueryButtonAppearance)
	(this);
}


/* method: wpclsDecUsage */
void   wpclsDecUsage()
{
   SOM_ResolveD(this,M_WPObject,M_WPObject,wpclsDecUsage)
	(this);
}


/* method: wpclsIncUsage */
void   wpclsIncUsage()
{
   SOM_ResolveD(this,M_WPObject,M_WPObject,wpclsIncUsage)
	(this);
}


/* method: wpclsInsertMultipleObjects */
BOOL   wpclsInsertMultipleObjects(HWND hwndCnr,
		PPOINTL pptlIcon,
		PVOID* pObjectArray,
		PVOID pRecordParent,
		ULONG NumRecords)
{
   return SOM_ResolveD(this,M_WPObject,M_WPObject,wpclsInsertMultipleObjects)
	(this,hwndCnr,pptlIcon,pObjectArray,pRecordParent,NumRecords);
}


/* method: wpclsFindOneObject */
WPObject*   wpclsFindOneObject(HWND hwndOwner,
		PSZ pszFindParams)
{
   return SOM_ResolveD(this,M_WPObject,M_WPObject,wpclsFindOneObject)
	(this,hwndOwner,pszFindParams);
}


/* method: wpclsSetSettingsPageSize */
BOOL   wpclsSetSettingsPageSize(PSIZEL pSizl)
{
   return SOM_ResolveD(this,M_WPObject,M_WPObject,wpclsSetSettingsPageSize)
	(this,pSizl);
}


/* method: wpclsSetIconData */
BOOL   wpclsSetIconData(PICONINFO pIconInfo)
{
   return SOM_ResolveD(this,M_WPObject,M_WPObject,wpclsSetIconData)
	(this,pIconInfo);
}


/* method: wpclsSetIcon */
BOOL   wpclsSetIcon(HPOINTER hptrNewIcon)
{
   return SOM_ResolveD(this,M_WPObject,M_WPObject,wpclsSetIcon)
	(this,hptrNewIcon);
}


/* method: wpclsObjectFromHandle */
WPObject*   wpclsObjectFromHandle(HOBJECT hObject)
{
   return SOM_ResolveD(this,M_WPObject,M_WPObject,wpclsObjectFromHandle)
	(this,hObject);
}


/* method: wpclsRemoveObjects */
BOOL   wpclsRemoveObjects(HWND hwndCnr,
		PVOID* pRecordArray,
		ULONG NumRecords,
		BOOL RemoveAll)
{
   return SOM_ResolveD(this,M_WPObject,M_WPObject,wpclsRemoveObjects)
	(this,hwndCnr,pRecordArray,NumRecords,RemoveAll);
}


/*
 * Reintroduce inherited methods
 */

/* method: _get_somDataAlignment */
long   _get_somDataAlignment()
{
   return SOM_ResolveD(this,M_WPObject,SOMClass,_get_somDataAlignment)
	(this);
}


/* nonstatic method: _get_somInstanceDataOffsets */
SOMClass_somOffsets   _get_somInstanceDataOffsets()
{
   return SOM_ResolveD(this,M_WPObject,SOMClass,_get_somInstanceDataOffsets)
	(this);
}


/* nonstatic method: _get_somDirectInitClasses */
SOMClass_SOMClassSequence   _get_somDirectInitClasses()
{
   return SOM_ResolveD(this,M_WPObject,SOMClass,_get_somDirectInitClasses)
	(this);
}


/* nonstatic method: _set_somDirectInitClasses */
void   _set_somDirectInitClasses(SOMClass_SOMClassSequence* somDirectInitClasses)
{
   SOM_ResolveD(this,M_WPObject,SOMClass,_set_somDirectInitClasses)
	(this,somDirectInitClasses);
}


/* method: somNew */
WPObject*  somNew()
{
   return SOM_ResolveD(this,M_WPObject,SOMClass,somNew)
	(this);
}


/* method: somNewNoInit */
SOMObject*   somNewNoInit()
{
   return SOM_ResolveD(this,M_WPObject,SOMClass,somNewNoInit)
	(this);
}


/* method: somRenew */
SOMObject*   somRenew(void* obj)
{
   return SOM_ResolveD(this,M_WPObject,SOMClass,somRenew)
	(this,obj);
}


/* method: somRenewNoInit */
SOMObject*   somRenewNoInit(void* obj)
{
   return SOM_ResolveD(this,M_WPObject,SOMClass,somRenewNoInit)
	(this,obj);
}


/* method: somRenewNoZero */
SOMObject*   somRenewNoZero(void* obj)
{
   return SOM_ResolveD(this,M_WPObject,SOMClass,somRenewNoZero)
	(this,obj);
}


/* method: somRenewNoInitNoZero */
SOMObject*   somRenewNoInitNoZero(void* obj)
{
   return SOM_ResolveD(this,M_WPObject,SOMClass,somRenewNoInitNoZero)
	(this,obj);
}


/* nonstatic method: somAllocate */
string   somAllocate(long size)
{
   return SOM_ResolveD(this,M_WPObject,SOMClass,somAllocate)
	(this,size);
}


/* nonstatic method: somDeallocate */
void   somDeallocate(string memptr)
{
   SOM_ResolveD(this,M_WPObject,SOMClass,somDeallocate)
	(this,memptr);
}


/* nonstatic method: _get_somClassAllocate */
somMethodProc*   _get_somClassAllocate()
{
   return SOM_ResolveD(this,M_WPObject,SOMClass,_get_somClassAllocate)
	(this);
}


/* nonstatic method: _get_somClassDeallocate */
somMethodProc*   _get_somClassDeallocate()
{
   return SOM_ResolveD(this,M_WPObject,SOMClass,_get_somClassDeallocate)
	(this);
}


/* method: somGetInstanceInitMask */
somBooleanVector   somGetInstanceInitMask(somInitCtrl* ctrl)
{
   return SOM_ResolveD(this,M_WPObject,SOMClass,somGetInstanceInitMask)
	(this,ctrl);
}


/* method: somGetInstanceDestructionMask */
somBooleanVector   somGetInstanceDestructionMask(somDestructCtrl* ctrl)
{
   return SOM_ResolveD(this,M_WPObject,SOMClass,somGetInstanceDestructionMask)
	(this,ctrl);
}


/* method: somGetInstanceAssignmentMask */
somBooleanVector   somGetInstanceAssignmentMask(somAssignCtrl* ctrl)
{
   return SOM_ResolveD(this,M_WPObject,SOMClass,somGetInstanceAssignmentMask)
	(this,ctrl);
}


/* method: somInitClass */
void   somInitClass(string className,
		SOMClass* parentClass,
		long dataSize,
		long maxStaticMethods,
		long majorVersion,
		long minorVersion)
{
   SOM_ResolveD(this,M_WPObject,SOMClass,somInitClass)
	(this,className,parentClass,dataSize,maxStaticMethods,majorVersion,minorVersion);
}


/* method: somInitMIClass */
void   somInitMIClass(long inherit_vars,
		string className,
		SOMClass_SOMClassSequence* parentClasses,
		long dataSize,
		long dataAlignment,
		long maxStaticMethods,
		long majorVersion,
		long minorVersion)
{
   SOM_ResolveD(this,M_WPObject,SOMClass,somInitMIClass)
	(this,inherit_vars,className,parentClasses,dataSize,dataAlignment,maxStaticMethods,majorVersion,minorVersion);
}


/* method: somAddStaticMethod */
somMToken   somAddStaticMethod(somId methodId,
		somId methodDescriptor,
		somMethodPtr method,
		somMethodPtr redispatchStub,
		somMethodPtr applyStub)
{
   return SOM_ResolveD(this,M_WPObject,SOMClass,somAddStaticMethod)
	(this,methodId,methodDescriptor,method,redispatchStub,applyStub);
}


/* method: somAddDynamicMethod */
void   somAddDynamicMethod(somId methodId,
		somId methodDescriptor,
		somMethodPtr method,
		somMethodPtr applyStub)
{
   SOM_ResolveD(this,M_WPObject,SOMClass,somAddDynamicMethod)
	(this,methodId,methodDescriptor,method,applyStub);
}


/* method: somOverrideSMethod */
void   somOverrideSMethod(somId methodId,
		somMethodPtr method)
{
   SOM_ResolveD(this,M_WPObject,SOMClass,somOverrideSMethod)
	(this,methodId,method);
}


/* method: somClassReady */
void   somClassReady()
{
   SOM_ResolveD(this,M_WPObject,SOMClass,somClassReady)
	(this);
}


/* method: somGetApplyStub */
somMethodPtr   somGetApplyStub(somId methodId)
{
   return SOM_ResolveD(this,M_WPObject,SOMClass,somGetApplyStub)
	(this,methodId);
}


/* method: somGetClassData */
somClassDataStructure*   somGetClassData()
{
   return SOM_ResolveD(this,M_WPObject,SOMClass,somGetClassData)
	(this);
}


/* method: somSetClassData */
void   somSetClassData(somClassDataStructure* cds)
{
   SOM_ResolveD(this,M_WPObject,SOMClass,somSetClassData)
	(this,cds);
}


/* method: somGetClassMtab */
somMethodTab*   somGetClassMtab()
{
   return SOM_ResolveD(this,M_WPObject,SOMClass,somGetClassMtab)
	(this);
}


/* method: somGetInstanceOffset */
long   somGetInstanceOffset()
{
   return SOM_ResolveD(this,M_WPObject,SOMClass,somGetInstanceOffset)
	(this);
}


/* method: somGetInstancePartSize */
long   somGetInstancePartSize()
{
   return SOM_ResolveD(this,M_WPObject,SOMClass,somGetInstancePartSize)
	(this);
}


/* method: somGetInstanceSize */
long   somGetInstanceSize()
{
   return SOM_ResolveD(this,M_WPObject,SOMClass,somGetInstanceSize)
	(this);
}


/* method: somGetInstanceToken */
somDToken   somGetInstanceToken()
{
   return SOM_ResolveD(this,M_WPObject,SOMClass,somGetInstanceToken)
	(this);
}


/* method: somGetMemberToken */
somDToken   somGetMemberToken(long memberOffset,
		somDToken instanceToken)
{
   return SOM_ResolveD(this,M_WPObject,SOMClass,somGetMemberToken)
	(this,memberOffset,instanceToken);
}


/* method: somGetMethodData */
boolean   somGetMethodData(somId methodId,
		somMethodData* md)
{
   return SOM_ResolveD(this,M_WPObject,SOMClass,somGetMethodData)
	(this,methodId,md);
}


/* method: somGetRdStub */
somMethodProc*   somGetRdStub(somId methodId)
{
   return SOM_ResolveD(this,M_WPObject,SOMClass,somGetRdStub)
	(this,methodId);
}


/* method: somGetMethodDescriptor */
somId   somGetMethodDescriptor(somId methodId)
{
   return SOM_ResolveD(this,M_WPObject,SOMClass,somGetMethodDescriptor)
	(this,methodId);
}


/* method: somGetMethodIndex */
long   somGetMethodIndex(somId id)
{
   return SOM_ResolveD(this,M_WPObject,SOMClass,somGetMethodIndex)
	(this,id);
}


/* method: somGetMethodToken */
somMToken   somGetMethodToken(somId methodId)
{
   return SOM_ResolveD(this,M_WPObject,SOMClass,somGetMethodToken)
	(this,methodId);
}


/* method: somGetName */
string   somGetName()
{
   return SOM_ResolveD(this,M_WPObject,SOMClass,somGetName)
	(this);
}


/* method: somGetNthMethodData */
boolean   somGetNthMethodData(long n,
		somMethodData* md)
{
   return SOM_ResolveD(this,M_WPObject,SOMClass,somGetNthMethodData)
	(this,n,md);
}


/* method: somGetNthMethodInfo */
somId   somGetNthMethodInfo(long n,
		somId* descriptor)
{
   return SOM_ResolveD(this,M_WPObject,SOMClass,somGetNthMethodInfo)
	(this,n,descriptor);
}


/* method: somGetNumMethods */
long   somGetNumMethods()
{
   return SOM_ResolveD(this,M_WPObject,SOMClass,somGetNumMethods)
	(this);
}


/* method: somGetNumStaticMethods */
long   somGetNumStaticMethods()
{
   return SOM_ResolveD(this,M_WPObject,SOMClass,somGetNumStaticMethods)
	(this);
}


/* method: somGetParent */
SOMClass*   somGetParent()
{
   return SOM_ResolveD(this,M_WPObject,SOMClass,somGetParent)
	(this);
}


/* method: somGetParents */
SOMClass_SOMClassSequence   somGetParents()
{
   return SOM_ResolveD(this,M_WPObject,SOMClass,somGetParents)
	(this);
}


/* method: somGetPClsMtab */
somMethodTabs   somGetPClsMtab()
{
   return SOM_ResolveD(this,M_WPObject,SOMClass,somGetPClsMtab)
	(this);
}


/* method: somGetPClsMtabs */
somMethodTabs   somGetPClsMtabs()
{
   return SOM_ResolveD(this,M_WPObject,SOMClass,somGetPClsMtabs)
	(this);
}


/* method: somGetVersionNumbers */
void   somGetVersionNumbers(long* majorVersion,
		long* minorVersion)
{
   SOM_ResolveD(this,M_WPObject,SOMClass,somGetVersionNumbers)
	(this,majorVersion,minorVersion);
}


/* method: somSetMethodDescriptor */
boolean   somSetMethodDescriptor(somId methodId,
		somId descriptor)
{
   return SOM_ResolveD(this,M_WPObject,SOMClass,somSetMethodDescriptor)
	(this,methodId,descriptor);
}


/* method: somFindMethod */
boolean   somFindMethod(somId methodId,
		somMethodPtr* m)
{
   return SOM_ResolveD(this,M_WPObject,SOMClass,somFindMethod)
	(this,methodId,m);
}


/* method: somFindMethodOk */
boolean   somFindMethodOk(somId methodId,
		somMethodPtr* m)
{
   return SOM_ResolveD(this,M_WPObject,SOMClass,somFindMethodOk)
	(this,methodId,m);
}


/* method: somFindSMethod */
somMethodPtr   somFindSMethod(somId methodId)
{
   return SOM_ResolveD(this,M_WPObject,SOMClass,somFindSMethod)
	(this,methodId);
}


/* method: somFindSMethodOk */
somMethodPtr   somFindSMethodOk(somId methodId)
{
   return SOM_ResolveD(this,M_WPObject,SOMClass,somFindSMethodOk)
	(this,methodId);
}


/* method: somLookupMethod */
somMethodPtr   somLookupMethod(somId methodId)
{
   return SOM_ResolveD(this,M_WPObject,SOMClass,somLookupMethod)
	(this,methodId);
}


/* method: somCheckVersion */
boolean   somCheckVersion(long majorVersion,
		long minorVersion)
{
   return SOM_ResolveD(this,M_WPObject,SOMClass,somCheckVersion)
	(this,majorVersion,minorVersion);
}


/* method: somDescendedFrom */
boolean   somDescendedFrom(SOMClass* aClassObj)
{
   return SOM_ResolveD(this,M_WPObject,SOMClass,somDescendedFrom)
	(this,aClassObj);
}


/* method: somSupportsMethod */
boolean   somSupportsMethod(somId mId)
{
   return SOM_ResolveD(this,M_WPObject,SOMClass,somSupportsMethod)
	(this,mId);
}


/* method: somDefinedMethod */
somMethodPtr   somDefinedMethod(somMToken method)
{
   return SOM_ResolveD(this,M_WPObject,SOMClass,somDefinedMethod)
	(this,method);
}


/* method: somOverrideMtab */
void   somOverrideMtab()
{
   SOM_ResolveD(this,M_WPObject,SOMClass,somOverrideMtab)
	(this);
}


/* initializer method: somDefaultInit */
void   somDefaultInit(somInitCtrl* ctrl)
{
   SOM_ResolveD(this,M_WPObject,SOMObject,somDefaultInit)
	(this,ctrl);
}


/* method: somDestruct */
void   somDestruct(octet doFree,
		somDestructCtrl* ctrl)
{
   SOM_ResolveD(this,M_WPObject,SOMObject,somDestruct)
	(this,doFree,ctrl);
}


/* method: somDefaultCopyInit */
void   somDefaultCopyInit(somInitCtrl* ctrl,
		SOMObject* fromObj)
{
   SOM_ResolveD(this,M_WPObject,SOMObject,somDefaultCopyInit)
	(this,ctrl,fromObj);
}


/* method: somDefaultAssign */
M_WPObject*  somDefaultAssign(somAssignCtrl* ctrl,
		SOMObject* fromObj)
{
   return SOM_ResolveD(this,M_WPObject,SOMObject,somDefaultAssign)
	(this,ctrl,fromObj);
}


/* method: somDefaultConstCopyInit */
void   somDefaultConstCopyInit(somInitCtrl* ctrl,
		SOMObject* fromObj)
{
   SOM_ResolveD(this,M_WPObject,SOMObject,somDefaultConstCopyInit)
	(this,ctrl,fromObj);
}


/* method: somDefaultVCopyInit */
void   somDefaultVCopyInit(somInitCtrl* ctrl,
		SOMObject* fromObj)
{
   SOM_ResolveD(this,M_WPObject,SOMObject,somDefaultVCopyInit)
	(this,ctrl,fromObj);
}


/* method: somDefaultConstVCopyInit */
void   somDefaultConstVCopyInit(somInitCtrl* ctrl,
		SOMObject* fromObj)
{
   SOM_ResolveD(this,M_WPObject,SOMObject,somDefaultConstVCopyInit)
	(this,ctrl,fromObj);
}


/* method: somDefaultConstAssign */
M_WPObject*  somDefaultConstAssign(somAssignCtrl* ctrl,
		SOMObject* fromObj)
{
   return SOM_ResolveD(this,M_WPObject,SOMObject,somDefaultConstAssign)
	(this,ctrl,fromObj);
}


/* method: somDefaultVAssign */
M_WPObject*  somDefaultVAssign(somAssignCtrl* ctrl,
		SOMObject* fromObj)
{
   return SOM_ResolveD(this,M_WPObject,SOMObject,somDefaultVAssign)
	(this,ctrl,fromObj);
}


/* method: somDefaultConstVAssign */
M_WPObject*  somDefaultConstVAssign(somAssignCtrl* ctrl,
		SOMObject* fromObj)
{
   return SOM_ResolveD(this,M_WPObject,SOMObject,somDefaultConstVAssign)
	(this,ctrl,fromObj);
}


/* method: somInit */
void   somInit()
{
   SOM_ResolveD(this,M_WPObject,SOMObject,somInit)
	(this);
}


/* method: somFree */
void   somFree()
{
   SOM_ResolveD(this,M_WPObject,SOMObject,somFree)
	(this);
}


/* method: somUninit */
void   somUninit()
{
   SOM_ResolveD(this,M_WPObject,SOMObject,somUninit)
	(this);
}


/* method: somGetClass */
SOMClass*   somGetClass()
{
   return SOM_ResolveD(this,M_WPObject,SOMObject,somGetClass)
	(this);
}


/* method: somGetClassName */
string   somGetClassName()
{
   return SOM_ResolveD(this,M_WPObject,SOMObject,somGetClassName)
	(this);
}


/* method: somGetSize */
long   somGetSize()
{
   return SOM_ResolveD(this,M_WPObject,SOMObject,somGetSize)
	(this);
}


/* method: somIsA */
boolean   somIsA(SOMClass* aClassObj)
{
   return SOM_ResolveD(this,M_WPObject,SOMObject,somIsA)
	(this,aClassObj);
}


/* method: somIsInstanceOf */
boolean   somIsInstanceOf(SOMClass* aClassObj)
{
   return SOM_ResolveD(this,M_WPObject,SOMObject,somIsInstanceOf)
	(this,aClassObj);
}


/* method: somRespondsTo */
boolean   somRespondsTo(somId mId)
{
   return SOM_ResolveD(this,M_WPObject,SOMObject,somRespondsTo)
	(this,mId);
}


/* va_list method: somDispatch */
/* the va_list invocation form */
boolean   M_WPObject_somDispatch(somToken* retValue,
		somId methodId,
		va_list ap)
{
return SOM_ResolveD(this,M_WPObject,SOMObject,somDispatch)
	(this,retValue,methodId,ap);
}

/* the varargs invocation form */
boolean   somDispatch(somToken* retValue,
		somId methodId,
		...)
{
   va_list ap;
   va_start(ap, methodId);
   boolean __somResult = 
      SOM_ResolveD(this,M_WPObject,SOMObject,somDispatch)
	(this,retValue,methodId,ap);
   va_end(ap);
   return __somResult;
}


/* va_list method: somClassDispatch */
/* the va_list invocation form */
boolean   M_WPObject_somClassDispatch(SOMClass* clsObj,
		somToken* retValue,
		somId methodId,
		va_list ap)
{
return SOM_ResolveD(this,M_WPObject,SOMObject,somClassDispatch)
	(this,clsObj,retValue,methodId,ap);
}

/* the varargs invocation form */
boolean   somClassDispatch(SOMClass* clsObj,
		somToken* retValue,
		somId methodId,
		...)
{
   va_list ap;
   va_start(ap, methodId);
   boolean __somResult = 
      SOM_ResolveD(this,M_WPObject,SOMObject,somClassDispatch)
	(this,clsObj,retValue,methodId,ap);
   va_end(ap);
   return __somResult;
}


/* method: somCastObj */
boolean   somCastObj(SOMClass* cls)
{
   return SOM_ResolveD(this,M_WPObject,SOMObject,somCastObj)
	(this,cls);
}


/* method: somResetObj */
boolean   somResetObj()
{
   return SOM_ResolveD(this,M_WPObject,SOMObject,somResetObj)
	(this);
}


/* va_list method: somDispatchV */
/* the va_list invocation form */
void   M_WPObject_somDispatchV(somId methodId,
		somId descriptor,
		va_list ap)
{
   SOM_ResolveD(this,M_WPObject,SOMObject,somDispatchV)
	(this,methodId,descriptor,ap);
}

/* the varargs invocation form */
void   somDispatchV(somId methodId,
		somId descriptor,
		...)
{
   va_list ap;
   va_start(ap, descriptor);
   SOM_ResolveD(this,M_WPObject,SOMObject,somDispatchV)
	(this,methodId,descriptor,ap);
   va_end(ap);
}


/* va_list method: somDispatchL */
/* the va_list invocation form */
long   M_WPObject_somDispatchL(somId methodId,
		somId descriptor,
		va_list ap)
{
return SOM_ResolveD(this,M_WPObject,SOMObject,somDispatchL)
	(this,methodId,descriptor,ap);
}

/* the varargs invocation form */
long   somDispatchL(somId methodId,
		somId descriptor,
		...)
{
   va_list ap;
   va_start(ap, descriptor);
   long __somResult = 
      SOM_ResolveD(this,M_WPObject,SOMObject,somDispatchL)
	(this,methodId,descriptor,ap);
   va_end(ap);
   return __somResult;
}


/* va_list method: somDispatchA */
/* the va_list invocation form */
void*   M_WPObject_somDispatchA(somId methodId,
		somId descriptor,
		va_list ap)
{
return SOM_ResolveD(this,M_WPObject,SOMObject,somDispatchA)
	(this,methodId,descriptor,ap);
}

/* the varargs invocation form */
void*   somDispatchA(somId methodId,
		somId descriptor,
		...)
{
   va_list ap;
   va_start(ap, descriptor);
   void* __somResult = 
      SOM_ResolveD(this,M_WPObject,SOMObject,somDispatchA)
	(this,methodId,descriptor,ap);
   va_end(ap);
   return __somResult;
}


/* va_list method: somDispatchD */
/* the va_list invocation form */
double   M_WPObject_somDispatchD(somId methodId,
		somId descriptor,
		va_list ap)
{
return SOM_ResolveD(this,M_WPObject,SOMObject,somDispatchD)
	(this,methodId,descriptor,ap);
}

/* the varargs invocation form */
double   somDispatchD(somId methodId,
		somId descriptor,
		...)
{
   va_list ap;
   va_start(ap, descriptor);
   double __somResult = 
      SOM_ResolveD(this,M_WPObject,SOMObject,somDispatchD)
	(this,methodId,descriptor,ap);
   va_end(ap);
   return __somResult;
}


/* method: somPrintSelf */
SOMObject*   somPrintSelf()
{
   return SOM_ResolveD(this,M_WPObject,SOMObject,somPrintSelf)
	(this);
}


/* method: somDumpSelf */
void   somDumpSelf(long level)
{
   SOM_ResolveD(this,M_WPObject,SOMObject,somDumpSelf)
	(this,level);
}


/* method: somDumpSelfInt */
void   somDumpSelfInt(long level)
{
   SOM_ResolveD(this,M_WPObject,SOMObject,somDumpSelfInt)
	(this,level);
}



};   /* M_WPObject */



#endif       /* SOM_M_WPObject_xh */
