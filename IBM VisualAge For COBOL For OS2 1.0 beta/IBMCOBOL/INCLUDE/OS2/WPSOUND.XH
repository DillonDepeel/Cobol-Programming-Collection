
/*
 * This file was generated by the SOM Compiler.
 * FileName: wpsound.xh.
 * Generated using:
 *     SOM Precompiler somipc: 2.29.1.2
 *     SOM Emitter emitxh: 2.41
 */

/*
 *   Module Header
 * 
 *   Module Name: WPSOUND
 * 
 *   OS/2 Presentation Manager Workplace class definitions
 * 
 *   Copyright (c) International Business Machines Corporation 1991, 1992
 * 
 */


#ifndef SOM_WPSound_xh
#define SOM_WPSound_xh

class WPSound;

#define WPSound_MajorVersion 1
#define WPSound_MinorVersion 2

/* C++ SOM defs */
#include <somcls.xh>
#include <somcm.xh>

/* C++ parent defs */
#ifndef SOM_WPAbstract_xh
#include <wpabs.xh>
#endif

#ifndef WPSound_API
#define WPSound_API
/*
 * -- The Class API
 */

/*
 * Start of user-defined types:
 */
class SOMClass;
class SOMObject;
class WPFolder;
class M_WPObject;
class WPObject;
class M_WPAbstract;
class M_WPSound;

/*
 * End of user-defined types.
 */

/* A procedure to create the WPSound Class */
class M_WPSound;
SOMEXTERN M_WPSound * SOMLINK WPSoundNewClass(
		integer4 majorVersion,
		integer4 minorVersion);

/* The API to the WPSound class object, and the methods it introduces. */
SOMEXTERN struct WPSoundClassDataStructure {
	M_WPSound *classObject;
	somMToken wpAddSoundWarningBeepPage;
} SOMDLINK WPSoundClassData;
#define _WPSound WPSoundClassData.classObject

/* The API to parentMtabs for WPSound, and the instance data it introduces. */
SOMEXTERN struct WPSoundCClassDataStructure {
	somMethodTabs parentMtab;
	somDToken              instanceDataToken;
} SOMDLINK WPSoundCClassData;

/*
 * -- Typedefs for WPSound Method Procedures
 */
SOMEXTERN {
typedef ULONG   (SOMLINK * somTD_WPSound_wpAddSoundWarningBeepPage)(WPSound *somSelf,
		HWND hwndNotebook);

/*
 * -- Typedefs for Reintroduced Wrapper Methods
 */
typedef HOBJECT   (SOMLINK * somTD_WPSound_wpQueryHandle)(WPSound *somSelf);
typedef BOOL   (SOMLINK * somTD_WPSound_wpSaveImmediate)(WPSound *somSelf);
typedef BOOL   (SOMLINK * somTD_WPSound_wpSaveState)(WPSound *somSelf);
typedef BOOL   (SOMLINK * somTD_WPSound_wpRestoreState)(WPSound *somSelf,
		ULONG ulReserved);
typedef BOOL   (SOMLINK * somTD_WPSound_wpSetTitle)(WPSound *somSelf,
		PSZ pszNewTitle);
typedef WPObject*   (SOMLINK * somTD_WPSound_wpCopyObject)(WPSound *somSelf,
		WPFolder* Folder,
		BOOL fLock);
typedef BOOL   (SOMLINK * somTD_WPSound_wpMoveObject)(WPSound *somSelf,
		WPFolder* Folder);
typedef HPOINTER   (SOMLINK * somTD_WPSound_wpQueryIcon)(WPSound *somSelf);
typedef ULONG   (SOMLINK * somTD_WPSound_wpQueryIconData)(WPSound *somSelf,
		PICONINFO pIconInfo);
typedef BOOL   (SOMLINK * somTD_WPSound_wpSetIconData)(WPSound *somSelf,
		PICONINFO pIconInfo);
typedef MRESULT   (SOMLINK * somTD_WPSound_wpDragOver)(WPSound *somSelf,
		HWND hwndCnr,
		PDRAGINFO pdrgInfo);
typedef BOOL32   (SOMLINK * somTD_WPSound_wpReplaceObject)(WPSound *somSelf,
		WPObject* targetObject,
		BOOL32 fMove);
typedef ULONG   (SOMLINK * somTD_WPSound_wpQueryNameClashOptions)(WPSound *somSelf,
		ULONG menuID);
typedef void   (SOMLINK * somTD_WPSound_somDefaultInit)(WPSound *somSelf,
		somInitCtrl* ctrl);
typedef void   (SOMLINK * somTD_WPSound_somDestruct)(WPSound *somSelf,
		octet doFree,
		somDestructCtrl* ctrl);
typedef ULONG   (SOMLINK * somTD_WPSound_wpAddObjectGeneralPage)(WPSound *somSelf,
		HWND hwndNotebook);
typedef ULONG   (SOMLINK * somTD_WPSound_wpAddObjectGeneralPage2)(WPSound *somSelf,
		HWND hwndNotebook);
typedef ULONG   (SOMLINK * somTD_WPSound_wpAddObjectWindowPage)(WPSound *somSelf,
		HWND hwndNotebook);
typedef BOOL   (SOMLINK * somTD_WPSound_wpAddSettingsPages)(WPSound *somSelf,
		HWND hwndNotebook);
typedef BOOL   (SOMLINK * somTD_WPSound_wpAddToObjUseList)(WPSound *somSelf,
		PUSEITEM pUseItem);
typedef PBYTE   (SOMLINK * somTD_WPSound_wpAllocMem)(WPSound *somSelf,
		ULONG cbBytes,
		PULONG prc);
typedef BOOL32   (SOMLINK * somTD_WPSound_wpAppendObject)(WPSound *somSelf,
		WPObject* targetObject,
		BOOL32 fMove);
typedef BOOL   (SOMLINK * somTD_WPSound_wpAssertObjectMutexSem)(WPSound *somSelf);
typedef BOOL   (SOMLINK * somTD_WPSound_wpClose)(WPSound *somSelf);
typedef PMINIRECORDCORE   (SOMLINK * somTD_WPSound_wpCnrInsertObject)(WPSound *somSelf,
		HWND hwndCnr,
		PPOINTL pptlIcon,
		PMINIRECORDCORE preccParent,
		PRECORDINSERT pRecInsert);
typedef BOOL   (SOMLINK * somTD_WPSound_wpCnrRemoveObject)(WPSound *somSelf,
		HWND hwndCnr);
typedef BOOL   (SOMLINK * somTD_WPSound_wpCnrSetEmphasis)(WPSound *somSelf,
		ULONG ulEmphasisAttr,
		BOOL fTurnOn);
typedef ULONG   (SOMLINK * somTD_WPSound_wpConfirmDelete)(WPSound *somSelf,
		ULONG fConfirmations);
typedef ULONG   (SOMLINK * somTD_WPSound_wpConfirmObjectTitle)(WPSound *somSelf,
		WPFolder* Folder,
		WPObject** ppDuplicate,
		PSZ pszTitle,
		ULONG cbTitle,
		ULONG menuID);
typedef void   (SOMLINK * somTD_WPSound_wpCopiedFromTemplate)(WPSound *somSelf);
typedef WPObject*   (SOMLINK * somTD_WPSound_wpCreateAnother)(WPSound *somSelf,
		PSZ pszTitle,
		PSZ pszSetupEnv,
		WPFolder* Folder);
typedef WPObject*   (SOMLINK * somTD_WPSound_wpCreateFromTemplate)(WPSound *somSelf,
		WPFolder* folder,
		BOOL fLock);
typedef WPObject*   (SOMLINK * somTD_WPSound_wpCreateShadowObject)(WPSound *somSelf,
		WPFolder* Folder,
		BOOL fLock);
typedef ULONG   (SOMLINK * somTD_WPSound_wpDelete)(WPSound *somSelf,
		ULONG fConfirmations);
typedef BOOL   (SOMLINK * somTD_WPSound_wpDeleteFromObjUseList)(WPSound *somSelf,
		PUSEITEM pUseItem);
typedef BOOL   (SOMLINK * somTD_WPSound_wpDisplayHelp)(WPSound *somSelf,
		ULONG HelpPanelId,
		PSZ HelpLibrary);
typedef HWND   (SOMLINK * somTD_WPSound_wpDisplayMenu)(WPSound *somSelf,
		HWND hwndOwner,
		HWND hwndClient,
		POINTL* ptlPopupPt,
		ULONG ulMenuType,
		ULONG ulReserved);
typedef BOOL   (SOMLINK * somTD_WPSound_wpDoesObjectMatch)(WPSound *somSelf,
		PVOID pvoidExtendedCriteria);
typedef MRESULT   (SOMLINK * somTD_WPSound_wpDraggedOverObject)(WPSound *somSelf,
		WPObject* DraggedOverObject);
typedef MRESULT   (SOMLINK * somTD_WPSound_wpDrop)(WPSound *somSelf,
		HWND hwndCnr,
		PDRAGINFO pdrgInfo,
		PDRAGITEM pdrgItem);
typedef BOOL   (SOMLINK * somTD_WPSound_wpDroppedOnObject)(WPSound *somSelf,
		WPObject* DroppedOnObject);
typedef MRESULT   (SOMLINK * somTD_WPSound_wpEndConversation)(WPSound *somSelf,
		ULONG ulItemID,
		ULONG flResult);
typedef ULONG   (SOMLINK * somTD_WPSound_wpFilterPopupMenu)(WPSound *somSelf,
		ULONG ulFlags,
		HWND hwndCnr,
		BOOL fMultiSelect);
typedef PUSEITEM   (SOMLINK * somTD_WPSound_wpFindUseItem)(WPSound *somSelf,
		ULONG type,
		PUSEITEM pCurrentItem);
typedef BOOL   (SOMLINK * somTD_WPSound_wpFormatDragItem)(WPSound *somSelf,
		PDRAGITEM pdrgItem);
typedef BOOL   (SOMLINK * somTD_WPSound_wpFree)(WPSound *somSelf);
typedef BOOL   (SOMLINK * somTD_WPSound_wpFreeMem)(WPSound *somSelf,
		PBYTE pByte);
typedef BOOL   (SOMLINK * somTD_WPSound_wpHide)(WPSound *somSelf);
typedef void   (SOMLINK * somTD_WPSound_wpInitData)(WPSound *somSelf);
typedef BOOL   (SOMLINK * somTD_WPSound_wpInsertPopupMenuItems)(WPSound *somSelf,
		HWND hwndMenu,
		ULONG iPosition,
		HMODULE hmod,
		ULONG MenuID,
		ULONG SubMenuID);
typedef ULONG   (SOMLINK * somTD_WPSound_wpInsertSettingsPage)(WPSound *somSelf,
		HWND hwndNotebook,
		PPAGEINFO ppageinfo);
typedef BOOL   (SOMLINK * somTD_WPSound_wpMenuItemHelpSelected)(WPSound *somSelf,
		ULONG MenuId);
typedef BOOL   (SOMLINK * somTD_WPSound_wpMenuItemSelected)(WPSound *somSelf,
		HWND hwndFrame,
		ULONG ulMenuId);
typedef BOOL   (SOMLINK * somTD_WPSound_wpModifyPopupMenu)(WPSound *somSelf,
		HWND hwndMenu,
		HWND hwndCnr,
		ULONG iPosition);
typedef HWND   (SOMLINK * somTD_WPSound_wpOpen)(WPSound *somSelf,
		HWND hwndCnr,
		ULONG ulView,
		ULONG param);
typedef BOOL   (SOMLINK * somTD_WPSound_wpPrintObject)(WPSound *somSelf,
		PPRINTDEST pPrintDest,
		ULONG ulReserved);
typedef ULONG   (SOMLINK * somTD_WPSound_wpQueryConcurrentView)(WPSound *somSelf);
typedef ULONG   (SOMLINK * somTD_WPSound_wpQueryButtonAppearance)(WPSound *somSelf);
typedef ULONG   (SOMLINK * somTD_WPSound_wpQueryConfirmations)(WPSound *somSelf);
typedef BOOL   (SOMLINK * somTD_WPSound_wpQueryDefaultHelp)(WPSound *somSelf,
		PULONG pHelpPanelId,
		PSZ HelpLibrary);
typedef ULONG   (SOMLINK * somTD_WPSound_wpQueryDefaultView)(WPSound *somSelf);
typedef ULONG   (SOMLINK * somTD_WPSound_wpQueryDetailsData)(WPSound *somSelf,
		PVOID* ppDetailsData,
		PULONG pcp);
typedef ULONG   (SOMLINK * somTD_WPSound_wpQueryError)(WPSound *somSelf);
typedef BOOL   (SOMLINK * somTD_WPSound_wpSetFolder)(WPSound *somSelf,
		WPObject* container);
typedef WPObject*   (SOMLINK * somTD_WPSound_wpQueryFolder)(WPSound *somSelf);
typedef ULONG   (SOMLINK * somTD_WPSound_wpQueryMinWindow)(WPSound *somSelf);
typedef ULONG   (SOMLINK * somTD_WPSound_wpQueryStyle)(WPSound *somSelf);
typedef BOOL32   (SOMLINK * somTD_WPSound_wpSetTaskRec)(WPSound *somSelf,
		PTASKREC pNew,
		PTASKREC pOld);
typedef PTASKREC   (SOMLINK * somTD_WPSound_wpFindTaskRec)(WPSound *somSelf);
typedef PSZ   (SOMLINK * somTD_WPSound_wpQueryTitle)(WPSound *somSelf);
typedef BOOL   (SOMLINK * somTD_WPSound_wpRegisterView)(WPSound *somSelf,
		HWND hwndFrame,
		PSZ pszViewTitle);
typedef ULONG   (SOMLINK * somTD_WPSound_wpReleaseObjectMutexSem)(WPSound *somSelf);
typedef MRESULT   (SOMLINK * somTD_WPSound_wpRender)(WPSound *somSelf,
		PDRAGTRANSFER pdxfer);
typedef MRESULT   (SOMLINK * somTD_WPSound_wpRenderComplete)(WPSound *somSelf,
		PDRAGTRANSFER pdxfer,
		ULONG ulResult);
typedef ULONG   (SOMLINK * somTD_WPSound_wpRequestObjectMutexSem)(WPSound *somSelf,
		ULONG ulTimeout);
typedef BOOL   (SOMLINK * somTD_WPSound_wpRestore)(WPSound *somSelf);
typedef BOOL   (SOMLINK * somTD_WPSound_wpRestoreData)(WPSound *somSelf,
		PSZ pszClass,
		ULONG ulKey,
		PBYTE pValue,
		PULONG pcbValue);
typedef BOOL   (SOMLINK * somTD_WPSound_wpRestoreLong)(WPSound *somSelf,
		PSZ pszClass,
		ULONG ulKey,
		PULONG pulValue);
typedef BOOL   (SOMLINK * somTD_WPSound_wpRestoreString)(WPSound *somSelf,
		PSZ pszClass,
		ULONG ulKey,
		PSZ pszValue,
		PULONG pcbValue);
typedef BOOL   (SOMLINK * somTD_WPSound_wpSaveData)(WPSound *somSelf,
		PSZ pszClass,
		ULONG ulKey,
		PBYTE pValue,
		ULONG cbValue);
typedef BOOL   (SOMLINK * somTD_WPSound_wpSaveDeferred)(WPSound *somSelf);
typedef BOOL   (SOMLINK * somTD_WPSound_wpSaveLong)(WPSound *somSelf,
		PSZ pszClass,
		ULONG ulKey,
		ULONG ulValue);
typedef BOOL   (SOMLINK * somTD_WPSound_wpSaveString)(WPSound *somSelf,
		PSZ pszClass,
		ULONG ulKey,
		PSZ pszValue);
typedef BOOL   (SOMLINK * somTD_WPSound_wpScanSetupString)(WPSound *somSelf,
		PSZ pszSetupString,
		PSZ pszKey,
		PSZ pszValue,
		PULONG pcbValue);
typedef void   (SOMLINK * somTD_WPSound_wpSetConcurrentView)(WPSound *somSelf,
		ULONG ulCCView);
typedef void   (SOMLINK * somTD_WPSound_wpSetButtonAppearance)(WPSound *somSelf,
		ULONG ulButtonType);
typedef BOOL   (SOMLINK * somTD_WPSound_wpSetDefaultHelp)(WPSound *somSelf,
		ULONG HelpPanelId,
		PSZ HelpLibrary);
typedef BOOL   (SOMLINK * somTD_WPSound_wpSetDefaultView)(WPSound *somSelf,
		ULONG ulView);
typedef BOOL   (SOMLINK * somTD_WPSound_wpSetError)(WPSound *somSelf,
		ULONG ulErrorId);
typedef BOOL   (SOMLINK * somTD_WPSound_wpSetIconHandle)(WPSound *somSelf,
		HPOINTER hptrNewIcon);
typedef USHORT   (SOMLINK * somTD_WPSound_wpQueryScreenGroupID)(WPSound *somSelf,
		USHORT usPrevSgId);
typedef BOOL   (SOMLINK * somTD_WPSound_wpSetupOnce)(WPSound *somSelf,
		PSZ pszSetupString);
typedef BOOL   (SOMLINK * somTD_WPSound_wpSetIcon)(WPSound *somSelf,
		HPOINTER hptrNewIcon);
typedef void   (SOMLINK * somTD_WPSound_wpSetMinWindow)(WPSound *somSelf,
		ULONG ulMinWindow);
typedef BOOL   (SOMLINK * somTD_WPSound_wpSetStyle)(WPSound *somSelf,
		ULONG ulNewStyle);
typedef BOOL   (SOMLINK * somTD_WPSound_wpModifyStyle)(WPSound *somSelf,
		ULONG ulStyleFlags,
		ULONG ulStyleMask);
typedef BOOL   (SOMLINK * somTD_WPSound_wpSetup)(WPSound *somSelf,
		PSZ pszSetupString);
typedef BOOL   (SOMLINK * somTD_WPSound_wpSwitchTo)(WPSound *somSelf,
		ULONG View);
typedef void   (SOMLINK * somTD_WPSound_wpUnInitData)(WPSound *somSelf);
typedef HWND   (SOMLINK * somTD_WPSound_wpViewObject)(WPSound *somSelf,
		HWND hwndCnr,
		ULONG ulView,
		ULONG param);
typedef ULONG   (SOMLINK * somTD_WPSound_wpQueryTrueStyle)(WPSound *somSelf);
typedef BOOL   (SOMLINK * somTD_WPSound_wpUnlockObject)(WPSound *somSelf);
typedef void   (SOMLINK * somTD_WPSound_wpObjectReady)(WPSound *somSelf,
		ULONG ulCode,
		WPObject* refObject);
typedef BOOL   (SOMLINK * somTD_WPSound_wpIsObjectInitialized)(WPSound *somSelf);
typedef WPObject*   (SOMLINK * somTD_WPSound_wpCreateShadowObjectExt)(WPSound *somSelf,
		WPFolder* Folder,
		BOOL fLock,
		PSZ pszSetup,
		M_WPObject* shadowClass);
typedef BOOL   (SOMLINK * somTD_WPSound_wpCnrDeleteUseItem)(WPSound *somSelf,
		HWND hwndCnr);
typedef BOOL   (SOMLINK * somTD_WPSound_wpIsDeleteable)(WPSound *somSelf);
typedef PMINIRECORDCORE   (SOMLINK * somTD_WPSound_wpQueryCoreRecord)(WPSound *somSelf);
typedef BOOL   (SOMLINK * somTD_WPSound_wpSetObjectID)(WPSound *somSelf,
		PSZ pszObjectID);
typedef PSZ   (SOMLINK * somTD_WPSound_wpQueryObjectID)(WPSound *somSelf);
typedef BOOL   (SOMLINK * somTD_WPSound_wpSetDefaultIconPos)(WPSound *somSelf,
		PPOINTL pPointl);
typedef BOOL   (SOMLINK * somTD_WPSound_wpQueryDefaultIconPos)(WPSound *somSelf,
		PPOINTL pPointl);
typedef void   (SOMLINK * somTD_WPSound_wpCnrRefreshDetails)(WPSound *somSelf);
typedef PVIEWITEM   (SOMLINK * somTD_WPSound_wpFindViewItem)(WPSound *somSelf,
		ULONG flViews,
		PVIEWITEM pCurrentItem);
typedef void   (SOMLINK * somTD_WPSound_wpLockObject)(WPSound *somSelf);
typedef BOOL   (SOMLINK * somTD_WPSound_wpIsLocked)(WPSound *somSelf);
typedef PULONG   (SOMLINK * somTD_WPSound_wpQueryContainerFlagPtr)(WPSound *somSelf);
typedef ULONG   (SOMLINK * somTD_WPSound_wpWaitForClose)(WPSound *somSelf,
		LHANDLE lhView,
		ULONG ulViews,
		long lTimeOut,
		BOOL bAutoClose);
typedef void   (SOMLINK * somTD_WPSound_somInit)(WPSound *somSelf);
typedef void   (SOMLINK * somTD_WPSound_somUninit)(WPSound *somSelf);
typedef void   (SOMLINK * somTD_WPSound_somDefaultCopyInit)(WPSound *somSelf,
		somInitCtrl* ctrl,
		SOMObject* fromObj);
typedef WPSound*   (SOMLINK * somTD_WPSound_somDefaultAssign)(WPSound *somSelf,
		somAssignCtrl* ctrl,
		SOMObject* fromObj);
typedef void   (SOMLINK * somTD_WPSound_somDefaultConstCopyInit)(WPSound *somSelf,
		somInitCtrl* ctrl,
		SOMObject* fromObj);
typedef void   (SOMLINK * somTD_WPSound_somDefaultVCopyInit)(WPSound *somSelf,
		somInitCtrl* ctrl,
		SOMObject* fromObj);
typedef void   (SOMLINK * somTD_WPSound_somDefaultConstVCopyInit)(WPSound *somSelf,
		somInitCtrl* ctrl,
		SOMObject* fromObj);
typedef WPSound*   (SOMLINK * somTD_WPSound_somDefaultConstAssign)(WPSound *somSelf,
		somAssignCtrl* ctrl,
		SOMObject* fromObj);
typedef WPSound*   (SOMLINK * somTD_WPSound_somDefaultVAssign)(WPSound *somSelf,
		somAssignCtrl* ctrl,
		SOMObject* fromObj);
typedef WPSound*   (SOMLINK * somTD_WPSound_somDefaultConstVAssign)(WPSound *somSelf,
		somAssignCtrl* ctrl,
		SOMObject* fromObj);
typedef void   (SOMLINK * somTD_WPSound_somFree)(WPSound *somSelf);
typedef M_WPSound*   (SOMLINK * somTD_WPSound_somGetClass)(WPSound *somSelf);
typedef string   (SOMLINK * somTD_WPSound_somGetClassName)(WPSound *somSelf);
typedef long   (SOMLINK * somTD_WPSound_somGetSize)(WPSound *somSelf);
typedef boolean   (SOMLINK * somTD_WPSound_somIsA)(WPSound *somSelf,
		SOMClass* aClassObj);
typedef boolean   (SOMLINK * somTD_WPSound_somIsInstanceOf)(WPSound *somSelf,
		SOMClass* aClassObj);
typedef boolean   (SOMLINK * somTD_WPSound_somRespondsTo)(WPSound *somSelf,
		somId mId);
typedef boolean   (SOMLINK * somTD_WPSound_somDispatch)(WPSound *somSelf,
		somToken* retValue,
		somId methodId,
		va_list ap);
typedef boolean   (SOMLINK * somTD_WPSound_somClassDispatch)(WPSound *somSelf,
		SOMClass* clsObj,
		somToken* retValue,
		somId methodId,
		va_list ap);
typedef boolean   (SOMLINK * somTD_WPSound_somCastObj)(WPSound *somSelf,
		SOMClass* cls);
typedef boolean   (SOMLINK * somTD_WPSound_somResetObj)(WPSound *somSelf);
typedef void   (SOMLINK * somTD_WPSound_somDispatchV)(WPSound *somSelf,
		somId methodId,
		somId descriptor,
		va_list ap);
typedef long   (SOMLINK * somTD_WPSound_somDispatchL)(WPSound *somSelf,
		somId methodId,
		somId descriptor,
		va_list ap);
typedef void*   (SOMLINK * somTD_WPSound_somDispatchA)(WPSound *somSelf,
		somId methodId,
		somId descriptor,
		va_list ap);
typedef double   (SOMLINK * somTD_WPSound_somDispatchD)(WPSound *somSelf,
		somId methodId,
		somId descriptor,
		va_list ap);
typedef SOMObject*   (SOMLINK * somTD_WPSound_somPrintSelf)(WPSound *somSelf);
typedef void   (SOMLINK * somTD_WPSound_somDumpSelf)(WPSound *somSelf,
		long level);
typedef void   (SOMLINK * somTD_WPSound_somDumpSelfInt)(WPSound *somSelf,
		long level);
}

#endif /* WPSound_API */


/*
 * -- This emitter treats Method Tokens as Thunks by default.
 * -- Use the sc modifier "nothunks" to change this default
 */
#undef somresolve_
#define somresolve_(obj,mToken) ((somMethodProc*)((void)obj, mToken))

/*
 * -- The C++ Wrapper Class for WPSound
 */
class WPSound : public WPAbstract
{
public:

// WPSound::new creates the class object if necessary, and then uses somNewNoInit
// to allocate memory and create the object. Initialization is in ctors.
void *operator new(size_t size)
{
   SOM_IgnoreWarning(size);
   if (!_WPSound) WPSoundNewClass(WPSound_MajorVersion,WPSound_MinorVersion);
   return (void*)
      SOM_Resolve(_WPSound,SOMClass,somNewNoInit)
         ((SOMClass *)((void*)_WPSound));
}

// WPSound::delete uses the default deallocator for the object's class.
void operator delete(void * obj)
{
   somToken objCls = obj ? *(void**)obj : (somToken) NULL;
   if (somIsObj(objCls)) {
      SOM_Resolve(objCls,SOMClass,somDeallocate)
         ((SOMClass*)objCls, (string)obj);
   }
}

WPSound()
{
   if (*(void**)this != 
       ((somParentMtabStructPtr)
        (WPSoundCClassData.parentMtab))->mtab)
      return;
   somDefaultInit(0);
}

WPSound(WPSound* fromObj)
{
   if (*(void**)this != 
       ((somParentMtabStructPtr)
        (WPSoundCClassData.parentMtab))->mtab)
      return;
   somDefaultCopyInit(0,((SOMObject*)((void*)fromObj)));
}

WPSound(const WPSound* fromObj)
{
   if (*(void**)this != 
       ((somParentMtabStructPtr)
        (WPSoundCClassData.parentMtab))->mtab)
      return;
   somDefaultConstCopyInit(0,((SOMObject*)((void*)fromObj)));
}

~WPSound()
{
   if (!somIsObj(this)) return;
   somDestruct(0,0);
   *(void**)this = **(void***)this;
}


/* method: wpAddSoundWarningBeepPage */
ULONG   wpAddSoundWarningBeepPage(HWND hwndNotebook)
{
   return SOM_ResolveD(this,WPSound,WPSound,wpAddSoundWarningBeepPage)
	(this,hwndNotebook);
}


/*
 * Reintroduce inherited methods
 */

/* method: wpQueryHandle */
HOBJECT   wpQueryHandle()
{
   return SOM_ResolveD(this,WPSound,WPObject,wpQueryHandle)
	(this);
}


/* method: wpSaveImmediate */
BOOL   wpSaveImmediate()
{
   return SOM_ResolveD(this,WPSound,WPObject,wpSaveImmediate)
	(this);
}


/* method: wpSaveState */
BOOL   wpSaveState()
{
   return SOM_ResolveD(this,WPSound,WPObject,wpSaveState)
	(this);
}


/* method: wpRestoreState */
BOOL   wpRestoreState(ULONG ulReserved)
{
   return SOM_ResolveD(this,WPSound,WPObject,wpRestoreState)
	(this,ulReserved);
}


/* method: wpSetTitle */
BOOL   wpSetTitle(PSZ pszNewTitle)
{
   return SOM_ResolveD(this,WPSound,WPObject,wpSetTitle)
	(this,pszNewTitle);
}


/* method: wpCopyObject */
WPObject*   wpCopyObject(WPFolder* Folder,
		BOOL fLock)
{
   return SOM_ResolveD(this,WPSound,WPObject,wpCopyObject)
	(this,Folder,fLock);
}


/* method: wpMoveObject */
BOOL   wpMoveObject(WPFolder* Folder)
{
   return SOM_ResolveD(this,WPSound,WPObject,wpMoveObject)
	(this,Folder);
}


/* method: wpQueryIcon */
HPOINTER   wpQueryIcon()
{
   return SOM_ResolveD(this,WPSound,WPObject,wpQueryIcon)
	(this);
}


/* method: wpQueryIconData */
ULONG   wpQueryIconData(PICONINFO pIconInfo)
{
   return SOM_ResolveD(this,WPSound,WPObject,wpQueryIconData)
	(this,pIconInfo);
}


/* method: wpSetIconData */
BOOL   wpSetIconData(PICONINFO pIconInfo)
{
   return SOM_ResolveD(this,WPSound,WPObject,wpSetIconData)
	(this,pIconInfo);
}


/* method: wpDragOver */
MRESULT   wpDragOver(HWND hwndCnr,
		PDRAGINFO pdrgInfo)
{
   return SOM_ResolveD(this,WPSound,WPObject,wpDragOver)
	(this,hwndCnr,pdrgInfo);
}


/* method: wpReplaceObject */
BOOL32   wpReplaceObject(WPObject* targetObject,
		BOOL32 fMove)
{
   return SOM_ResolveD(this,WPSound,WPObject,wpReplaceObject)
	(this,targetObject,fMove);
}


/* method: wpQueryNameClashOptions */
ULONG   wpQueryNameClashOptions(ULONG menuID)
{
   return SOM_ResolveD(this,WPSound,WPObject,wpQueryNameClashOptions)
	(this,menuID);
}


/* method: somDefaultInit */
void   somDefaultInit(somInitCtrl* ctrl)
{
   SOM_ResolveD(this,WPSound,SOMObject,somDefaultInit)
	(this,ctrl);
}


/* method: somDestruct */
void   somDestruct(octet doFree,
		somDestructCtrl* ctrl)
{
   SOM_ResolveD(this,WPSound,SOMObject,somDestruct)
	(this,doFree,ctrl);
}


/* method: wpAddObjectGeneralPage */
ULONG   wpAddObjectGeneralPage(HWND hwndNotebook)
{
   return SOM_ResolveD(this,WPSound,WPObject,wpAddObjectGeneralPage)
	(this,hwndNotebook);
}


/* method: wpAddObjectGeneralPage2 */
ULONG   wpAddObjectGeneralPage2(HWND hwndNotebook)
{
   return SOM_ResolveD(this,WPSound,WPObject,wpAddObjectGeneralPage2)
	(this,hwndNotebook);
}


/* method: wpAddObjectWindowPage */
ULONG   wpAddObjectWindowPage(HWND hwndNotebook)
{
   return SOM_ResolveD(this,WPSound,WPObject,wpAddObjectWindowPage)
	(this,hwndNotebook);
}


/* method: wpAddSettingsPages */
BOOL   wpAddSettingsPages(HWND hwndNotebook)
{
   return SOM_ResolveD(this,WPSound,WPObject,wpAddSettingsPages)
	(this,hwndNotebook);
}


/* method: wpAddToObjUseList */
BOOL   wpAddToObjUseList(PUSEITEM pUseItem)
{
   return SOM_ResolveD(this,WPSound,WPObject,wpAddToObjUseList)
	(this,pUseItem);
}


/* method: wpAllocMem */
PBYTE   wpAllocMem(ULONG cbBytes,
		PULONG prc)
{
   return SOM_ResolveD(this,WPSound,WPObject,wpAllocMem)
	(this,cbBytes,prc);
}


/* method: wpAppendObject */
BOOL32   wpAppendObject(WPObject* targetObject,
		BOOL32 fMove)
{
   return SOM_ResolveD(this,WPSound,WPObject,wpAppendObject)
	(this,targetObject,fMove);
}


/* method: wpAssertObjectMutexSem */
BOOL   wpAssertObjectMutexSem()
{
   return SOM_ResolveD(this,WPSound,WPObject,wpAssertObjectMutexSem)
	(this);
}


/* method: wpClose */
BOOL   wpClose()
{
   return SOM_ResolveD(this,WPSound,WPObject,wpClose)
	(this);
}


/* method: wpCnrInsertObject */
PMINIRECORDCORE   wpCnrInsertObject(HWND hwndCnr,
		PPOINTL pptlIcon,
		PMINIRECORDCORE preccParent,
		PRECORDINSERT pRecInsert)
{
   return SOM_ResolveD(this,WPSound,WPObject,wpCnrInsertObject)
	(this,hwndCnr,pptlIcon,preccParent,pRecInsert);
}


/* method: wpCnrRemoveObject */
BOOL   wpCnrRemoveObject(HWND hwndCnr)
{
   return SOM_ResolveD(this,WPSound,WPObject,wpCnrRemoveObject)
	(this,hwndCnr);
}


/* method: wpCnrSetEmphasis */
BOOL   wpCnrSetEmphasis(ULONG ulEmphasisAttr,
		BOOL fTurnOn)
{
   return SOM_ResolveD(this,WPSound,WPObject,wpCnrSetEmphasis)
	(this,ulEmphasisAttr,fTurnOn);
}


/* method: wpConfirmDelete */
ULONG   wpConfirmDelete(ULONG fConfirmations)
{
   return SOM_ResolveD(this,WPSound,WPObject,wpConfirmDelete)
	(this,fConfirmations);
}


/* method: wpConfirmObjectTitle */
ULONG   wpConfirmObjectTitle(WPFolder* Folder,
		WPObject** ppDuplicate,
		PSZ pszTitle,
		ULONG cbTitle,
		ULONG menuID)
{
   return SOM_ResolveD(this,WPSound,WPObject,wpConfirmObjectTitle)
	(this,Folder,ppDuplicate,pszTitle,cbTitle,menuID);
}


/* method: wpCopiedFromTemplate */
void   wpCopiedFromTemplate()
{
   SOM_ResolveD(this,WPSound,WPObject,wpCopiedFromTemplate)
	(this);
}


/* method: wpCreateAnother */
WPObject*   wpCreateAnother(PSZ pszTitle,
		PSZ pszSetupEnv,
		WPFolder* Folder)
{
   return SOM_ResolveD(this,WPSound,WPObject,wpCreateAnother)
	(this,pszTitle,pszSetupEnv,Folder);
}


/* method: wpCreateFromTemplate */
WPObject*   wpCreateFromTemplate(WPFolder* folder,
		BOOL fLock)
{
   return SOM_ResolveD(this,WPSound,WPObject,wpCreateFromTemplate)
	(this,folder,fLock);
}


/* method: wpCreateShadowObject */
WPObject*   wpCreateShadowObject(WPFolder* Folder,
		BOOL fLock)
{
   return SOM_ResolveD(this,WPSound,WPObject,wpCreateShadowObject)
	(this,Folder,fLock);
}


/* method: wpDelete */
ULONG   wpDelete(ULONG fConfirmations)
{
   return SOM_ResolveD(this,WPSound,WPObject,wpDelete)
	(this,fConfirmations);
}


/* method: wpDeleteFromObjUseList */
BOOL   wpDeleteFromObjUseList(PUSEITEM pUseItem)
{
   return SOM_ResolveD(this,WPSound,WPObject,wpDeleteFromObjUseList)
	(this,pUseItem);
}


/* method: wpDisplayHelp */
BOOL   wpDisplayHelp(ULONG HelpPanelId,
		PSZ HelpLibrary)
{
   return SOM_ResolveD(this,WPSound,WPObject,wpDisplayHelp)
	(this,HelpPanelId,HelpLibrary);
}


/* method: wpDisplayMenu */
HWND   wpDisplayMenu(HWND hwndOwner,
		HWND hwndClient,
		POINTL* ptlPopupPt,
		ULONG ulMenuType,
		ULONG ulReserved)
{
   return SOM_ResolveD(this,WPSound,WPObject,wpDisplayMenu)
	(this,hwndOwner,hwndClient,ptlPopupPt,ulMenuType,ulReserved);
}


/* method: wpDoesObjectMatch */
BOOL   wpDoesObjectMatch(PVOID pvoidExtendedCriteria)
{
   return SOM_ResolveD(this,WPSound,WPObject,wpDoesObjectMatch)
	(this,pvoidExtendedCriteria);
}


/* method: wpDraggedOverObject */
MRESULT   wpDraggedOverObject(WPObject* DraggedOverObject)
{
   return SOM_ResolveD(this,WPSound,WPObject,wpDraggedOverObject)
	(this,DraggedOverObject);
}


/* method: wpDrop */
MRESULT   wpDrop(HWND hwndCnr,
		PDRAGINFO pdrgInfo,
		PDRAGITEM pdrgItem)
{
   return SOM_ResolveD(this,WPSound,WPObject,wpDrop)
	(this,hwndCnr,pdrgInfo,pdrgItem);
}


/* method: wpDroppedOnObject */
BOOL   wpDroppedOnObject(WPObject* DroppedOnObject)
{
   return SOM_ResolveD(this,WPSound,WPObject,wpDroppedOnObject)
	(this,DroppedOnObject);
}


/* method: wpEndConversation */
MRESULT   wpEndConversation(ULONG ulItemID,
		ULONG flResult)
{
   return SOM_ResolveD(this,WPSound,WPObject,wpEndConversation)
	(this,ulItemID,flResult);
}


/* method: wpFilterPopupMenu */
ULONG   wpFilterPopupMenu(ULONG ulFlags,
		HWND hwndCnr,
		BOOL fMultiSelect)
{
   return SOM_ResolveD(this,WPSound,WPObject,wpFilterPopupMenu)
	(this,ulFlags,hwndCnr,fMultiSelect);
}


/* method: wpFindUseItem */
PUSEITEM   wpFindUseItem(ULONG type,
		PUSEITEM pCurrentItem)
{
   return SOM_ResolveD(this,WPSound,WPObject,wpFindUseItem)
	(this,type,pCurrentItem);
}


/* method: wpFormatDragItem */
BOOL   wpFormatDragItem(PDRAGITEM pdrgItem)
{
   return SOM_ResolveD(this,WPSound,WPObject,wpFormatDragItem)
	(this,pdrgItem);
}


/* method: wpFree */
BOOL   wpFree()
{
   return SOM_ResolveD(this,WPSound,WPObject,wpFree)
	(this);
}


/* method: wpFreeMem */
BOOL   wpFreeMem(PBYTE pByte)
{
   return SOM_ResolveD(this,WPSound,WPObject,wpFreeMem)
	(this,pByte);
}


/* method: wpHide */
BOOL   wpHide()
{
   return SOM_ResolveD(this,WPSound,WPObject,wpHide)
	(this);
}


/* method: wpInitData */
void   wpInitData()
{
   SOM_ResolveD(this,WPSound,WPObject,wpInitData)
	(this);
}


/* method: wpInsertPopupMenuItems */
BOOL   wpInsertPopupMenuItems(HWND hwndMenu,
		ULONG iPosition,
		HMODULE hmod,
		ULONG MenuID,
		ULONG SubMenuID)
{
   return SOM_ResolveD(this,WPSound,WPObject,wpInsertPopupMenuItems)
	(this,hwndMenu,iPosition,hmod,MenuID,SubMenuID);
}


/* method: wpInsertSettingsPage */
ULONG   wpInsertSettingsPage(HWND hwndNotebook,
		PPAGEINFO ppageinfo)
{
   return SOM_ResolveD(this,WPSound,WPObject,wpInsertSettingsPage)
	(this,hwndNotebook,ppageinfo);
}


/* method: wpMenuItemHelpSelected */
BOOL   wpMenuItemHelpSelected(ULONG MenuId)
{
   return SOM_ResolveD(this,WPSound,WPObject,wpMenuItemHelpSelected)
	(this,MenuId);
}


/* method: wpMenuItemSelected */
BOOL   wpMenuItemSelected(HWND hwndFrame,
		ULONG ulMenuId)
{
   return SOM_ResolveD(this,WPSound,WPObject,wpMenuItemSelected)
	(this,hwndFrame,ulMenuId);
}


/* method: wpModifyPopupMenu */
BOOL   wpModifyPopupMenu(HWND hwndMenu,
		HWND hwndCnr,
		ULONG iPosition)
{
   return SOM_ResolveD(this,WPSound,WPObject,wpModifyPopupMenu)
	(this,hwndMenu,hwndCnr,iPosition);
}


/* method: wpOpen */
HWND   wpOpen(HWND hwndCnr,
		ULONG ulView,
		ULONG param)
{
   return SOM_ResolveD(this,WPSound,WPObject,wpOpen)
	(this,hwndCnr,ulView,param);
}


/* method: wpPrintObject */
BOOL   wpPrintObject(PPRINTDEST pPrintDest,
		ULONG ulReserved)
{
   return SOM_ResolveD(this,WPSound,WPObject,wpPrintObject)
	(this,pPrintDest,ulReserved);
}


/* method: wpQueryConcurrentView */
ULONG   wpQueryConcurrentView()
{
   return SOM_ResolveD(this,WPSound,WPObject,wpQueryConcurrentView)
	(this);
}


/* method: wpQueryButtonAppearance */
ULONG   wpQueryButtonAppearance()
{
   return SOM_ResolveD(this,WPSound,WPObject,wpQueryButtonAppearance)
	(this);
}


/* method: wpQueryConfirmations */
ULONG   wpQueryConfirmations()
{
   return SOM_ResolveD(this,WPSound,WPObject,wpQueryConfirmations)
	(this);
}


/* method: wpQueryDefaultHelp */
BOOL   wpQueryDefaultHelp(PULONG pHelpPanelId,
		PSZ HelpLibrary)
{
   return SOM_ResolveD(this,WPSound,WPObject,wpQueryDefaultHelp)
	(this,pHelpPanelId,HelpLibrary);
}


/* method: wpQueryDefaultView */
ULONG   wpQueryDefaultView()
{
   return SOM_ResolveD(this,WPSound,WPObject,wpQueryDefaultView)
	(this);
}


/* method: wpQueryDetailsData */
ULONG   wpQueryDetailsData(PVOID* ppDetailsData,
		PULONG pcp)
{
   return SOM_ResolveD(this,WPSound,WPObject,wpQueryDetailsData)
	(this,ppDetailsData,pcp);
}


/* method: wpQueryError */
ULONG   wpQueryError()
{
   return SOM_ResolveD(this,WPSound,WPObject,wpQueryError)
	(this);
}


/* method: wpSetFolder */
BOOL   wpSetFolder(WPObject* container)
{
   return SOM_ResolveD(this,WPSound,WPObject,wpSetFolder)
	(this,container);
}


/* method: wpQueryFolder */
WPObject*   wpQueryFolder()
{
   return SOM_ResolveD(this,WPSound,WPObject,wpQueryFolder)
	(this);
}


/* method: wpQueryMinWindow */
ULONG   wpQueryMinWindow()
{
   return SOM_ResolveD(this,WPSound,WPObject,wpQueryMinWindow)
	(this);
}


/* method: wpQueryStyle */
ULONG   wpQueryStyle()
{
   return SOM_ResolveD(this,WPSound,WPObject,wpQueryStyle)
	(this);
}


/* method: wpSetTaskRec */
BOOL32   wpSetTaskRec(PTASKREC pNew,
		PTASKREC pOld)
{
   return SOM_ResolveD(this,WPSound,WPObject,wpSetTaskRec)
	(this,pNew,pOld);
}


/* method: wpFindTaskRec */
PTASKREC   wpFindTaskRec()
{
   return SOM_ResolveD(this,WPSound,WPObject,wpFindTaskRec)
	(this);
}


/* method: wpQueryTitle */
PSZ   wpQueryTitle()
{
   return SOM_ResolveD(this,WPSound,WPObject,wpQueryTitle)
	(this);
}


/* method: wpRegisterView */
BOOL   wpRegisterView(HWND hwndFrame,
		PSZ pszViewTitle)
{
   return SOM_ResolveD(this,WPSound,WPObject,wpRegisterView)
	(this,hwndFrame,pszViewTitle);
}


/* method: wpReleaseObjectMutexSem */
ULONG   wpReleaseObjectMutexSem()
{
   return SOM_ResolveD(this,WPSound,WPObject,wpReleaseObjectMutexSem)
	(this);
}


/* method: wpRender */
MRESULT   wpRender(PDRAGTRANSFER pdxfer)
{
   return SOM_ResolveD(this,WPSound,WPObject,wpRender)
	(this,pdxfer);
}


/* method: wpRenderComplete */
MRESULT   wpRenderComplete(PDRAGTRANSFER pdxfer,
		ULONG ulResult)
{
   return SOM_ResolveD(this,WPSound,WPObject,wpRenderComplete)
	(this,pdxfer,ulResult);
}


/* method: wpRequestObjectMutexSem */
ULONG   wpRequestObjectMutexSem(ULONG ulTimeout)
{
   return SOM_ResolveD(this,WPSound,WPObject,wpRequestObjectMutexSem)
	(this,ulTimeout);
}


/* method: wpRestore */
BOOL   wpRestore()
{
   return SOM_ResolveD(this,WPSound,WPObject,wpRestore)
	(this);
}


/* method: wpRestoreData */
BOOL   wpRestoreData(PSZ pszClass,
		ULONG ulKey,
		PBYTE pValue,
		PULONG pcbValue)
{
   return SOM_ResolveD(this,WPSound,WPObject,wpRestoreData)
	(this,pszClass,ulKey,pValue,pcbValue);
}


/* method: wpRestoreLong */
BOOL   wpRestoreLong(PSZ pszClass,
		ULONG ulKey,
		PULONG pulValue)
{
   return SOM_ResolveD(this,WPSound,WPObject,wpRestoreLong)
	(this,pszClass,ulKey,pulValue);
}


/* method: wpRestoreString */
BOOL   wpRestoreString(PSZ pszClass,
		ULONG ulKey,
		PSZ pszValue,
		PULONG pcbValue)
{
   return SOM_ResolveD(this,WPSound,WPObject,wpRestoreString)
	(this,pszClass,ulKey,pszValue,pcbValue);
}


/* method: wpSaveData */
BOOL   wpSaveData(PSZ pszClass,
		ULONG ulKey,
		PBYTE pValue,
		ULONG cbValue)
{
   return SOM_ResolveD(this,WPSound,WPObject,wpSaveData)
	(this,pszClass,ulKey,pValue,cbValue);
}


/* method: wpSaveDeferred */
BOOL   wpSaveDeferred()
{
   return SOM_ResolveD(this,WPSound,WPObject,wpSaveDeferred)
	(this);
}


/* method: wpSaveLong */
BOOL   wpSaveLong(PSZ pszClass,
		ULONG ulKey,
		ULONG ulValue)
{
   return SOM_ResolveD(this,WPSound,WPObject,wpSaveLong)
	(this,pszClass,ulKey,ulValue);
}


/* method: wpSaveString */
BOOL   wpSaveString(PSZ pszClass,
		ULONG ulKey,
		PSZ pszValue)
{
   return SOM_ResolveD(this,WPSound,WPObject,wpSaveString)
	(this,pszClass,ulKey,pszValue);
}


/* method: wpScanSetupString */
BOOL   wpScanSetupString(PSZ pszSetupString,
		PSZ pszKey,
		PSZ pszValue,
		PULONG pcbValue)
{
   return SOM_ResolveD(this,WPSound,WPObject,wpScanSetupString)
	(this,pszSetupString,pszKey,pszValue,pcbValue);
}


/* method: wpSetConcurrentView */
void   wpSetConcurrentView(ULONG ulCCView)
{
   SOM_ResolveD(this,WPSound,WPObject,wpSetConcurrentView)
	(this,ulCCView);
}


/* method: wpSetButtonAppearance */
void   wpSetButtonAppearance(ULONG ulButtonType)
{
   SOM_ResolveD(this,WPSound,WPObject,wpSetButtonAppearance)
	(this,ulButtonType);
}


/* method: wpSetDefaultHelp */
BOOL   wpSetDefaultHelp(ULONG HelpPanelId,
		PSZ HelpLibrary)
{
   return SOM_ResolveD(this,WPSound,WPObject,wpSetDefaultHelp)
	(this,HelpPanelId,HelpLibrary);
}


/* method: wpSetDefaultView */
BOOL   wpSetDefaultView(ULONG ulView)
{
   return SOM_ResolveD(this,WPSound,WPObject,wpSetDefaultView)
	(this,ulView);
}


/* method: wpSetError */
BOOL   wpSetError(ULONG ulErrorId)
{
   return SOM_ResolveD(this,WPSound,WPObject,wpSetError)
	(this,ulErrorId);
}


/* method: wpSetIconHandle */
BOOL   wpSetIconHandle(HPOINTER hptrNewIcon)
{
   return SOM_ResolveD(this,WPSound,WPObject,wpSetIconHandle)
	(this,hptrNewIcon);
}


/* method: wpQueryScreenGroupID */
USHORT   wpQueryScreenGroupID(USHORT usPrevSgId)
{
   return SOM_ResolveD(this,WPSound,WPObject,wpQueryScreenGroupID)
	(this,usPrevSgId);
}


/* method: wpSetupOnce */
BOOL   wpSetupOnce(PSZ pszSetupString)
{
   return SOM_ResolveD(this,WPSound,WPObject,wpSetupOnce)
	(this,pszSetupString);
}


/* method: wpSetIcon */
BOOL   wpSetIcon(HPOINTER hptrNewIcon)
{
   return SOM_ResolveD(this,WPSound,WPObject,wpSetIcon)
	(this,hptrNewIcon);
}


/* method: wpSetMinWindow */
void   wpSetMinWindow(ULONG ulMinWindow)
{
   SOM_ResolveD(this,WPSound,WPObject,wpSetMinWindow)
	(this,ulMinWindow);
}


/* method: wpSetStyle */
BOOL   wpSetStyle(ULONG ulNewStyle)
{
   return SOM_ResolveD(this,WPSound,WPObject,wpSetStyle)
	(this,ulNewStyle);
}


/* method: wpModifyStyle */
BOOL   wpModifyStyle(ULONG ulStyleFlags,
		ULONG ulStyleMask)
{
   return SOM_ResolveD(this,WPSound,WPObject,wpModifyStyle)
	(this,ulStyleFlags,ulStyleMask);
}


/* method: wpSetup */
BOOL   wpSetup(PSZ pszSetupString)
{
   return SOM_ResolveD(this,WPSound,WPObject,wpSetup)
	(this,pszSetupString);
}


/* method: wpSwitchTo */
BOOL   wpSwitchTo(ULONG View)
{
   return SOM_ResolveD(this,WPSound,WPObject,wpSwitchTo)
	(this,View);
}


/* method: wpUnInitData */
void   wpUnInitData()
{
   SOM_ResolveD(this,WPSound,WPObject,wpUnInitData)
	(this);
}


/* method: wpViewObject */
HWND   wpViewObject(HWND hwndCnr,
		ULONG ulView,
		ULONG param)
{
   return SOM_ResolveD(this,WPSound,WPObject,wpViewObject)
	(this,hwndCnr,ulView,param);
}


/* method: wpQueryTrueStyle */
ULONG   wpQueryTrueStyle()
{
   return SOM_ResolveD(this,WPSound,WPObject,wpQueryTrueStyle)
	(this);
}


/* method: wpUnlockObject */
BOOL   wpUnlockObject()
{
   return SOM_ResolveD(this,WPSound,WPObject,wpUnlockObject)
	(this);
}


/* method: wpObjectReady */
void   wpObjectReady(ULONG ulCode,
		WPObject* refObject)
{
   SOM_ResolveD(this,WPSound,WPObject,wpObjectReady)
	(this,ulCode,refObject);
}


/* method: wpIsObjectInitialized */
BOOL   wpIsObjectInitialized()
{
   return SOM_ResolveD(this,WPSound,WPObject,wpIsObjectInitialized)
	(this);
}


/* method: wpCreateShadowObjectExt */
WPObject*   wpCreateShadowObjectExt(WPFolder* Folder,
		BOOL fLock,
		PSZ pszSetup,
		M_WPObject* shadowClass)
{
   return SOM_ResolveD(this,WPSound,WPObject,wpCreateShadowObjectExt)
	(this,Folder,fLock,pszSetup,shadowClass);
}


/* method: wpCnrDeleteUseItem */
BOOL   wpCnrDeleteUseItem(HWND hwndCnr)
{
   return SOM_ResolveD(this,WPSound,WPObject,wpCnrDeleteUseItem)
	(this,hwndCnr);
}


/* method: wpIsDeleteable */
BOOL   wpIsDeleteable()
{
   return SOM_ResolveD(this,WPSound,WPObject,wpIsDeleteable)
	(this);
}


/* method: wpQueryCoreRecord */
PMINIRECORDCORE   wpQueryCoreRecord()
{
   return SOM_ResolveD(this,WPSound,WPObject,wpQueryCoreRecord)
	(this);
}


/* method: wpSetObjectID */
BOOL   wpSetObjectID(PSZ pszObjectID)
{
   return SOM_ResolveD(this,WPSound,WPObject,wpSetObjectID)
	(this,pszObjectID);
}


/* method: wpQueryObjectID */
PSZ   wpQueryObjectID()
{
   return SOM_ResolveD(this,WPSound,WPObject,wpQueryObjectID)
	(this);
}


/* method: wpSetDefaultIconPos */
BOOL   wpSetDefaultIconPos(PPOINTL pPointl)
{
   return SOM_ResolveD(this,WPSound,WPObject,wpSetDefaultIconPos)
	(this,pPointl);
}


/* method: wpQueryDefaultIconPos */
BOOL   wpQueryDefaultIconPos(PPOINTL pPointl)
{
   return SOM_ResolveD(this,WPSound,WPObject,wpQueryDefaultIconPos)
	(this,pPointl);
}


/* method: wpCnrRefreshDetails */
void   wpCnrRefreshDetails()
{
   SOM_ResolveD(this,WPSound,WPObject,wpCnrRefreshDetails)
	(this);
}


/* method: wpFindViewItem */
PVIEWITEM   wpFindViewItem(ULONG flViews,
		PVIEWITEM pCurrentItem)
{
   return SOM_ResolveD(this,WPSound,WPObject,wpFindViewItem)
	(this,flViews,pCurrentItem);
}


/* method: wpLockObject */
void   wpLockObject()
{
   SOM_ResolveD(this,WPSound,WPObject,wpLockObject)
	(this);
}


/* method: wpIsLocked */
BOOL   wpIsLocked()
{
   return SOM_ResolveD(this,WPSound,WPObject,wpIsLocked)
	(this);
}


/* method: wpQueryContainerFlagPtr */
PULONG   wpQueryContainerFlagPtr()
{
   return SOM_ResolveD(this,WPSound,WPObject,wpQueryContainerFlagPtr)
	(this);
}


/* method: wpWaitForClose */
ULONG   wpWaitForClose(LHANDLE lhView,
		ULONG ulViews,
		long lTimeOut,
		BOOL bAutoClose)
{
   return SOM_ResolveD(this,WPSound,WPObject,wpWaitForClose)
	(this,lhView,ulViews,lTimeOut,bAutoClose);
}


/* method: somInit */
void   somInit()
{
   SOM_ResolveD(this,WPSound,SOMObject,somInit)
	(this);
}


/* method: somUninit */
void   somUninit()
{
   SOM_ResolveD(this,WPSound,SOMObject,somUninit)
	(this);
}


/* method: somDefaultCopyInit */
void   somDefaultCopyInit(somInitCtrl* ctrl,
		SOMObject* fromObj)
{
   SOM_ResolveD(this,WPSound,SOMObject,somDefaultCopyInit)
	(this,ctrl,fromObj);
}


/* method: somDefaultAssign */
WPSound*  somDefaultAssign(somAssignCtrl* ctrl,
		SOMObject* fromObj)
{
   return SOM_ResolveD(this,WPSound,SOMObject,somDefaultAssign)
	(this,ctrl,fromObj);
}


/* method: somDefaultConstCopyInit */
void   somDefaultConstCopyInit(somInitCtrl* ctrl,
		SOMObject* fromObj)
{
   SOM_ResolveD(this,WPSound,SOMObject,somDefaultConstCopyInit)
	(this,ctrl,fromObj);
}


/* method: somDefaultVCopyInit */
void   somDefaultVCopyInit(somInitCtrl* ctrl,
		SOMObject* fromObj)
{
   SOM_ResolveD(this,WPSound,SOMObject,somDefaultVCopyInit)
	(this,ctrl,fromObj);
}


/* method: somDefaultConstVCopyInit */
void   somDefaultConstVCopyInit(somInitCtrl* ctrl,
		SOMObject* fromObj)
{
   SOM_ResolveD(this,WPSound,SOMObject,somDefaultConstVCopyInit)
	(this,ctrl,fromObj);
}


/* method: somDefaultConstAssign */
WPSound*  somDefaultConstAssign(somAssignCtrl* ctrl,
		SOMObject* fromObj)
{
   return SOM_ResolveD(this,WPSound,SOMObject,somDefaultConstAssign)
	(this,ctrl,fromObj);
}


/* method: somDefaultVAssign */
WPSound*  somDefaultVAssign(somAssignCtrl* ctrl,
		SOMObject* fromObj)
{
   return SOM_ResolveD(this,WPSound,SOMObject,somDefaultVAssign)
	(this,ctrl,fromObj);
}


/* method: somDefaultConstVAssign */
WPSound*  somDefaultConstVAssign(somAssignCtrl* ctrl,
		SOMObject* fromObj)
{
   return SOM_ResolveD(this,WPSound,SOMObject,somDefaultConstVAssign)
	(this,ctrl,fromObj);
}


/* method: somFree */
void   somFree()
{
   SOM_ResolveD(this,WPSound,SOMObject,somFree)
	(this);
}


/* method: somGetClass */
M_WPSound*  somGetClass()
{
   return SOM_ResolveD(this,WPSound,SOMObject,somGetClass)
	(this);
}


/* method: somGetClassName */
string   somGetClassName()
{
   return SOM_ResolveD(this,WPSound,SOMObject,somGetClassName)
	(this);
}


/* method: somGetSize */
long   somGetSize()
{
   return SOM_ResolveD(this,WPSound,SOMObject,somGetSize)
	(this);
}


/* method: somIsA */
boolean   somIsA(SOMClass* aClassObj)
{
   return SOM_ResolveD(this,WPSound,SOMObject,somIsA)
	(this,aClassObj);
}


/* method: somIsInstanceOf */
boolean   somIsInstanceOf(SOMClass* aClassObj)
{
   return SOM_ResolveD(this,WPSound,SOMObject,somIsInstanceOf)
	(this,aClassObj);
}


/* method: somRespondsTo */
boolean   somRespondsTo(somId mId)
{
   return SOM_ResolveD(this,WPSound,SOMObject,somRespondsTo)
	(this,mId);
}


/* va_list method: somDispatch */
/* the va_list invocation form */
boolean   WPSound_somDispatch(somToken* retValue,
		somId methodId,
		va_list ap)
{
return SOM_ResolveD(this,WPSound,SOMObject,somDispatch)
	(this,retValue,methodId,ap);
}

/* the varargs invocation form */
boolean   somDispatch(somToken* retValue,
		somId methodId,
		...)
{
   va_list ap;
   va_start(ap, methodId);
   boolean __somResult = 
      SOM_ResolveD(this,WPSound,SOMObject,somDispatch)
	(this,retValue,methodId,ap);
   va_end(ap);
   return __somResult;
}


/* va_list method: somClassDispatch */
/* the va_list invocation form */
boolean   WPSound_somClassDispatch(SOMClass* clsObj,
		somToken* retValue,
		somId methodId,
		va_list ap)
{
return SOM_ResolveD(this,WPSound,SOMObject,somClassDispatch)
	(this,clsObj,retValue,methodId,ap);
}

/* the varargs invocation form */
boolean   somClassDispatch(SOMClass* clsObj,
		somToken* retValue,
		somId methodId,
		...)
{
   va_list ap;
   va_start(ap, methodId);
   boolean __somResult = 
      SOM_ResolveD(this,WPSound,SOMObject,somClassDispatch)
	(this,clsObj,retValue,methodId,ap);
   va_end(ap);
   return __somResult;
}


/* method: somCastObj */
boolean   somCastObj(SOMClass* cls)
{
   return SOM_ResolveD(this,WPSound,SOMObject,somCastObj)
	(this,cls);
}


/* method: somResetObj */
boolean   somResetObj()
{
   return SOM_ResolveD(this,WPSound,SOMObject,somResetObj)
	(this);
}


/* va_list method: somDispatchV */
/* the va_list invocation form */
void   WPSound_somDispatchV(somId methodId,
		somId descriptor,
		va_list ap)
{
   SOM_ResolveD(this,WPSound,SOMObject,somDispatchV)
	(this,methodId,descriptor,ap);
}

/* the varargs invocation form */
void   somDispatchV(somId methodId,
		somId descriptor,
		...)
{
   va_list ap;
   va_start(ap, descriptor);
   SOM_ResolveD(this,WPSound,SOMObject,somDispatchV)
	(this,methodId,descriptor,ap);
   va_end(ap);
}


/* va_list method: somDispatchL */
/* the va_list invocation form */
long   WPSound_somDispatchL(somId methodId,
		somId descriptor,
		va_list ap)
{
return SOM_ResolveD(this,WPSound,SOMObject,somDispatchL)
	(this,methodId,descriptor,ap);
}

/* the varargs invocation form */
long   somDispatchL(somId methodId,
		somId descriptor,
		...)
{
   va_list ap;
   va_start(ap, descriptor);
   long __somResult = 
      SOM_ResolveD(this,WPSound,SOMObject,somDispatchL)
	(this,methodId,descriptor,ap);
   va_end(ap);
   return __somResult;
}


/* va_list method: somDispatchA */
/* the va_list invocation form */
void*   WPSound_somDispatchA(somId methodId,
		somId descriptor,
		va_list ap)
{
return SOM_ResolveD(this,WPSound,SOMObject,somDispatchA)
	(this,methodId,descriptor,ap);
}

/* the varargs invocation form */
void*   somDispatchA(somId methodId,
		somId descriptor,
		...)
{
   va_list ap;
   va_start(ap, descriptor);
   void* __somResult = 
      SOM_ResolveD(this,WPSound,SOMObject,somDispatchA)
	(this,methodId,descriptor,ap);
   va_end(ap);
   return __somResult;
}


/* va_list method: somDispatchD */
/* the va_list invocation form */
double   WPSound_somDispatchD(somId methodId,
		somId descriptor,
		va_list ap)
{
return SOM_ResolveD(this,WPSound,SOMObject,somDispatchD)
	(this,methodId,descriptor,ap);
}

/* the varargs invocation form */
double   somDispatchD(somId methodId,
		somId descriptor,
		...)
{
   va_list ap;
   va_start(ap, descriptor);
   double __somResult = 
      SOM_ResolveD(this,WPSound,SOMObject,somDispatchD)
	(this,methodId,descriptor,ap);
   va_end(ap);
   return __somResult;
}


/* method: somPrintSelf */
SOMObject*   somPrintSelf()
{
   return SOM_ResolveD(this,WPSound,SOMObject,somPrintSelf)
	(this);
}


/* method: somDumpSelf */
void   somDumpSelf(long level)
{
   SOM_ResolveD(this,WPSound,SOMObject,somDumpSelf)
	(this,level);
}


/* method: somDumpSelfInt */
void   somDumpSelfInt(long level)
{
   SOM_ResolveD(this,WPSound,SOMObject,somDumpSelfInt)
	(this,level);
}



};   /* WPSound */



#endif       /* SOM_WPSound_xh */

#ifndef SOM_M_WPSound_xh
#define SOM_M_WPSound_xh

class M_WPSound;

#define M_WPSound_MajorVersion 1
#define M_WPSound_MinorVersion 2

/* C++ SOM defs */
#include <somcls.xh>
#include <somcm.xh>

/* C++ parent defs */
#ifndef SOM_M_WPAbstract_xh
#include <wpabs.xh>
#endif

#ifndef M_WPSound_API
#define M_WPSound_API
/*
 * -- The Class API
 */

/*
 * Start of user-defined types:
 */

/*
 * End of user-defined types.
 */

/*
 * -- M_WPSound is a metaclass for WPSound. Make sure WPSound is known.
 */
class WPSound;


/* A procedure to create the M_WPSound Class */
SOMEXTERN SOMClass * SOMLINK M_WPSoundNewClass(
		integer4 majorVersion,
		integer4 minorVersion);

/* The API to the M_WPSound class object, and the methods it introduces. */
SOMEXTERN struct M_WPSoundClassDataStructure {
	SOMClass *classObject;
} SOMDLINK M_WPSoundClassData;
#define _M_WPSound M_WPSoundClassData.classObject

/* The API to parentMtabs for M_WPSound, and the instance data it introduces. */
SOMEXTERN struct M_WPSoundCClassDataStructure {
	somMethodTabs parentMtab;
	somDToken              instanceDataToken;
} SOMDLINK M_WPSoundCClassData;

/*
 * -- Typedefs for M_WPSound Method Procedures
 */
SOMEXTERN {

/*
 * -- Typedefs for Reintroduced Wrapper Methods
 */
typedef ULONG   (SOMLINK * somTD_M_WPSound_wpclsQuerySetting)(M_WPSound *somSelf,
		PSZ pszSetting,
		PVOID pValue,
		ULONG ulValueLen);
typedef BOOL   (SOMLINK * somTD_M_WPSound_wpclsSetSetting)(M_WPSound *somSelf,
		PSZ pszSetting,
		PVOID pValue);
typedef PSZ   (SOMLINK * somTD_M_WPSound_wpclsQueryTitle)(M_WPSound *somSelf);
typedef BOOL   (SOMLINK * somTD_M_WPSound_wpclsCreateDefaultTemplates)(M_WPSound *somSelf,
		WPObject* Folder);
typedef void   (SOMLINK * somTD_M_WPSound_wpclsInitData)(M_WPSound *somSelf);
typedef WPObject*   (SOMLINK * somTD_M_WPSound_wpclsMakeAwake)(M_WPSound *somSelf,
		PSZ pszTitle,
		ULONG ulStyle,
		HPOINTER hptrIcon,
		POBJDATA pObjData,
		WPFolder* Folder,
		ULONG ulUser);
typedef WPObject*   (SOMLINK * somTD_M_WPSound_wpclsNew)(M_WPSound *somSelf,
		PSZ pszTitle,
		PSZ pszSetupEnv,
		WPFolder* Folder,
		BOOL fLock);
typedef BOOL   (SOMLINK * somTD_M_WPSound_wpclsQueryDefaultHelp)(M_WPSound *somSelf,
		PULONG pHelpPanelId,
		PSZ pszHelpLibrary);
typedef ULONG   (SOMLINK * somTD_M_WPSound_wpclsQueryDefaultView)(M_WPSound *somSelf);
typedef PCLASSDETAILS   (SOMLINK * somTD_M_WPSound_wpclsQueryDetails)(M_WPSound *somSelf);
typedef ULONG   (SOMLINK * somTD_M_WPSound_wpclsQueryDetailsInfo)(M_WPSound *somSelf,
		PCLASSFIELDINFO* ppClassFieldInfo,
		PULONG pSize);
typedef BOOL   (SOMLINK * somTD_M_WPSound_wpclsQueryExtendedCriteria)(M_WPSound *somSelf,
		PSZ pszName,
		ULONG ulSearchType,
		PVOID pvoidExtendedCriteria);
typedef WPObject*   (SOMLINK * somTD_M_WPSound_wpclsQueryFolder)(M_WPSound *somSelf,
		PSZ pszLocation,
		BOOL fLock);
typedef HPOINTER   (SOMLINK * somTD_M_WPSound_wpclsQueryIcon)(M_WPSound *somSelf);
typedef void   (SOMLINK * somTD_M_WPSound_wpclsQuerySearchInfo)(M_WPSound *somSelf,
		M_WPObject** ClassExtended,
		M_WPObject** ClassCreate,
		PULONG pulClassCriteriaSize);
typedef ULONG   (SOMLINK * somTD_M_WPSound_wpclsQueryStyle)(M_WPSound *somSelf);
typedef void   (SOMLINK * somTD_M_WPSound_wpclsUnInitData)(M_WPSound *somSelf);
typedef BOOL   (SOMLINK * somTD_M_WPSound_wpclsFindObjectFirst)(M_WPSound *somSelf,
		PCLASS pClassList,
		PHFIND phFind,
		PSZ pszTitle,
		WPFolder* Folder,
		BOOL fSubfolders,
		PVOID pExtendedCriteria,
		POBJECT pBuffer,
		PULONG pCount);
typedef BOOL   (SOMLINK * somTD_M_WPSound_wpclsFindObjectNext)(M_WPSound *somSelf,
		HFIND hFind,
		POBJECT pBuffer,
		PULONG pCount);
typedef BOOL   (SOMLINK * somTD_M_WPSound_wpclsFindObjectEnd)(M_WPSound *somSelf,
		HFIND hFind);
typedef BOOL   (SOMLINK * somTD_M_WPSound_wpclsSetError)(M_WPSound *somSelf,
		ULONG ulErrorId);
typedef ULONG   (SOMLINK * somTD_M_WPSound_wpclsQueryError)(M_WPSound *somSelf);
typedef BOOL   (SOMLINK * somTD_M_WPSound_wpclsQuerySettingsPageSize)(M_WPSound *somSelf,
		PSIZEL pSizl);
typedef ULONG   (SOMLINK * somTD_M_WPSound_wpclsQueryIconData)(M_WPSound *somSelf,
		PICONINFO pIconInfo);
typedef WPObject*   (SOMLINK * somTD_M_WPSound_wpclsQueryObject)(M_WPSound *somSelf,
		HOBJECT hObject);
typedef ULONG   (SOMLINK * somTD_M_WPSound_wpclsQueryButtonAppearance)(M_WPSound *somSelf);
typedef void   (SOMLINK * somTD_M_WPSound_wpclsDecUsage)(M_WPSound *somSelf);
typedef void   (SOMLINK * somTD_M_WPSound_wpclsIncUsage)(M_WPSound *somSelf);
typedef BOOL   (SOMLINK * somTD_M_WPSound_wpclsInsertMultipleObjects)(M_WPSound *somSelf,
		HWND hwndCnr,
		PPOINTL pptlIcon,
		PVOID* pObjectArray,
		PVOID pRecordParent,
		ULONG NumRecords);
typedef WPObject*   (SOMLINK * somTD_M_WPSound_wpclsFindOneObject)(M_WPSound *somSelf,
		HWND hwndOwner,
		PSZ pszFindParams);
typedef BOOL   (SOMLINK * somTD_M_WPSound_wpclsSetSettingsPageSize)(M_WPSound *somSelf,
		PSIZEL pSizl);
typedef BOOL   (SOMLINK * somTD_M_WPSound_wpclsSetIconData)(M_WPSound *somSelf,
		PICONINFO pIconInfo);
typedef BOOL   (SOMLINK * somTD_M_WPSound_wpclsSetIcon)(M_WPSound *somSelf,
		HPOINTER hptrNewIcon);
typedef WPObject*   (SOMLINK * somTD_M_WPSound_wpclsObjectFromHandle)(M_WPSound *somSelf,
		HOBJECT hObject);
typedef BOOL   (SOMLINK * somTD_M_WPSound_wpclsRemoveObjects)(M_WPSound *somSelf,
		HWND hwndCnr,
		PVOID* pRecordArray,
		ULONG NumRecords,
		BOOL RemoveAll);
typedef void   (SOMLINK * somTD_M_WPSound_somUninit)(M_WPSound *somSelf);
typedef void   (SOMLINK * somTD_M_WPSound_somClassReady)(M_WPSound *somSelf);
typedef WPSound*   (SOMLINK * somTD_M_WPSound_somNew)(M_WPSound *somSelf);
typedef SOMObject*   (SOMLINK * somTD_M_WPSound_somRenew)(M_WPSound *somSelf,
		void* obj);
typedef long   (SOMLINK * somTD_M_WPSound__get_somDataAlignment)(M_WPSound *somSelf);
typedef SOMClass_somOffsets   (SOMLINK * somTD_M_WPSound__get_somInstanceDataOffsets)(M_WPSound *somSelf);
typedef SOMClass_SOMClassSequence   (SOMLINK * somTD_M_WPSound__get_somDirectInitClasses)(M_WPSound *somSelf);
typedef void   (SOMLINK * somTD_M_WPSound__set_somDirectInitClasses)(M_WPSound *somSelf,
		SOMClass_SOMClassSequence* somDirectInitClasses);
typedef SOMObject*   (SOMLINK * somTD_M_WPSound_somNewNoInit)(M_WPSound *somSelf);
typedef SOMObject*   (SOMLINK * somTD_M_WPSound_somRenewNoInit)(M_WPSound *somSelf,
		void* obj);
typedef SOMObject*   (SOMLINK * somTD_M_WPSound_somRenewNoZero)(M_WPSound *somSelf,
		void* obj);
typedef SOMObject*   (SOMLINK * somTD_M_WPSound_somRenewNoInitNoZero)(M_WPSound *somSelf,
		void* obj);
typedef string   (SOMLINK * somTD_M_WPSound_somAllocate)(M_WPSound *somSelf,
		long size);
typedef void   (SOMLINK * somTD_M_WPSound_somDeallocate)(M_WPSound *somSelf,
		string memptr);
typedef somMethodProc*   (SOMLINK * somTD_M_WPSound__get_somClassAllocate)(M_WPSound *somSelf);
typedef somMethodProc*   (SOMLINK * somTD_M_WPSound__get_somClassDeallocate)(M_WPSound *somSelf);
typedef somBooleanVector   (SOMLINK * somTD_M_WPSound_somGetInstanceInitMask)(M_WPSound *somSelf,
		somInitCtrl* ctrl);
typedef somBooleanVector   (SOMLINK * somTD_M_WPSound_somGetInstanceDestructionMask)(M_WPSound *somSelf,
		somDestructCtrl* ctrl);
typedef somBooleanVector   (SOMLINK * somTD_M_WPSound_somGetInstanceAssignmentMask)(M_WPSound *somSelf,
		somAssignCtrl* ctrl);
typedef void   (SOMLINK * somTD_M_WPSound_somInitClass)(M_WPSound *somSelf,
		string className,
		SOMClass* parentClass,
		long dataSize,
		long maxStaticMethods,
		long majorVersion,
		long minorVersion);
typedef void   (SOMLINK * somTD_M_WPSound_somInitMIClass)(M_WPSound *somSelf,
		long inherit_vars,
		string className,
		SOMClass_SOMClassSequence* parentClasses,
		long dataSize,
		long dataAlignment,
		long maxStaticMethods,
		long majorVersion,
		long minorVersion);
typedef somMToken   (SOMLINK * somTD_M_WPSound_somAddStaticMethod)(M_WPSound *somSelf,
		somId methodId,
		somId methodDescriptor,
		somMethodPtr method,
		somMethodPtr redispatchStub,
		somMethodPtr applyStub);
typedef void   (SOMLINK * somTD_M_WPSound_somAddDynamicMethod)(M_WPSound *somSelf,
		somId methodId,
		somId methodDescriptor,
		somMethodPtr method,
		somMethodPtr applyStub);
typedef void   (SOMLINK * somTD_M_WPSound_somOverrideSMethod)(M_WPSound *somSelf,
		somId methodId,
		somMethodPtr method);
typedef somMethodPtr   (SOMLINK * somTD_M_WPSound_somGetApplyStub)(M_WPSound *somSelf,
		somId methodId);
typedef somClassDataStructure*   (SOMLINK * somTD_M_WPSound_somGetClassData)(M_WPSound *somSelf);
typedef void   (SOMLINK * somTD_M_WPSound_somSetClassData)(M_WPSound *somSelf,
		somClassDataStructure* cds);
typedef somMethodTab*   (SOMLINK * somTD_M_WPSound_somGetClassMtab)(M_WPSound *somSelf);
typedef long   (SOMLINK * somTD_M_WPSound_somGetInstanceOffset)(M_WPSound *somSelf);
typedef long   (SOMLINK * somTD_M_WPSound_somGetInstancePartSize)(M_WPSound *somSelf);
typedef long   (SOMLINK * somTD_M_WPSound_somGetInstanceSize)(M_WPSound *somSelf);
typedef somDToken   (SOMLINK * somTD_M_WPSound_somGetInstanceToken)(M_WPSound *somSelf);
typedef somDToken   (SOMLINK * somTD_M_WPSound_somGetMemberToken)(M_WPSound *somSelf,
		long memberOffset,
		somDToken instanceToken);
typedef boolean   (SOMLINK * somTD_M_WPSound_somGetMethodData)(M_WPSound *somSelf,
		somId methodId,
		somMethodData* md);
typedef somMethodProc*   (SOMLINK * somTD_M_WPSound_somGetRdStub)(M_WPSound *somSelf,
		somId methodId);
typedef somId   (SOMLINK * somTD_M_WPSound_somGetMethodDescriptor)(M_WPSound *somSelf,
		somId methodId);
typedef long   (SOMLINK * somTD_M_WPSound_somGetMethodIndex)(M_WPSound *somSelf,
		somId id);
typedef somMToken   (SOMLINK * somTD_M_WPSound_somGetMethodToken)(M_WPSound *somSelf,
		somId methodId);
typedef string   (SOMLINK * somTD_M_WPSound_somGetName)(M_WPSound *somSelf);
typedef boolean   (SOMLINK * somTD_M_WPSound_somGetNthMethodData)(M_WPSound *somSelf,
		long n,
		somMethodData* md);
typedef somId   (SOMLINK * somTD_M_WPSound_somGetNthMethodInfo)(M_WPSound *somSelf,
		long n,
		somId* descriptor);
typedef long   (SOMLINK * somTD_M_WPSound_somGetNumMethods)(M_WPSound *somSelf);
typedef long   (SOMLINK * somTD_M_WPSound_somGetNumStaticMethods)(M_WPSound *somSelf);
typedef SOMClass*   (SOMLINK * somTD_M_WPSound_somGetParent)(M_WPSound *somSelf);
typedef SOMClass_SOMClassSequence   (SOMLINK * somTD_M_WPSound_somGetParents)(M_WPSound *somSelf);
typedef somMethodTabs   (SOMLINK * somTD_M_WPSound_somGetPClsMtab)(M_WPSound *somSelf);
typedef somMethodTabs   (SOMLINK * somTD_M_WPSound_somGetPClsMtabs)(M_WPSound *somSelf);
typedef void   (SOMLINK * somTD_M_WPSound_somGetVersionNumbers)(M_WPSound *somSelf,
		long* majorVersion,
		long* minorVersion);
typedef boolean   (SOMLINK * somTD_M_WPSound_somSetMethodDescriptor)(M_WPSound *somSelf,
		somId methodId,
		somId descriptor);
typedef boolean   (SOMLINK * somTD_M_WPSound_somFindMethod)(M_WPSound *somSelf,
		somId methodId,
		somMethodPtr* m);
typedef boolean   (SOMLINK * somTD_M_WPSound_somFindMethodOk)(M_WPSound *somSelf,
		somId methodId,
		somMethodPtr* m);
typedef somMethodPtr   (SOMLINK * somTD_M_WPSound_somFindSMethod)(M_WPSound *somSelf,
		somId methodId);
typedef somMethodPtr   (SOMLINK * somTD_M_WPSound_somFindSMethodOk)(M_WPSound *somSelf,
		somId methodId);
typedef somMethodPtr   (SOMLINK * somTD_M_WPSound_somLookupMethod)(M_WPSound *somSelf,
		somId methodId);
typedef boolean   (SOMLINK * somTD_M_WPSound_somCheckVersion)(M_WPSound *somSelf,
		long majorVersion,
		long minorVersion);
typedef boolean   (SOMLINK * somTD_M_WPSound_somDescendedFrom)(M_WPSound *somSelf,
		SOMClass* aClassObj);
typedef boolean   (SOMLINK * somTD_M_WPSound_somSupportsMethod)(M_WPSound *somSelf,
		somId mId);
typedef somMethodPtr   (SOMLINK * somTD_M_WPSound_somDefinedMethod)(M_WPSound *somSelf,
		somMToken method);
typedef void   (SOMLINK * somTD_M_WPSound_somOverrideMtab)(M_WPSound *somSelf);
typedef void   (SOMLINK * somTD_M_WPSound_somDefaultInit)(M_WPSound *somSelf,
		somInitCtrl* ctrl);
typedef void   (SOMLINK * somTD_M_WPSound_somDestruct)(M_WPSound *somSelf,
		octet doFree,
		somDestructCtrl* ctrl);
typedef void   (SOMLINK * somTD_M_WPSound_somDefaultCopyInit)(M_WPSound *somSelf,
		somInitCtrl* ctrl,
		SOMObject* fromObj);
typedef M_WPSound*   (SOMLINK * somTD_M_WPSound_somDefaultAssign)(M_WPSound *somSelf,
		somAssignCtrl* ctrl,
		SOMObject* fromObj);
typedef void   (SOMLINK * somTD_M_WPSound_somDefaultConstCopyInit)(M_WPSound *somSelf,
		somInitCtrl* ctrl,
		SOMObject* fromObj);
typedef void   (SOMLINK * somTD_M_WPSound_somDefaultVCopyInit)(M_WPSound *somSelf,
		somInitCtrl* ctrl,
		SOMObject* fromObj);
typedef void   (SOMLINK * somTD_M_WPSound_somDefaultConstVCopyInit)(M_WPSound *somSelf,
		somInitCtrl* ctrl,
		SOMObject* fromObj);
typedef M_WPSound*   (SOMLINK * somTD_M_WPSound_somDefaultConstAssign)(M_WPSound *somSelf,
		somAssignCtrl* ctrl,
		SOMObject* fromObj);
typedef M_WPSound*   (SOMLINK * somTD_M_WPSound_somDefaultVAssign)(M_WPSound *somSelf,
		somAssignCtrl* ctrl,
		SOMObject* fromObj);
typedef M_WPSound*   (SOMLINK * somTD_M_WPSound_somDefaultConstVAssign)(M_WPSound *somSelf,
		somAssignCtrl* ctrl,
		SOMObject* fromObj);
typedef void   (SOMLINK * somTD_M_WPSound_somInit)(M_WPSound *somSelf);
typedef void   (SOMLINK * somTD_M_WPSound_somFree)(M_WPSound *somSelf);
typedef SOMClass*   (SOMLINK * somTD_M_WPSound_somGetClass)(M_WPSound *somSelf);
typedef string   (SOMLINK * somTD_M_WPSound_somGetClassName)(M_WPSound *somSelf);
typedef long   (SOMLINK * somTD_M_WPSound_somGetSize)(M_WPSound *somSelf);
typedef boolean   (SOMLINK * somTD_M_WPSound_somIsA)(M_WPSound *somSelf,
		SOMClass* aClassObj);
typedef boolean   (SOMLINK * somTD_M_WPSound_somIsInstanceOf)(M_WPSound *somSelf,
		SOMClass* aClassObj);
typedef boolean   (SOMLINK * somTD_M_WPSound_somRespondsTo)(M_WPSound *somSelf,
		somId mId);
typedef boolean   (SOMLINK * somTD_M_WPSound_somDispatch)(M_WPSound *somSelf,
		somToken* retValue,
		somId methodId,
		va_list ap);
typedef boolean   (SOMLINK * somTD_M_WPSound_somClassDispatch)(M_WPSound *somSelf,
		SOMClass* clsObj,
		somToken* retValue,
		somId methodId,
		va_list ap);
typedef boolean   (SOMLINK * somTD_M_WPSound_somCastObj)(M_WPSound *somSelf,
		SOMClass* cls);
typedef boolean   (SOMLINK * somTD_M_WPSound_somResetObj)(M_WPSound *somSelf);
typedef void   (SOMLINK * somTD_M_WPSound_somDispatchV)(M_WPSound *somSelf,
		somId methodId,
		somId descriptor,
		va_list ap);
typedef long   (SOMLINK * somTD_M_WPSound_somDispatchL)(M_WPSound *somSelf,
		somId methodId,
		somId descriptor,
		va_list ap);
typedef void*   (SOMLINK * somTD_M_WPSound_somDispatchA)(M_WPSound *somSelf,
		somId methodId,
		somId descriptor,
		va_list ap);
typedef double   (SOMLINK * somTD_M_WPSound_somDispatchD)(M_WPSound *somSelf,
		somId methodId,
		somId descriptor,
		va_list ap);
typedef SOMObject*   (SOMLINK * somTD_M_WPSound_somPrintSelf)(M_WPSound *somSelf);
typedef void   (SOMLINK * somTD_M_WPSound_somDumpSelf)(M_WPSound *somSelf,
		long level);
typedef void   (SOMLINK * somTD_M_WPSound_somDumpSelfInt)(M_WPSound *somSelf,
		long level);
}

#endif /* M_WPSound_API */


/*
 * -- This emitter treats Method Tokens as Thunks by default.
 * -- Use the sc modifier "nothunks" to change this default
 */
#undef somresolve_
#define somresolve_(obj,mToken) ((somMethodProc*)((void)obj, mToken))

/*
 * -- The C++ Wrapper Class for M_WPSound
 */
class M_WPSound : public M_WPAbstract
{
public:

// M_WPSound::new creates the class object if necessary, and then uses somNewNoInit
// to allocate memory and create the object. Initialization is in ctors.
void *operator new(size_t size)
{
   SOM_IgnoreWarning(size);
   if (!_M_WPSound) M_WPSoundNewClass(M_WPSound_MajorVersion,M_WPSound_MinorVersion);
   return (void*)
      SOM_Resolve(_M_WPSound,SOMClass,somNewNoInit)
         ((SOMClass *)((void*)_M_WPSound));
}

// M_WPSound::delete uses the default deallocator for the object's class.
void operator delete(void * obj)
{
   somToken objCls = obj ? *(void**)obj : (somToken) NULL;
   if (somIsObj(objCls)) {
      SOM_Resolve(objCls,SOMClass,somDeallocate)
         ((SOMClass*)objCls, (string)obj);
   }
}

M_WPSound()
{
   if (*(void**)this != 
       ((somParentMtabStructPtr)
        (M_WPSoundCClassData.parentMtab))->mtab)
      return;
   somDefaultInit(0);
}

M_WPSound(M_WPSound* fromObj)
{
   if (*(void**)this != 
       ((somParentMtabStructPtr)
        (M_WPSoundCClassData.parentMtab))->mtab)
      return;
   somDefaultCopyInit(0,((SOMObject*)((void*)fromObj)));
}

M_WPSound(const M_WPSound* fromObj)
{
   if (*(void**)this != 
       ((somParentMtabStructPtr)
        (M_WPSoundCClassData.parentMtab))->mtab)
      return;
   somDefaultConstCopyInit(0,((SOMObject*)((void*)fromObj)));
}

~M_WPSound()
{
   if (!somIsObj(this)) return;
   somDestruct(0,0);
   *(void**)this = **(void***)this;
}


/*
 * Reintroduce inherited methods
 */

/* method: wpclsQuerySetting */
ULONG   wpclsQuerySetting(PSZ pszSetting,
		PVOID pValue,
		ULONG ulValueLen)
{
   return SOM_ResolveD(this,M_WPSound,M_WPAbstract,wpclsQuerySetting)
	(this,pszSetting,pValue,ulValueLen);
}


/* method: wpclsSetSetting */
BOOL   wpclsSetSetting(PSZ pszSetting,
		PVOID pValue)
{
   return SOM_ResolveD(this,M_WPSound,M_WPAbstract,wpclsSetSetting)
	(this,pszSetting,pValue);
}


/* method: wpclsQueryTitle */
PSZ   wpclsQueryTitle()
{
   return SOM_ResolveD(this,M_WPSound,M_WPObject,wpclsQueryTitle)
	(this);
}


/* method: wpclsCreateDefaultTemplates */
BOOL   wpclsCreateDefaultTemplates(WPObject* Folder)
{
   return SOM_ResolveD(this,M_WPSound,M_WPObject,wpclsCreateDefaultTemplates)
	(this,Folder);
}


/* method: wpclsInitData */
void   wpclsInitData()
{
   SOM_ResolveD(this,M_WPSound,M_WPObject,wpclsInitData)
	(this);
}


/* method: wpclsMakeAwake */
WPObject*   wpclsMakeAwake(PSZ pszTitle,
		ULONG ulStyle,
		HPOINTER hptrIcon,
		POBJDATA pObjData,
		WPFolder* Folder,
		ULONG ulUser)
{
   return SOM_ResolveD(this,M_WPSound,M_WPObject,wpclsMakeAwake)
	(this,pszTitle,ulStyle,hptrIcon,pObjData,Folder,ulUser);
}


/* method: wpclsNew */
WPObject*   wpclsNew(PSZ pszTitle,
		PSZ pszSetupEnv,
		WPFolder* Folder,
		BOOL fLock)
{
   return SOM_ResolveD(this,M_WPSound,M_WPObject,wpclsNew)
	(this,pszTitle,pszSetupEnv,Folder,fLock);
}


/* method: wpclsQueryDefaultHelp */
BOOL   wpclsQueryDefaultHelp(PULONG pHelpPanelId,
		PSZ pszHelpLibrary)
{
   return SOM_ResolveD(this,M_WPSound,M_WPObject,wpclsQueryDefaultHelp)
	(this,pHelpPanelId,pszHelpLibrary);
}


/* method: wpclsQueryDefaultView */
ULONG   wpclsQueryDefaultView()
{
   return SOM_ResolveD(this,M_WPSound,M_WPObject,wpclsQueryDefaultView)
	(this);
}


/* method: wpclsQueryDetails */
PCLASSDETAILS   wpclsQueryDetails()
{
   return SOM_ResolveD(this,M_WPSound,M_WPObject,wpclsQueryDetails)
	(this);
}


/* method: wpclsQueryDetailsInfo */
ULONG   wpclsQueryDetailsInfo(PCLASSFIELDINFO* ppClassFieldInfo,
		PULONG pSize)
{
   return SOM_ResolveD(this,M_WPSound,M_WPObject,wpclsQueryDetailsInfo)
	(this,ppClassFieldInfo,pSize);
}


/* method: wpclsQueryExtendedCriteria */
BOOL   wpclsQueryExtendedCriteria(PSZ pszName,
		ULONG ulSearchType,
		PVOID pvoidExtendedCriteria)
{
   return SOM_ResolveD(this,M_WPSound,M_WPObject,wpclsQueryExtendedCriteria)
	(this,pszName,ulSearchType,pvoidExtendedCriteria);
}


/* method: wpclsQueryFolder */
WPObject*   wpclsQueryFolder(PSZ pszLocation,
		BOOL fLock)
{
   return SOM_ResolveD(this,M_WPSound,M_WPObject,wpclsQueryFolder)
	(this,pszLocation,fLock);
}


/* method: wpclsQueryIcon */
HPOINTER   wpclsQueryIcon()
{
   return SOM_ResolveD(this,M_WPSound,M_WPObject,wpclsQueryIcon)
	(this);
}


/* method: wpclsQuerySearchInfo */
void   wpclsQuerySearchInfo(M_WPObject** ClassExtended,
		M_WPObject** ClassCreate,
		PULONG pulClassCriteriaSize)
{
   SOM_ResolveD(this,M_WPSound,M_WPObject,wpclsQuerySearchInfo)
	(this,ClassExtended,ClassCreate,pulClassCriteriaSize);
}


/* method: wpclsQueryStyle */
ULONG   wpclsQueryStyle()
{
   return SOM_ResolveD(this,M_WPSound,M_WPObject,wpclsQueryStyle)
	(this);
}


/* method: wpclsUnInitData */
void   wpclsUnInitData()
{
   SOM_ResolveD(this,M_WPSound,M_WPObject,wpclsUnInitData)
	(this);
}


/* method: wpclsFindObjectFirst */
BOOL   wpclsFindObjectFirst(PCLASS pClassList,
		PHFIND phFind,
		PSZ pszTitle,
		WPFolder* Folder,
		BOOL fSubfolders,
		PVOID pExtendedCriteria,
		POBJECT pBuffer,
		PULONG pCount)
{
   return SOM_ResolveD(this,M_WPSound,M_WPObject,wpclsFindObjectFirst)
	(this,pClassList,phFind,pszTitle,Folder,fSubfolders,pExtendedCriteria,pBuffer,pCount);
}


/* method: wpclsFindObjectNext */
BOOL   wpclsFindObjectNext(HFIND hFind,
		POBJECT pBuffer,
		PULONG pCount)
{
   return SOM_ResolveD(this,M_WPSound,M_WPObject,wpclsFindObjectNext)
	(this,hFind,pBuffer,pCount);
}


/* method: wpclsFindObjectEnd */
BOOL   wpclsFindObjectEnd(HFIND hFind)
{
   return SOM_ResolveD(this,M_WPSound,M_WPObject,wpclsFindObjectEnd)
	(this,hFind);
}


/* method: wpclsSetError */
BOOL   wpclsSetError(ULONG ulErrorId)
{
   return SOM_ResolveD(this,M_WPSound,M_WPObject,wpclsSetError)
	(this,ulErrorId);
}


/* method: wpclsQueryError */
ULONG   wpclsQueryError()
{
   return SOM_ResolveD(this,M_WPSound,M_WPObject,wpclsQueryError)
	(this);
}


/* method: wpclsQuerySettingsPageSize */
BOOL   wpclsQuerySettingsPageSize(PSIZEL pSizl)
{
   return SOM_ResolveD(this,M_WPSound,M_WPObject,wpclsQuerySettingsPageSize)
	(this,pSizl);
}


/* method: wpclsQueryIconData */
ULONG   wpclsQueryIconData(PICONINFO pIconInfo)
{
   return SOM_ResolveD(this,M_WPSound,M_WPObject,wpclsQueryIconData)
	(this,pIconInfo);
}


/* method: wpclsQueryObject */
WPObject*   wpclsQueryObject(HOBJECT hObject)
{
   return SOM_ResolveD(this,M_WPSound,M_WPObject,wpclsQueryObject)
	(this,hObject);
}


/* method: wpclsQueryButtonAppearance */
ULONG   wpclsQueryButtonAppearance()
{
   return SOM_ResolveD(this,M_WPSound,M_WPObject,wpclsQueryButtonAppearance)
	(this);
}


/* method: wpclsDecUsage */
void   wpclsDecUsage()
{
   SOM_ResolveD(this,M_WPSound,M_WPObject,wpclsDecUsage)
	(this);
}


/* method: wpclsIncUsage */
void   wpclsIncUsage()
{
   SOM_ResolveD(this,M_WPSound,M_WPObject,wpclsIncUsage)
	(this);
}


/* method: wpclsInsertMultipleObjects */
BOOL   wpclsInsertMultipleObjects(HWND hwndCnr,
		PPOINTL pptlIcon,
		PVOID* pObjectArray,
		PVOID pRecordParent,
		ULONG NumRecords)
{
   return SOM_ResolveD(this,M_WPSound,M_WPObject,wpclsInsertMultipleObjects)
	(this,hwndCnr,pptlIcon,pObjectArray,pRecordParent,NumRecords);
}


/* method: wpclsFindOneObject */
WPObject*   wpclsFindOneObject(HWND hwndOwner,
		PSZ pszFindParams)
{
   return SOM_ResolveD(this,M_WPSound,M_WPObject,wpclsFindOneObject)
	(this,hwndOwner,pszFindParams);
}


/* method: wpclsSetSettingsPageSize */
BOOL   wpclsSetSettingsPageSize(PSIZEL pSizl)
{
   return SOM_ResolveD(this,M_WPSound,M_WPObject,wpclsSetSettingsPageSize)
	(this,pSizl);
}


/* method: wpclsSetIconData */
BOOL   wpclsSetIconData(PICONINFO pIconInfo)
{
   return SOM_ResolveD(this,M_WPSound,M_WPObject,wpclsSetIconData)
	(this,pIconInfo);
}


/* method: wpclsSetIcon */
BOOL   wpclsSetIcon(HPOINTER hptrNewIcon)
{
   return SOM_ResolveD(this,M_WPSound,M_WPObject,wpclsSetIcon)
	(this,hptrNewIcon);
}


/* method: wpclsObjectFromHandle */
WPObject*   wpclsObjectFromHandle(HOBJECT hObject)
{
   return SOM_ResolveD(this,M_WPSound,M_WPObject,wpclsObjectFromHandle)
	(this,hObject);
}


/* method: wpclsRemoveObjects */
BOOL   wpclsRemoveObjects(HWND hwndCnr,
		PVOID* pRecordArray,
		ULONG NumRecords,
		BOOL RemoveAll)
{
   return SOM_ResolveD(this,M_WPSound,M_WPObject,wpclsRemoveObjects)
	(this,hwndCnr,pRecordArray,NumRecords,RemoveAll);
}


/* method: somUninit */
void   somUninit()
{
   SOM_ResolveD(this,M_WPSound,SOMObject,somUninit)
	(this);
}


/* method: somClassReady */
void   somClassReady()
{
   SOM_ResolveD(this,M_WPSound,SOMClass,somClassReady)
	(this);
}


/* method: somNew */
WPSound*  somNew()
{
   return SOM_ResolveD(this,M_WPSound,SOMClass,somNew)
	(this);
}


/* method: somRenew */
SOMObject*   somRenew(void* obj)
{
   return SOM_ResolveD(this,M_WPSound,SOMClass,somRenew)
	(this,obj);
}


/* method: _get_somDataAlignment */
long   _get_somDataAlignment()
{
   return SOM_ResolveD(this,M_WPSound,SOMClass,_get_somDataAlignment)
	(this);
}


/* nonstatic method: _get_somInstanceDataOffsets */
SOMClass_somOffsets   _get_somInstanceDataOffsets()
{
   return SOM_ResolveD(this,M_WPSound,SOMClass,_get_somInstanceDataOffsets)
	(this);
}


/* nonstatic method: _get_somDirectInitClasses */
SOMClass_SOMClassSequence   _get_somDirectInitClasses()
{
   return SOM_ResolveD(this,M_WPSound,SOMClass,_get_somDirectInitClasses)
	(this);
}


/* nonstatic method: _set_somDirectInitClasses */
void   _set_somDirectInitClasses(SOMClass_SOMClassSequence* somDirectInitClasses)
{
   SOM_ResolveD(this,M_WPSound,SOMClass,_set_somDirectInitClasses)
	(this,somDirectInitClasses);
}


/* method: somNewNoInit */
SOMObject*   somNewNoInit()
{
   return SOM_ResolveD(this,M_WPSound,SOMClass,somNewNoInit)
	(this);
}


/* method: somRenewNoInit */
SOMObject*   somRenewNoInit(void* obj)
{
   return SOM_ResolveD(this,M_WPSound,SOMClass,somRenewNoInit)
	(this,obj);
}


/* method: somRenewNoZero */
SOMObject*   somRenewNoZero(void* obj)
{
   return SOM_ResolveD(this,M_WPSound,SOMClass,somRenewNoZero)
	(this,obj);
}


/* method: somRenewNoInitNoZero */
SOMObject*   somRenewNoInitNoZero(void* obj)
{
   return SOM_ResolveD(this,M_WPSound,SOMClass,somRenewNoInitNoZero)
	(this,obj);
}


/* nonstatic method: somAllocate */
string   somAllocate(long size)
{
   return SOM_ResolveD(this,M_WPSound,SOMClass,somAllocate)
	(this,size);
}


/* nonstatic method: somDeallocate */
void   somDeallocate(string memptr)
{
   SOM_ResolveD(this,M_WPSound,SOMClass,somDeallocate)
	(this,memptr);
}


/* nonstatic method: _get_somClassAllocate */
somMethodProc*   _get_somClassAllocate()
{
   return SOM_ResolveD(this,M_WPSound,SOMClass,_get_somClassAllocate)
	(this);
}


/* nonstatic method: _get_somClassDeallocate */
somMethodProc*   _get_somClassDeallocate()
{
   return SOM_ResolveD(this,M_WPSound,SOMClass,_get_somClassDeallocate)
	(this);
}


/* method: somGetInstanceInitMask */
somBooleanVector   somGetInstanceInitMask(somInitCtrl* ctrl)
{
   return SOM_ResolveD(this,M_WPSound,SOMClass,somGetInstanceInitMask)
	(this,ctrl);
}


/* method: somGetInstanceDestructionMask */
somBooleanVector   somGetInstanceDestructionMask(somDestructCtrl* ctrl)
{
   return SOM_ResolveD(this,M_WPSound,SOMClass,somGetInstanceDestructionMask)
	(this,ctrl);
}


/* method: somGetInstanceAssignmentMask */
somBooleanVector   somGetInstanceAssignmentMask(somAssignCtrl* ctrl)
{
   return SOM_ResolveD(this,M_WPSound,SOMClass,somGetInstanceAssignmentMask)
	(this,ctrl);
}


/* method: somInitClass */
void   somInitClass(string className,
		SOMClass* parentClass,
		long dataSize,
		long maxStaticMethods,
		long majorVersion,
		long minorVersion)
{
   SOM_ResolveD(this,M_WPSound,SOMClass,somInitClass)
	(this,className,parentClass,dataSize,maxStaticMethods,majorVersion,minorVersion);
}


/* method: somInitMIClass */
void   somInitMIClass(long inherit_vars,
		string className,
		SOMClass_SOMClassSequence* parentClasses,
		long dataSize,
		long dataAlignment,
		long maxStaticMethods,
		long majorVersion,
		long minorVersion)
{
   SOM_ResolveD(this,M_WPSound,SOMClass,somInitMIClass)
	(this,inherit_vars,className,parentClasses,dataSize,dataAlignment,maxStaticMethods,majorVersion,minorVersion);
}


/* method: somAddStaticMethod */
somMToken   somAddStaticMethod(somId methodId,
		somId methodDescriptor,
		somMethodPtr method,
		somMethodPtr redispatchStub,
		somMethodPtr applyStub)
{
   return SOM_ResolveD(this,M_WPSound,SOMClass,somAddStaticMethod)
	(this,methodId,methodDescriptor,method,redispatchStub,applyStub);
}


/* method: somAddDynamicMethod */
void   somAddDynamicMethod(somId methodId,
		somId methodDescriptor,
		somMethodPtr method,
		somMethodPtr applyStub)
{
   SOM_ResolveD(this,M_WPSound,SOMClass,somAddDynamicMethod)
	(this,methodId,methodDescriptor,method,applyStub);
}


/* method: somOverrideSMethod */
void   somOverrideSMethod(somId methodId,
		somMethodPtr method)
{
   SOM_ResolveD(this,M_WPSound,SOMClass,somOverrideSMethod)
	(this,methodId,method);
}


/* method: somGetApplyStub */
somMethodPtr   somGetApplyStub(somId methodId)
{
   return SOM_ResolveD(this,M_WPSound,SOMClass,somGetApplyStub)
	(this,methodId);
}


/* method: somGetClassData */
somClassDataStructure*   somGetClassData()
{
   return SOM_ResolveD(this,M_WPSound,SOMClass,somGetClassData)
	(this);
}


/* method: somSetClassData */
void   somSetClassData(somClassDataStructure* cds)
{
   SOM_ResolveD(this,M_WPSound,SOMClass,somSetClassData)
	(this,cds);
}


/* method: somGetClassMtab */
somMethodTab*   somGetClassMtab()
{
   return SOM_ResolveD(this,M_WPSound,SOMClass,somGetClassMtab)
	(this);
}


/* method: somGetInstanceOffset */
long   somGetInstanceOffset()
{
   return SOM_ResolveD(this,M_WPSound,SOMClass,somGetInstanceOffset)
	(this);
}


/* method: somGetInstancePartSize */
long   somGetInstancePartSize()
{
   return SOM_ResolveD(this,M_WPSound,SOMClass,somGetInstancePartSize)
	(this);
}


/* method: somGetInstanceSize */
long   somGetInstanceSize()
{
   return SOM_ResolveD(this,M_WPSound,SOMClass,somGetInstanceSize)
	(this);
}


/* method: somGetInstanceToken */
somDToken   somGetInstanceToken()
{
   return SOM_ResolveD(this,M_WPSound,SOMClass,somGetInstanceToken)
	(this);
}


/* method: somGetMemberToken */
somDToken   somGetMemberToken(long memberOffset,
		somDToken instanceToken)
{
   return SOM_ResolveD(this,M_WPSound,SOMClass,somGetMemberToken)
	(this,memberOffset,instanceToken);
}


/* method: somGetMethodData */
boolean   somGetMethodData(somId methodId,
		somMethodData* md)
{
   return SOM_ResolveD(this,M_WPSound,SOMClass,somGetMethodData)
	(this,methodId,md);
}


/* method: somGetRdStub */
somMethodProc*   somGetRdStub(somId methodId)
{
   return SOM_ResolveD(this,M_WPSound,SOMClass,somGetRdStub)
	(this,methodId);
}


/* method: somGetMethodDescriptor */
somId   somGetMethodDescriptor(somId methodId)
{
   return SOM_ResolveD(this,M_WPSound,SOMClass,somGetMethodDescriptor)
	(this,methodId);
}


/* method: somGetMethodIndex */
long   somGetMethodIndex(somId id)
{
   return SOM_ResolveD(this,M_WPSound,SOMClass,somGetMethodIndex)
	(this,id);
}


/* method: somGetMethodToken */
somMToken   somGetMethodToken(somId methodId)
{
   return SOM_ResolveD(this,M_WPSound,SOMClass,somGetMethodToken)
	(this,methodId);
}


/* method: somGetName */
string   somGetName()
{
   return SOM_ResolveD(this,M_WPSound,SOMClass,somGetName)
	(this);
}


/* method: somGetNthMethodData */
boolean   somGetNthMethodData(long n,
		somMethodData* md)
{
   return SOM_ResolveD(this,M_WPSound,SOMClass,somGetNthMethodData)
	(this,n,md);
}


/* method: somGetNthMethodInfo */
somId   somGetNthMethodInfo(long n,
		somId* descriptor)
{
   return SOM_ResolveD(this,M_WPSound,SOMClass,somGetNthMethodInfo)
	(this,n,descriptor);
}


/* method: somGetNumMethods */
long   somGetNumMethods()
{
   return SOM_ResolveD(this,M_WPSound,SOMClass,somGetNumMethods)
	(this);
}


/* method: somGetNumStaticMethods */
long   somGetNumStaticMethods()
{
   return SOM_ResolveD(this,M_WPSound,SOMClass,somGetNumStaticMethods)
	(this);
}


/* method: somGetParent */
SOMClass*   somGetParent()
{
   return SOM_ResolveD(this,M_WPSound,SOMClass,somGetParent)
	(this);
}


/* method: somGetParents */
SOMClass_SOMClassSequence   somGetParents()
{
   return SOM_ResolveD(this,M_WPSound,SOMClass,somGetParents)
	(this);
}


/* method: somGetPClsMtab */
somMethodTabs   somGetPClsMtab()
{
   return SOM_ResolveD(this,M_WPSound,SOMClass,somGetPClsMtab)
	(this);
}


/* method: somGetPClsMtabs */
somMethodTabs   somGetPClsMtabs()
{
   return SOM_ResolveD(this,M_WPSound,SOMClass,somGetPClsMtabs)
	(this);
}


/* method: somGetVersionNumbers */
void   somGetVersionNumbers(long* majorVersion,
		long* minorVersion)
{
   SOM_ResolveD(this,M_WPSound,SOMClass,somGetVersionNumbers)
	(this,majorVersion,minorVersion);
}


/* method: somSetMethodDescriptor */
boolean   somSetMethodDescriptor(somId methodId,
		somId descriptor)
{
   return SOM_ResolveD(this,M_WPSound,SOMClass,somSetMethodDescriptor)
	(this,methodId,descriptor);
}


/* method: somFindMethod */
boolean   somFindMethod(somId methodId,
		somMethodPtr* m)
{
   return SOM_ResolveD(this,M_WPSound,SOMClass,somFindMethod)
	(this,methodId,m);
}


/* method: somFindMethodOk */
boolean   somFindMethodOk(somId methodId,
		somMethodPtr* m)
{
   return SOM_ResolveD(this,M_WPSound,SOMClass,somFindMethodOk)
	(this,methodId,m);
}


/* method: somFindSMethod */
somMethodPtr   somFindSMethod(somId methodId)
{
   return SOM_ResolveD(this,M_WPSound,SOMClass,somFindSMethod)
	(this,methodId);
}


/* method: somFindSMethodOk */
somMethodPtr   somFindSMethodOk(somId methodId)
{
   return SOM_ResolveD(this,M_WPSound,SOMClass,somFindSMethodOk)
	(this,methodId);
}


/* method: somLookupMethod */
somMethodPtr   somLookupMethod(somId methodId)
{
   return SOM_ResolveD(this,M_WPSound,SOMClass,somLookupMethod)
	(this,methodId);
}


/* method: somCheckVersion */
boolean   somCheckVersion(long majorVersion,
		long minorVersion)
{
   return SOM_ResolveD(this,M_WPSound,SOMClass,somCheckVersion)
	(this,majorVersion,minorVersion);
}


/* method: somDescendedFrom */
boolean   somDescendedFrom(SOMClass* aClassObj)
{
   return SOM_ResolveD(this,M_WPSound,SOMClass,somDescendedFrom)
	(this,aClassObj);
}


/* method: somSupportsMethod */
boolean   somSupportsMethod(somId mId)
{
   return SOM_ResolveD(this,M_WPSound,SOMClass,somSupportsMethod)
	(this,mId);
}


/* method: somDefinedMethod */
somMethodPtr   somDefinedMethod(somMToken method)
{
   return SOM_ResolveD(this,M_WPSound,SOMClass,somDefinedMethod)
	(this,method);
}


/* method: somOverrideMtab */
void   somOverrideMtab()
{
   SOM_ResolveD(this,M_WPSound,SOMClass,somOverrideMtab)
	(this);
}


/* initializer method: somDefaultInit */
void   somDefaultInit(somInitCtrl* ctrl)
{
   SOM_ResolveD(this,M_WPSound,SOMObject,somDefaultInit)
	(this,ctrl);
}


/* method: somDestruct */
void   somDestruct(octet doFree,
		somDestructCtrl* ctrl)
{
   SOM_ResolveD(this,M_WPSound,SOMObject,somDestruct)
	(this,doFree,ctrl);
}


/* method: somDefaultCopyInit */
void   somDefaultCopyInit(somInitCtrl* ctrl,
		SOMObject* fromObj)
{
   SOM_ResolveD(this,M_WPSound,SOMObject,somDefaultCopyInit)
	(this,ctrl,fromObj);
}


/* method: somDefaultAssign */
M_WPSound*  somDefaultAssign(somAssignCtrl* ctrl,
		SOMObject* fromObj)
{
   return SOM_ResolveD(this,M_WPSound,SOMObject,somDefaultAssign)
	(this,ctrl,fromObj);
}


/* method: somDefaultConstCopyInit */
void   somDefaultConstCopyInit(somInitCtrl* ctrl,
		SOMObject* fromObj)
{
   SOM_ResolveD(this,M_WPSound,SOMObject,somDefaultConstCopyInit)
	(this,ctrl,fromObj);
}


/* method: somDefaultVCopyInit */
void   somDefaultVCopyInit(somInitCtrl* ctrl,
		SOMObject* fromObj)
{
   SOM_ResolveD(this,M_WPSound,SOMObject,somDefaultVCopyInit)
	(this,ctrl,fromObj);
}


/* method: somDefaultConstVCopyInit */
void   somDefaultConstVCopyInit(somInitCtrl* ctrl,
		SOMObject* fromObj)
{
   SOM_ResolveD(this,M_WPSound,SOMObject,somDefaultConstVCopyInit)
	(this,ctrl,fromObj);
}


/* method: somDefaultConstAssign */
M_WPSound*  somDefaultConstAssign(somAssignCtrl* ctrl,
		SOMObject* fromObj)
{
   return SOM_ResolveD(this,M_WPSound,SOMObject,somDefaultConstAssign)
	(this,ctrl,fromObj);
}


/* method: somDefaultVAssign */
M_WPSound*  somDefaultVAssign(somAssignCtrl* ctrl,
		SOMObject* fromObj)
{
   return SOM_ResolveD(this,M_WPSound,SOMObject,somDefaultVAssign)
	(this,ctrl,fromObj);
}


/* method: somDefaultConstVAssign */
M_WPSound*  somDefaultConstVAssign(somAssignCtrl* ctrl,
		SOMObject* fromObj)
{
   return SOM_ResolveD(this,M_WPSound,SOMObject,somDefaultConstVAssign)
	(this,ctrl,fromObj);
}


/* method: somInit */
void   somInit()
{
   SOM_ResolveD(this,M_WPSound,SOMObject,somInit)
	(this);
}


/* method: somFree */
void   somFree()
{
   SOM_ResolveD(this,M_WPSound,SOMObject,somFree)
	(this);
}


/* method: somGetClass */
SOMClass*   somGetClass()
{
   return SOM_ResolveD(this,M_WPSound,SOMObject,somGetClass)
	(this);
}


/* method: somGetClassName */
string   somGetClassName()
{
   return SOM_ResolveD(this,M_WPSound,SOMObject,somGetClassName)
	(this);
}


/* method: somGetSize */
long   somGetSize()
{
   return SOM_ResolveD(this,M_WPSound,SOMObject,somGetSize)
	(this);
}


/* method: somIsA */
boolean   somIsA(SOMClass* aClassObj)
{
   return SOM_ResolveD(this,M_WPSound,SOMObject,somIsA)
	(this,aClassObj);
}


/* method: somIsInstanceOf */
boolean   somIsInstanceOf(SOMClass* aClassObj)
{
   return SOM_ResolveD(this,M_WPSound,SOMObject,somIsInstanceOf)
	(this,aClassObj);
}


/* method: somRespondsTo */
boolean   somRespondsTo(somId mId)
{
   return SOM_ResolveD(this,M_WPSound,SOMObject,somRespondsTo)
	(this,mId);
}


/* va_list method: somDispatch */
/* the va_list invocation form */
boolean   M_WPSound_somDispatch(somToken* retValue,
		somId methodId,
		va_list ap)
{
return SOM_ResolveD(this,M_WPSound,SOMObject,somDispatch)
	(this,retValue,methodId,ap);
}

/* the varargs invocation form */
boolean   somDispatch(somToken* retValue,
		somId methodId,
		...)
{
   va_list ap;
   va_start(ap, methodId);
   boolean __somResult = 
      SOM_ResolveD(this,M_WPSound,SOMObject,somDispatch)
	(this,retValue,methodId,ap);
   va_end(ap);
   return __somResult;
}


/* va_list method: somClassDispatch */
/* the va_list invocation form */
boolean   M_WPSound_somClassDispatch(SOMClass* clsObj,
		somToken* retValue,
		somId methodId,
		va_list ap)
{
return SOM_ResolveD(this,M_WPSound,SOMObject,somClassDispatch)
	(this,clsObj,retValue,methodId,ap);
}

/* the varargs invocation form */
boolean   somClassDispatch(SOMClass* clsObj,
		somToken* retValue,
		somId methodId,
		...)
{
   va_list ap;
   va_start(ap, methodId);
   boolean __somResult = 
      SOM_ResolveD(this,M_WPSound,SOMObject,somClassDispatch)
	(this,clsObj,retValue,methodId,ap);
   va_end(ap);
   return __somResult;
}


/* method: somCastObj */
boolean   somCastObj(SOMClass* cls)
{
   return SOM_ResolveD(this,M_WPSound,SOMObject,somCastObj)
	(this,cls);
}


/* method: somResetObj */
boolean   somResetObj()
{
   return SOM_ResolveD(this,M_WPSound,SOMObject,somResetObj)
	(this);
}


/* va_list method: somDispatchV */
/* the va_list invocation form */
void   M_WPSound_somDispatchV(somId methodId,
		somId descriptor,
		va_list ap)
{
   SOM_ResolveD(this,M_WPSound,SOMObject,somDispatchV)
	(this,methodId,descriptor,ap);
}

/* the varargs invocation form */
void   somDispatchV(somId methodId,
		somId descriptor,
		...)
{
   va_list ap;
   va_start(ap, descriptor);
   SOM_ResolveD(this,M_WPSound,SOMObject,somDispatchV)
	(this,methodId,descriptor,ap);
   va_end(ap);
}


/* va_list method: somDispatchL */
/* the va_list invocation form */
long   M_WPSound_somDispatchL(somId methodId,
		somId descriptor,
		va_list ap)
{
return SOM_ResolveD(this,M_WPSound,SOMObject,somDispatchL)
	(this,methodId,descriptor,ap);
}

/* the varargs invocation form */
long   somDispatchL(somId methodId,
		somId descriptor,
		...)
{
   va_list ap;
   va_start(ap, descriptor);
   long __somResult = 
      SOM_ResolveD(this,M_WPSound,SOMObject,somDispatchL)
	(this,methodId,descriptor,ap);
   va_end(ap);
   return __somResult;
}


/* va_list method: somDispatchA */
/* the va_list invocation form */
void*   M_WPSound_somDispatchA(somId methodId,
		somId descriptor,
		va_list ap)
{
return SOM_ResolveD(this,M_WPSound,SOMObject,somDispatchA)
	(this,methodId,descriptor,ap);
}

/* the varargs invocation form */
void*   somDispatchA(somId methodId,
		somId descriptor,
		...)
{
   va_list ap;
   va_start(ap, descriptor);
   void* __somResult = 
      SOM_ResolveD(this,M_WPSound,SOMObject,somDispatchA)
	(this,methodId,descriptor,ap);
   va_end(ap);
   return __somResult;
}


/* va_list method: somDispatchD */
/* the va_list invocation form */
double   M_WPSound_somDispatchD(somId methodId,
		somId descriptor,
		va_list ap)
{
return SOM_ResolveD(this,M_WPSound,SOMObject,somDispatchD)
	(this,methodId,descriptor,ap);
}

/* the varargs invocation form */
double   somDispatchD(somId methodId,
		somId descriptor,
		...)
{
   va_list ap;
   va_start(ap, descriptor);
   double __somResult = 
      SOM_ResolveD(this,M_WPSound,SOMObject,somDispatchD)
	(this,methodId,descriptor,ap);
   va_end(ap);
   return __somResult;
}


/* method: somPrintSelf */
SOMObject*   somPrintSelf()
{
   return SOM_ResolveD(this,M_WPSound,SOMObject,somPrintSelf)
	(this);
}


/* method: somDumpSelf */
void   somDumpSelf(long level)
{
   SOM_ResolveD(this,M_WPSound,SOMObject,somDumpSelf)
	(this,level);
}


/* method: somDumpSelfInt */
void   somDumpSelfInt(long level)
{
   SOM_ResolveD(this,M_WPSound,SOMObject,somDumpSelfInt)
	(this,level);
}



};   /* M_WPSound */



#endif       /* SOM_M_WPSound_xh */
