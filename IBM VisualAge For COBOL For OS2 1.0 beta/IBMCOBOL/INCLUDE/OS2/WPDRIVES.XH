
/*
 * This file was generated by the SOM Compiler.
 * FileName: wpdrives.xh.
 * Generated using:
 *     SOM Precompiler somipc: 2.29.1.2
 *     SOM Emitter emitxh: 2.41
 */

/*
 *   Module Header
 * 
 *   Module Name: WPDRIVES
 * 
 *   OS/2 Presentation Manager Workplace class definitions
 * 
 *   Copyright (c) International Business Machines Corporation 1991, 1992
 * 
 */


#ifndef SOM_WPDrives_xh
#define SOM_WPDrives_xh

class WPDrives;

#define WPDrives_MajorVersion 1
#define WPDrives_MinorVersion 2

/* C++ SOM defs */
#include <somcls.xh>
#include <somcm.xh>

/* C++ parent defs */
#ifndef SOM_WPFolder_xh
#include <wpfolder.xh>
#endif

#ifndef WPDrives_API
#define WPDrives_API
/*
 * -- The Class API
 */

/*
 * Start of user-defined types:
 */
class SOMClass;
class SOMObject;
class WPFolder;
class M_WPObject;
class WPObject;
class M_WPFileSystem;
class M_WPFolder;
class M_WPDrives;

/*
 * End of user-defined types.
 */

/* A procedure to create the WPDrives Class */
class M_WPDrives;
SOMEXTERN M_WPDrives * SOMLINK WPDrivesNewClass(
		integer4 majorVersion,
		integer4 minorVersion);

/* The API to the WPDrives class object, and the methods it introduces. */
SOMEXTERN struct WPDrivesClassDataStructure {
	M_WPDrives *classObject;
} SOMDLINK WPDrivesClassData;
#define _WPDrives WPDrivesClassData.classObject

/* The API to parentMtabs for WPDrives, and the instance data it introduces. */
SOMEXTERN struct WPDrivesCClassDataStructure {
	somMethodTabs parentMtab;
	somDToken              instanceDataToken;
} SOMDLINK WPDrivesCClassData;

/*
 * -- Typedefs for WPDrives Method Procedures
 */
SOMEXTERN {

/*
 * -- Typedefs for Reintroduced Wrapper Methods
 */
typedef BOOL   (SOMLINK * somTD_WPDrives_wpSetFldrFlags)(WPDrives *somSelf,
		ULONG ulFlags);
typedef ULONG   (SOMLINK * somTD_WPDrives_wpQueryFldrFlags)(WPDrives *somSelf);
typedef BOOL   (SOMLINK * somTD_WPDrives_wpSetFldrFont)(WPDrives *somSelf,
		PSZ pszFont,
		ULONG ulView);
typedef PSZ   (SOMLINK * somTD_WPDrives_wpQueryFldrFont)(WPDrives *somSelf,
		ULONG ulView);
typedef BOOL   (SOMLINK * somTD_WPDrives_wpSetFldrAttr)(WPDrives *somSelf,
		ULONG Attr,
		ULONG ulView);
typedef ULONG   (SOMLINK * somTD_WPDrives_wpQueryFldrAttr)(WPDrives *somSelf,
		ULONG ulView);
typedef BOOL   (SOMLINK * somTD_WPDrives_wpSetNextIconPos)(WPDrives *somSelf,
		PPOINTL pptl);
typedef PPOINTL   (SOMLINK * somTD_WPDrives_wpQueryNextIconPos)(WPDrives *somSelf);
typedef BOOL   (SOMLINK * somTD_WPDrives_wpPopulate)(WPDrives *somSelf,
		ULONG ulReserved,
		PSZ pszPath,
		BOOL fFoldersOnly);
typedef WPObject*   (SOMLINK * somTD_WPDrives_wpQueryContent)(WPDrives *somSelf,
		WPObject* Object,
		ULONG ulOption);
typedef ULONG   (SOMLINK * somTD_WPDrives_wpAddFolderView1Page)(WPDrives *somSelf,
		HWND hwndNotebook);
typedef ULONG   (SOMLINK * somTD_WPDrives_wpAddFolderView2Page)(WPDrives *somSelf,
		HWND hwndNotebook);
typedef ULONG   (SOMLINK * somTD_WPDrives_wpAddFolderView3Page)(WPDrives *somSelf,
		HWND hwndNotebook);
typedef ULONG   (SOMLINK * somTD_WPDrives_wpAddFolderIncludePage)(WPDrives *somSelf,
		HWND hwndNotebook);
typedef ULONG   (SOMLINK * somTD_WPDrives_wpAddFolderSortPage)(WPDrives *somSelf,
		HWND hwndNotebook);
typedef ULONG   (SOMLINK * somTD_WPDrives_wpAddFolderBackgroundPage)(WPDrives *somSelf,
		HWND hwndNotebook);
typedef ULONG   (SOMLINK * somTD_WPDrives_wpAddFolderSelfClosePage)(WPDrives *somSelf,
		HWND hwndNotebook);
typedef BOOL   (SOMLINK * somTD_WPDrives_wpInitIconPosData)(WPDrives *somSelf);
typedef void   (SOMLINK * somTD_WPDrives_wpFreeIconPosData)(WPDrives *somSelf);
typedef BOOL   (SOMLINK * somTD_WPDrives_wpStoreIconPosData)(WPDrives *somSelf,
		PICONPOS pIconPos,
		ULONG cbSize);
typedef BOOL   (SOMLINK * somTD_WPDrives_wpQueryIconPosition)(WPDrives *somSelf,
		PSZ pszIdentity,
		PPOINTL pptl,
		PULONG pIndex);
typedef BOOL   (SOMLINK * somTD_WPDrives_wpSetFldrSort)(WPDrives *somSelf,
		PVOID pSortRecord,
		ULONG ulView,
		ULONG ulType);
typedef PVOID   (SOMLINK * somTD_WPDrives_wpQueryFldrSort)(WPDrives *somSelf,
		ULONG ulView,
		ULONG ulType);
typedef BOOL   (SOMLINK * somTD_WPDrives_wpRestoreFldrRunObjs)(WPDrives *somSelf);
typedef BOOL   (SOMLINK * somTD_WPDrives_wpStoreFldrRunObjs)(WPDrives *somSelf,
		ULONG ulType);
typedef BOOL   (SOMLINK * somTD_WPDrives_wpHideFldrRunObjs)(WPDrives *somSelf,
		BOOL fHide);
typedef ULONG   (SOMLINK * somTD_WPDrives_wpDeleteContents)(WPDrives *somSelf,
		ULONG fConfirmations);
typedef BOOL   (SOMLINK * somTD_WPDrives_wpSetFldrDetailsClass)(WPDrives *somSelf,
		M_WPObject* Class);
typedef M_WPObject*   (SOMLINK * somTD_WPDrives_wpQueryFldrDetailsClass)(WPDrives *somSelf);
typedef BOOL   (SOMLINK * somTD_WPDrives_wpSearchFolder)(WPDrives *somSelf,
		PSZ pszName,
		ULONG ulSearchType,
		ULONG ulLen,
		PSEARCH_INFO pInfo,
		WPFolder* ResultFolder);
typedef BOOL   (SOMLINK * somTD_WPDrives_wpContainsFolders)(WPDrives *somSelf,
		BOOL* pfSubFolders);
typedef WPObject*   (SOMLINK * somTD_WPDrives_wpQueryOpenFolders)(WPDrives *somSelf,
		ULONG ulOption);
typedef BOOL   (SOMLINK * somTD_WPDrives_wpModifyFldrFlags)(WPDrives *somSelf,
		ULONG ulFlags,
		ULONG ulFlagMask);
typedef BOOL   (SOMLINK * somTD_WPDrives_wpAddToContent)(WPDrives *somSelf,
		WPObject* Object);
typedef BOOL   (SOMLINK * somTD_WPDrives_wpDeleteFromContent)(WPDrives *somSelf,
		WPObject* Object);
typedef BOOL   (SOMLINK * somTD_WPDrives_wpSetDetailsColumnVisibility)(WPDrives *somSelf,
		ULONG index,
		BOOL Visible);
typedef BOOL   (SOMLINK * somTD_WPDrives_wpIsDetailsColumnVisible)(WPDrives *somSelf,
		ULONG index);
typedef BOOL   (SOMLINK * somTD_WPDrives_wpSetFldrSortClass)(WPDrives *somSelf,
		M_WPObject* Class);
typedef M_WPObject*   (SOMLINK * somTD_WPDrives_wpQueryFldrSortClass)(WPDrives *somSelf);
typedef BOOL   (SOMLINK * somTD_WPDrives_wpSetSortAttribAvailable)(WPDrives *somSelf,
		ULONG index,
		BOOL Available);
typedef BOOL   (SOMLINK * somTD_WPDrives_wpIsSortAttribAvailable)(WPDrives *somSelf,
		ULONG index);
typedef char*   (SOMLINK * somTD_WPDrives_wpQueryIconViewPos)(WPDrives *somSelf);
typedef WPObject*   (SOMLINK * somTD_WPDrives_wpAddFirstChild)(WPDrives *somSelf);
typedef void   (SOMLINK * somTD_WPDrives_wpInitData)(WPDrives *somSelf);
typedef void   (SOMLINK * somTD_WPDrives_wpUnInitData)(WPDrives *somSelf);
typedef BOOL   (SOMLINK * somTD_WPDrives_wpFree)(WPDrives *somSelf);
typedef ULONG   (SOMLINK * somTD_WPDrives_wpDelete)(WPDrives *somSelf,
		ULONG fConfirmations);
typedef ULONG   (SOMLINK * somTD_WPDrives_wpConfirmDelete)(WPDrives *somSelf,
		ULONG fConfirmations);
typedef BOOL   (SOMLINK * somTD_WPDrives_wpSaveState)(WPDrives *somSelf);
typedef BOOL   (SOMLINK * somTD_WPDrives_wpRestoreState)(WPDrives *somSelf,
		ULONG ulReserved);
typedef BOOL   (SOMLINK * somTD_WPDrives_wpMenuItemSelected)(WPDrives *somSelf,
		HWND hwndFrame,
		ULONG ulMenuId);
typedef BOOL   (SOMLINK * somTD_WPDrives_wpModifyPopupMenu)(WPDrives *somSelf,
		HWND hwndMenu,
		HWND hwndCnr,
		ULONG iPosition);
typedef BOOL   (SOMLINK * somTD_WPDrives_wpAddSettingsPages)(WPDrives *somSelf,
		HWND hwndNotebook);
typedef HWND   (SOMLINK * somTD_WPDrives_wpOpen)(WPDrives *somSelf,
		HWND hwndCnr,
		ULONG ulView,
		ULONG param);
typedef BOOL   (SOMLINK * somTD_WPDrives_wpSetup)(WPDrives *somSelf,
		PSZ pszSetupString);
typedef BOOL   (SOMLINK * somTD_WPDrives_wpMoveObject)(WPDrives *somSelf,
		WPFolder* Folder);
typedef MRESULT   (SOMLINK * somTD_WPDrives_wpDrop)(WPDrives *somSelf,
		HWND hwndCnr,
		PDRAGINFO pdrgInfo,
		PDRAGITEM pdrgItem);
typedef MRESULT   (SOMLINK * somTD_WPDrives_wpDragOver)(WPDrives *somSelf,
		HWND hwndCnr,
		PDRAGINFO pdrgInfo);
typedef BOOL   (SOMLINK * somTD_WPDrives_wpMenuItemHelpSelected)(WPDrives *somSelf,
		ULONG MenuId);
typedef ULONG   (SOMLINK * somTD_WPDrives_wpAddFile3Page)(WPDrives *somSelf,
		HWND hwndNotebook);
typedef ULONG   (SOMLINK * somTD_WPDrives_wpAddFile2Page)(WPDrives *somSelf,
		HWND hwndNotebook);
typedef BOOL   (SOMLINK * somTD_WPDrives_wpFormatDragItem)(WPDrives *somSelf,
		PDRAGITEM pdrgItem);
typedef MRESULT   (SOMLINK * somTD_WPDrives_wpRender)(WPDrives *somSelf,
		PDRAGTRANSFER pdxfer);
typedef BOOL   (SOMLINK * somTD_WPDrives_wpRefresh)(WPDrives *somSelf,
		ULONG ulView,
		PVOID pReserved);
typedef ULONG   (SOMLINK * somTD_WPDrives_wpFilterPopupMenu)(WPDrives *somSelf,
		ULONG ulFlags,
		HWND hwndCnr,
		BOOL fMultiSelect);
typedef ULONG   (SOMLINK * somTD_WPDrives_wpQueryDefaultView)(WPDrives *somSelf);
typedef MRESULT   (SOMLINK * somTD_WPDrives_wpRenderComplete)(WPDrives *somSelf,
		PDRAGTRANSFER pdxfer,
		ULONG ulResult);
typedef BOOL   (SOMLINK * somTD_WPDrives_wpQueryDefaultHelp)(WPDrives *somSelf,
		PULONG pHelpPanelId,
		PSZ HelpLibrary);
typedef void   (SOMLINK * somTD_WPDrives_wpObjectReady)(WPDrives *somSelf,
		ULONG ulCode,
		WPObject* refObject);
typedef ULONG   (SOMLINK * somTD_WPDrives_wpAddObjectWindowPage)(WPDrives *somSelf,
		HWND hwndNotebook);
typedef void   (SOMLINK * somTD_WPDrives_somDefaultInit)(WPDrives *somSelf,
		somInitCtrl* ctrl);
typedef void   (SOMLINK * somTD_WPDrives_somDestruct)(WPDrives *somSelf,
		octet doFree,
		somDestructCtrl* ctrl);
typedef BOOL   (SOMLINK * somTD_WPDrives_wpSetIconData)(WPDrives *somSelf,
		PICONINFO pIconInfo);
typedef BOOL   (SOMLINK * somTD_WPDrives_wpSetRealName)(WPDrives *somSelf,
		PSZ pszName);
typedef BOOL   (SOMLINK * somTD_WPDrives_wpSetType)(WPDrives *somSelf,
		PSZ pszTypes,
		PFEA2LIST pfeal);
typedef PSZ   (SOMLINK * somTD_WPDrives_wpQueryType)(WPDrives *somSelf);
typedef BOOL   (SOMLINK * somTD_WPDrives_wpSetAttr)(WPDrives *somSelf,
		ULONG attrFile);
typedef ULONG   (SOMLINK * somTD_WPDrives_wpQueryAttr)(WPDrives *somSelf);
typedef ULONG   (SOMLINK * somTD_WPDrives_wpAddFile1Page)(WPDrives *somSelf,
		HWND hwndNotebook);
typedef ULONG   (SOMLINK * somTD_WPDrives_wpAddFileMenuPage)(WPDrives *somSelf,
		HWND hwndNotebook);
typedef ULONG   (SOMLINK * somTD_WPDrives_wpQueryCreation)(WPDrives *somSelf,
		FDATE* fdate,
		FTIME* ftime);
typedef ULONG   (SOMLINK * somTD_WPDrives_wpQueryLastAccess)(WPDrives *somSelf,
		FDATE* fdate,
		FTIME* ftime);
typedef ULONG   (SOMLINK * somTD_WPDrives_wpQueryLastWrite)(WPDrives *somSelf,
		FDATE* fdate,
		FTIME* ftime);
typedef ULONG   (SOMLINK * somTD_WPDrives_wpQueryFileSize)(WPDrives *somSelf);
typedef ULONG   (SOMLINK * somTD_WPDrives_wpQueryEASize)(WPDrives *somSelf);
typedef ULONG   (SOMLINK * somTD_WPDrives_wpSetDateInfo)(WPDrives *somSelf,
		FILEFINDBUF4* pstFileFindBuf);
typedef ULONG   (SOMLINK * somTD_WPDrives_wpSetFileSizeInfo)(WPDrives *somSelf,
		ULONG cbFileSize,
		ULONG cbEASize);
typedef ULONG   (SOMLINK * somTD_WPDrives_wpQueryRefreshFlags)(WPDrives *somSelf);
typedef BOOL   (SOMLINK * somTD_WPDrives_wpSetRefreshFlags)(WPDrives *somSelf,
		ULONG ulRefreshFlags);
typedef BOOL   (SOMLINK * somTD_WPDrives_wpPrintPlainTextFile)(WPDrives *somSelf,
		PPRINTDEST pPrintDest);
typedef BOOL   (SOMLINK * somTD_WPDrives_wpSetTitleAndRenameFile)(WPDrives *somSelf,
		PSZ pszNewTitle,
		ULONG fConfirmations);
typedef ULONG   (SOMLINK * somTD_WPDrives_wpConfirmRenameFileWithExt)(WPDrives *somSelf);
typedef ULONG   (SOMLINK * somTD_WPDrives_wpVerifyUpdateAccess)(WPDrives *somSelf);
typedef BOOL   (SOMLINK * somTD_WPDrives_wpAddUserItemsToPopupMenu)(WPDrives *somSelf,
		HWND hwndMenu,
		HWND hwndCnr,
		ULONG iPosition);
typedef BOOL   (SOMLINK * somTD_WPDrives_wpIsDiskSwapped)(WPDrives *somSelf);
typedef BOOL   (SOMLINK * somTD_WPDrives_wpQueryRealName)(WPDrives *somSelf,
		PSZ pszFilename,
		PULONG pcb,
		BOOL fQualified);
typedef PSZ   (SOMLINK * somTD_WPDrives_wpQueryFilename)(WPDrives *somSelf,
		PSZ pszFilename,
		BOOL fQualified);
typedef WPFileSystem*   (SOMLINK * somTD_WPDrives_wpQueryDisk)(WPDrives *somSelf);
typedef ULONG   (SOMLINK * somTD_WPDrives_wpQueryDateInfo)(WPDrives *somSelf,
		FILEFINDBUF4* pstFileFindBuf);
typedef ULONG   (SOMLINK * somTD_WPDrives_wpConfirmKeepAssoc)(WPDrives *somSelf);
typedef HOBJECT   (SOMLINK * somTD_WPDrives_wpQueryHandle)(WPDrives *somSelf);
typedef BOOL   (SOMLINK * somTD_WPDrives_wpSaveImmediate)(WPDrives *somSelf);
typedef BOOL   (SOMLINK * somTD_WPDrives_wpSetTitle)(WPDrives *somSelf,
		PSZ pszNewTitle);
typedef HWND   (SOMLINK * somTD_WPDrives_wpViewObject)(WPDrives *somSelf,
		HWND hwndCnr,
		ULONG ulView,
		ULONG param);
typedef BOOL   (SOMLINK * somTD_WPDrives_wpSwitchTo)(WPDrives *somSelf,
		ULONG View);
typedef WPObject*   (SOMLINK * somTD_WPDrives_wpCopyObject)(WPDrives *somSelf,
		WPFolder* Folder,
		BOOL fLock);
typedef WPObject*   (SOMLINK * somTD_WPDrives_wpCreateFromTemplate)(WPDrives *somSelf,
		WPFolder* folder,
		BOOL fLock);
typedef HPOINTER   (SOMLINK * somTD_WPDrives_wpQueryIcon)(WPDrives *somSelf);
typedef ULONG   (SOMLINK * somTD_WPDrives_wpQueryIconData)(WPDrives *somSelf,
		PICONINFO pIconInfo);
typedef ULONG   (SOMLINK * somTD_WPDrives_wpQueryDetailsData)(WPDrives *somSelf,
		PVOID* ppDetailsData,
		PULONG pcp);
typedef MRESULT   (SOMLINK * somTD_WPDrives_wpDraggedOverObject)(WPDrives *somSelf,
		WPObject* DraggedOverObject);
typedef BOOL   (SOMLINK * somTD_WPDrives_wpDroppedOnObject)(WPDrives *somSelf,
		WPObject* DroppedOnObject);
typedef ULONG   (SOMLINK * somTD_WPDrives_wpQueryNameClashOptions)(WPDrives *somSelf,
		ULONG menuID);
typedef BOOL32   (SOMLINK * somTD_WPDrives_wpAppendObject)(WPDrives *somSelf,
		WPObject* targetObject,
		BOOL32 fMove);
typedef BOOL32   (SOMLINK * somTD_WPDrives_wpReplaceObject)(WPDrives *somSelf,
		WPObject* targetObject,
		BOOL32 fMove);
typedef ULONG   (SOMLINK * somTD_WPDrives_wpQueryStyle)(WPDrives *somSelf);
typedef BOOL   (SOMLINK * somTD_WPDrives_wpSetStyle)(WPDrives *somSelf,
		ULONG ulNewStyle);
typedef BOOL   (SOMLINK * somTD_WPDrives_wpDoesObjectMatch)(WPDrives *somSelf,
		PVOID pvoidExtendedCriteria);
typedef ULONG   (SOMLINK * somTD_WPDrives_wpAddObjectGeneralPage)(WPDrives *somSelf,
		HWND hwndNotebook);
typedef ULONG   (SOMLINK * somTD_WPDrives_wpAddObjectGeneralPage2)(WPDrives *somSelf,
		HWND hwndNotebook);
typedef BOOL   (SOMLINK * somTD_WPDrives_wpAddToObjUseList)(WPDrives *somSelf,
		PUSEITEM pUseItem);
typedef PBYTE   (SOMLINK * somTD_WPDrives_wpAllocMem)(WPDrives *somSelf,
		ULONG cbBytes,
		PULONG prc);
typedef BOOL   (SOMLINK * somTD_WPDrives_wpAssertObjectMutexSem)(WPDrives *somSelf);
typedef BOOL   (SOMLINK * somTD_WPDrives_wpClose)(WPDrives *somSelf);
typedef PMINIRECORDCORE   (SOMLINK * somTD_WPDrives_wpCnrInsertObject)(WPDrives *somSelf,
		HWND hwndCnr,
		PPOINTL pptlIcon,
		PMINIRECORDCORE preccParent,
		PRECORDINSERT pRecInsert);
typedef BOOL   (SOMLINK * somTD_WPDrives_wpCnrRemoveObject)(WPDrives *somSelf,
		HWND hwndCnr);
typedef BOOL   (SOMLINK * somTD_WPDrives_wpCnrSetEmphasis)(WPDrives *somSelf,
		ULONG ulEmphasisAttr,
		BOOL fTurnOn);
typedef ULONG   (SOMLINK * somTD_WPDrives_wpConfirmObjectTitle)(WPDrives *somSelf,
		WPFolder* Folder,
		WPObject** ppDuplicate,
		PSZ pszTitle,
		ULONG cbTitle,
		ULONG menuID);
typedef void   (SOMLINK * somTD_WPDrives_wpCopiedFromTemplate)(WPDrives *somSelf);
typedef WPObject*   (SOMLINK * somTD_WPDrives_wpCreateAnother)(WPDrives *somSelf,
		PSZ pszTitle,
		PSZ pszSetupEnv,
		WPFolder* Folder);
typedef WPObject*   (SOMLINK * somTD_WPDrives_wpCreateShadowObject)(WPDrives *somSelf,
		WPFolder* Folder,
		BOOL fLock);
typedef BOOL   (SOMLINK * somTD_WPDrives_wpDeleteFromObjUseList)(WPDrives *somSelf,
		PUSEITEM pUseItem);
typedef BOOL   (SOMLINK * somTD_WPDrives_wpDisplayHelp)(WPDrives *somSelf,
		ULONG HelpPanelId,
		PSZ HelpLibrary);
typedef HWND   (SOMLINK * somTD_WPDrives_wpDisplayMenu)(WPDrives *somSelf,
		HWND hwndOwner,
		HWND hwndClient,
		POINTL* ptlPopupPt,
		ULONG ulMenuType,
		ULONG ulReserved);
typedef MRESULT   (SOMLINK * somTD_WPDrives_wpEndConversation)(WPDrives *somSelf,
		ULONG ulItemID,
		ULONG flResult);
typedef PUSEITEM   (SOMLINK * somTD_WPDrives_wpFindUseItem)(WPDrives *somSelf,
		ULONG type,
		PUSEITEM pCurrentItem);
typedef BOOL   (SOMLINK * somTD_WPDrives_wpFreeMem)(WPDrives *somSelf,
		PBYTE pByte);
typedef BOOL   (SOMLINK * somTD_WPDrives_wpHide)(WPDrives *somSelf);
typedef BOOL   (SOMLINK * somTD_WPDrives_wpInsertPopupMenuItems)(WPDrives *somSelf,
		HWND hwndMenu,
		ULONG iPosition,
		HMODULE hmod,
		ULONG MenuID,
		ULONG SubMenuID);
typedef ULONG   (SOMLINK * somTD_WPDrives_wpInsertSettingsPage)(WPDrives *somSelf,
		HWND hwndNotebook,
		PPAGEINFO ppageinfo);
typedef BOOL   (SOMLINK * somTD_WPDrives_wpPrintObject)(WPDrives *somSelf,
		PPRINTDEST pPrintDest,
		ULONG ulReserved);
typedef ULONG   (SOMLINK * somTD_WPDrives_wpQueryConcurrentView)(WPDrives *somSelf);
typedef ULONG   (SOMLINK * somTD_WPDrives_wpQueryButtonAppearance)(WPDrives *somSelf);
typedef ULONG   (SOMLINK * somTD_WPDrives_wpQueryConfirmations)(WPDrives *somSelf);
typedef ULONG   (SOMLINK * somTD_WPDrives_wpQueryError)(WPDrives *somSelf);
typedef BOOL   (SOMLINK * somTD_WPDrives_wpSetFolder)(WPDrives *somSelf,
		WPObject* container);
typedef WPObject*   (SOMLINK * somTD_WPDrives_wpQueryFolder)(WPDrives *somSelf);
typedef ULONG   (SOMLINK * somTD_WPDrives_wpQueryMinWindow)(WPDrives *somSelf);
typedef BOOL32   (SOMLINK * somTD_WPDrives_wpSetTaskRec)(WPDrives *somSelf,
		PTASKREC pNew,
		PTASKREC pOld);
typedef PTASKREC   (SOMLINK * somTD_WPDrives_wpFindTaskRec)(WPDrives *somSelf);
typedef PSZ   (SOMLINK * somTD_WPDrives_wpQueryTitle)(WPDrives *somSelf);
typedef BOOL   (SOMLINK * somTD_WPDrives_wpRegisterView)(WPDrives *somSelf,
		HWND hwndFrame,
		PSZ pszViewTitle);
typedef ULONG   (SOMLINK * somTD_WPDrives_wpReleaseObjectMutexSem)(WPDrives *somSelf);
typedef ULONG   (SOMLINK * somTD_WPDrives_wpRequestObjectMutexSem)(WPDrives *somSelf,
		ULONG ulTimeout);
typedef BOOL   (SOMLINK * somTD_WPDrives_wpRestore)(WPDrives *somSelf);
typedef BOOL   (SOMLINK * somTD_WPDrives_wpRestoreData)(WPDrives *somSelf,
		PSZ pszClass,
		ULONG ulKey,
		PBYTE pValue,
		PULONG pcbValue);
typedef BOOL   (SOMLINK * somTD_WPDrives_wpRestoreLong)(WPDrives *somSelf,
		PSZ pszClass,
		ULONG ulKey,
		PULONG pulValue);
typedef BOOL   (SOMLINK * somTD_WPDrives_wpRestoreString)(WPDrives *somSelf,
		PSZ pszClass,
		ULONG ulKey,
		PSZ pszValue,
		PULONG pcbValue);
typedef BOOL   (SOMLINK * somTD_WPDrives_wpSaveData)(WPDrives *somSelf,
		PSZ pszClass,
		ULONG ulKey,
		PBYTE pValue,
		ULONG cbValue);
typedef BOOL   (SOMLINK * somTD_WPDrives_wpSaveDeferred)(WPDrives *somSelf);
typedef BOOL   (SOMLINK * somTD_WPDrives_wpSaveLong)(WPDrives *somSelf,
		PSZ pszClass,
		ULONG ulKey,
		ULONG ulValue);
typedef BOOL   (SOMLINK * somTD_WPDrives_wpSaveString)(WPDrives *somSelf,
		PSZ pszClass,
		ULONG ulKey,
		PSZ pszValue);
typedef BOOL   (SOMLINK * somTD_WPDrives_wpScanSetupString)(WPDrives *somSelf,
		PSZ pszSetupString,
		PSZ pszKey,
		PSZ pszValue,
		PULONG pcbValue);
typedef void   (SOMLINK * somTD_WPDrives_wpSetConcurrentView)(WPDrives *somSelf,
		ULONG ulCCView);
typedef void   (SOMLINK * somTD_WPDrives_wpSetButtonAppearance)(WPDrives *somSelf,
		ULONG ulButtonType);
typedef BOOL   (SOMLINK * somTD_WPDrives_wpSetDefaultHelp)(WPDrives *somSelf,
		ULONG HelpPanelId,
		PSZ HelpLibrary);
typedef BOOL   (SOMLINK * somTD_WPDrives_wpSetDefaultView)(WPDrives *somSelf,
		ULONG ulView);
typedef BOOL   (SOMLINK * somTD_WPDrives_wpSetError)(WPDrives *somSelf,
		ULONG ulErrorId);
typedef BOOL   (SOMLINK * somTD_WPDrives_wpSetIconHandle)(WPDrives *somSelf,
		HPOINTER hptrNewIcon);
typedef USHORT   (SOMLINK * somTD_WPDrives_wpQueryScreenGroupID)(WPDrives *somSelf,
		USHORT usPrevSgId);
typedef BOOL   (SOMLINK * somTD_WPDrives_wpSetupOnce)(WPDrives *somSelf,
		PSZ pszSetupString);
typedef BOOL   (SOMLINK * somTD_WPDrives_wpSetIcon)(WPDrives *somSelf,
		HPOINTER hptrNewIcon);
typedef void   (SOMLINK * somTD_WPDrives_wpSetMinWindow)(WPDrives *somSelf,
		ULONG ulMinWindow);
typedef BOOL   (SOMLINK * somTD_WPDrives_wpModifyStyle)(WPDrives *somSelf,
		ULONG ulStyleFlags,
		ULONG ulStyleMask);
typedef ULONG   (SOMLINK * somTD_WPDrives_wpQueryTrueStyle)(WPDrives *somSelf);
typedef BOOL   (SOMLINK * somTD_WPDrives_wpUnlockObject)(WPDrives *somSelf);
typedef BOOL   (SOMLINK * somTD_WPDrives_wpIsObjectInitialized)(WPDrives *somSelf);
typedef WPObject*   (SOMLINK * somTD_WPDrives_wpCreateShadowObjectExt)(WPDrives *somSelf,
		WPFolder* Folder,
		BOOL fLock,
		PSZ pszSetup,
		M_WPObject* shadowClass);
typedef BOOL   (SOMLINK * somTD_WPDrives_wpCnrDeleteUseItem)(WPDrives *somSelf,
		HWND hwndCnr);
typedef BOOL   (SOMLINK * somTD_WPDrives_wpIsDeleteable)(WPDrives *somSelf);
typedef PMINIRECORDCORE   (SOMLINK * somTD_WPDrives_wpQueryCoreRecord)(WPDrives *somSelf);
typedef BOOL   (SOMLINK * somTD_WPDrives_wpSetObjectID)(WPDrives *somSelf,
		PSZ pszObjectID);
typedef PSZ   (SOMLINK * somTD_WPDrives_wpQueryObjectID)(WPDrives *somSelf);
typedef BOOL   (SOMLINK * somTD_WPDrives_wpSetDefaultIconPos)(WPDrives *somSelf,
		PPOINTL pPointl);
typedef BOOL   (SOMLINK * somTD_WPDrives_wpQueryDefaultIconPos)(WPDrives *somSelf,
		PPOINTL pPointl);
typedef void   (SOMLINK * somTD_WPDrives_wpCnrRefreshDetails)(WPDrives *somSelf);
typedef PVIEWITEM   (SOMLINK * somTD_WPDrives_wpFindViewItem)(WPDrives *somSelf,
		ULONG flViews,
		PVIEWITEM pCurrentItem);
typedef void   (SOMLINK * somTD_WPDrives_wpLockObject)(WPDrives *somSelf);
typedef BOOL   (SOMLINK * somTD_WPDrives_wpIsLocked)(WPDrives *somSelf);
typedef PULONG   (SOMLINK * somTD_WPDrives_wpQueryContainerFlagPtr)(WPDrives *somSelf);
typedef ULONG   (SOMLINK * somTD_WPDrives_wpWaitForClose)(WPDrives *somSelf,
		LHANDLE lhView,
		ULONG ulViews,
		long lTimeOut,
		BOOL bAutoClose);
typedef void   (SOMLINK * somTD_WPDrives_somInit)(WPDrives *somSelf);
typedef void   (SOMLINK * somTD_WPDrives_somUninit)(WPDrives *somSelf);
typedef void   (SOMLINK * somTD_WPDrives_somDefaultCopyInit)(WPDrives *somSelf,
		somInitCtrl* ctrl,
		SOMObject* fromObj);
typedef WPDrives*   (SOMLINK * somTD_WPDrives_somDefaultAssign)(WPDrives *somSelf,
		somAssignCtrl* ctrl,
		SOMObject* fromObj);
typedef void   (SOMLINK * somTD_WPDrives_somDefaultConstCopyInit)(WPDrives *somSelf,
		somInitCtrl* ctrl,
		SOMObject* fromObj);
typedef void   (SOMLINK * somTD_WPDrives_somDefaultVCopyInit)(WPDrives *somSelf,
		somInitCtrl* ctrl,
		SOMObject* fromObj);
typedef void   (SOMLINK * somTD_WPDrives_somDefaultConstVCopyInit)(WPDrives *somSelf,
		somInitCtrl* ctrl,
		SOMObject* fromObj);
typedef WPDrives*   (SOMLINK * somTD_WPDrives_somDefaultConstAssign)(WPDrives *somSelf,
		somAssignCtrl* ctrl,
		SOMObject* fromObj);
typedef WPDrives*   (SOMLINK * somTD_WPDrives_somDefaultVAssign)(WPDrives *somSelf,
		somAssignCtrl* ctrl,
		SOMObject* fromObj);
typedef WPDrives*   (SOMLINK * somTD_WPDrives_somDefaultConstVAssign)(WPDrives *somSelf,
		somAssignCtrl* ctrl,
		SOMObject* fromObj);
typedef void   (SOMLINK * somTD_WPDrives_somFree)(WPDrives *somSelf);
typedef M_WPDrives*   (SOMLINK * somTD_WPDrives_somGetClass)(WPDrives *somSelf);
typedef string   (SOMLINK * somTD_WPDrives_somGetClassName)(WPDrives *somSelf);
typedef long   (SOMLINK * somTD_WPDrives_somGetSize)(WPDrives *somSelf);
typedef boolean   (SOMLINK * somTD_WPDrives_somIsA)(WPDrives *somSelf,
		SOMClass* aClassObj);
typedef boolean   (SOMLINK * somTD_WPDrives_somIsInstanceOf)(WPDrives *somSelf,
		SOMClass* aClassObj);
typedef boolean   (SOMLINK * somTD_WPDrives_somRespondsTo)(WPDrives *somSelf,
		somId mId);
typedef boolean   (SOMLINK * somTD_WPDrives_somDispatch)(WPDrives *somSelf,
		somToken* retValue,
		somId methodId,
		va_list ap);
typedef boolean   (SOMLINK * somTD_WPDrives_somClassDispatch)(WPDrives *somSelf,
		SOMClass* clsObj,
		somToken* retValue,
		somId methodId,
		va_list ap);
typedef boolean   (SOMLINK * somTD_WPDrives_somCastObj)(WPDrives *somSelf,
		SOMClass* cls);
typedef boolean   (SOMLINK * somTD_WPDrives_somResetObj)(WPDrives *somSelf);
typedef void   (SOMLINK * somTD_WPDrives_somDispatchV)(WPDrives *somSelf,
		somId methodId,
		somId descriptor,
		va_list ap);
typedef long   (SOMLINK * somTD_WPDrives_somDispatchL)(WPDrives *somSelf,
		somId methodId,
		somId descriptor,
		va_list ap);
typedef void*   (SOMLINK * somTD_WPDrives_somDispatchA)(WPDrives *somSelf,
		somId methodId,
		somId descriptor,
		va_list ap);
typedef double   (SOMLINK * somTD_WPDrives_somDispatchD)(WPDrives *somSelf,
		somId methodId,
		somId descriptor,
		va_list ap);
typedef SOMObject*   (SOMLINK * somTD_WPDrives_somPrintSelf)(WPDrives *somSelf);
typedef void   (SOMLINK * somTD_WPDrives_somDumpSelf)(WPDrives *somSelf,
		long level);
typedef void   (SOMLINK * somTD_WPDrives_somDumpSelfInt)(WPDrives *somSelf,
		long level);
}

#endif /* WPDrives_API */


/*
 * -- This emitter treats Method Tokens as Thunks by default.
 * -- Use the sc modifier "nothunks" to change this default
 */
#undef somresolve_
#define somresolve_(obj,mToken) ((somMethodProc*)((void)obj, mToken))

/*
 * -- The C++ Wrapper Class for WPDrives
 */
class WPDrives : public WPFolder
{
public:

// WPDrives::new creates the class object if necessary, and then uses somNewNoInit
// to allocate memory and create the object. Initialization is in ctors.
void *operator new(size_t size)
{
   SOM_IgnoreWarning(size);
   if (!_WPDrives) WPDrivesNewClass(WPDrives_MajorVersion,WPDrives_MinorVersion);
   return (void*)
      SOM_Resolve(_WPDrives,SOMClass,somNewNoInit)
         ((SOMClass *)((void*)_WPDrives));
}

// WPDrives::delete uses the default deallocator for the object's class.
void operator delete(void * obj)
{
   somToken objCls = obj ? *(void**)obj : (somToken) NULL;
   if (somIsObj(objCls)) {
      SOM_Resolve(objCls,SOMClass,somDeallocate)
         ((SOMClass*)objCls, (string)obj);
   }
}

WPDrives()
{
   if (*(void**)this != 
       ((somParentMtabStructPtr)
        (WPDrivesCClassData.parentMtab))->mtab)
      return;
   somDefaultInit(0);
}

WPDrives(WPDrives* fromObj)
{
   if (*(void**)this != 
       ((somParentMtabStructPtr)
        (WPDrivesCClassData.parentMtab))->mtab)
      return;
   somDefaultCopyInit(0,((SOMObject*)((void*)fromObj)));
}

WPDrives(const WPDrives* fromObj)
{
   if (*(void**)this != 
       ((somParentMtabStructPtr)
        (WPDrivesCClassData.parentMtab))->mtab)
      return;
   somDefaultConstCopyInit(0,((SOMObject*)((void*)fromObj)));
}

~WPDrives()
{
   if (!somIsObj(this)) return;
   somDestruct(0,0);
   *(void**)this = **(void***)this;
}


/*
 * Reintroduce inherited methods
 */

/* method: wpSetFldrFlags */
BOOL   wpSetFldrFlags(ULONG ulFlags)
{
   return SOM_ResolveD(this,WPDrives,WPFolder,wpSetFldrFlags)
	(this,ulFlags);
}


/* method: wpQueryFldrFlags */
ULONG   wpQueryFldrFlags()
{
   return SOM_ResolveD(this,WPDrives,WPFolder,wpQueryFldrFlags)
	(this);
}


/* method: wpSetFldrFont */
BOOL   wpSetFldrFont(PSZ pszFont,
		ULONG ulView)
{
   return SOM_ResolveD(this,WPDrives,WPFolder,wpSetFldrFont)
	(this,pszFont,ulView);
}


/* method: wpQueryFldrFont */
PSZ   wpQueryFldrFont(ULONG ulView)
{
   return SOM_ResolveD(this,WPDrives,WPFolder,wpQueryFldrFont)
	(this,ulView);
}


/* method: wpSetFldrAttr */
BOOL   wpSetFldrAttr(ULONG Attr,
		ULONG ulView)
{
   return SOM_ResolveD(this,WPDrives,WPFolder,wpSetFldrAttr)
	(this,Attr,ulView);
}


/* method: wpQueryFldrAttr */
ULONG   wpQueryFldrAttr(ULONG ulView)
{
   return SOM_ResolveD(this,WPDrives,WPFolder,wpQueryFldrAttr)
	(this,ulView);
}


/* method: wpSetNextIconPos */
BOOL   wpSetNextIconPos(PPOINTL pptl)
{
   return SOM_ResolveD(this,WPDrives,WPFolder,wpSetNextIconPos)
	(this,pptl);
}


/* method: wpQueryNextIconPos */
PPOINTL   wpQueryNextIconPos()
{
   return SOM_ResolveD(this,WPDrives,WPFolder,wpQueryNextIconPos)
	(this);
}


/* method: wpPopulate */
BOOL   wpPopulate(ULONG ulReserved,
		PSZ pszPath,
		BOOL fFoldersOnly)
{
   return SOM_ResolveD(this,WPDrives,WPFolder,wpPopulate)
	(this,ulReserved,pszPath,fFoldersOnly);
}


/* method: wpQueryContent */
WPObject*   wpQueryContent(WPObject* Object,
		ULONG ulOption)
{
   return SOM_ResolveD(this,WPDrives,WPFolder,wpQueryContent)
	(this,Object,ulOption);
}


/* method: wpAddFolderView1Page */
ULONG   wpAddFolderView1Page(HWND hwndNotebook)
{
   return SOM_ResolveD(this,WPDrives,WPFolder,wpAddFolderView1Page)
	(this,hwndNotebook);
}


/* method: wpAddFolderView2Page */
ULONG   wpAddFolderView2Page(HWND hwndNotebook)
{
   return SOM_ResolveD(this,WPDrives,WPFolder,wpAddFolderView2Page)
	(this,hwndNotebook);
}


/* method: wpAddFolderView3Page */
ULONG   wpAddFolderView3Page(HWND hwndNotebook)
{
   return SOM_ResolveD(this,WPDrives,WPFolder,wpAddFolderView3Page)
	(this,hwndNotebook);
}


/* method: wpAddFolderIncludePage */
ULONG   wpAddFolderIncludePage(HWND hwndNotebook)
{
   return SOM_ResolveD(this,WPDrives,WPFolder,wpAddFolderIncludePage)
	(this,hwndNotebook);
}


/* method: wpAddFolderSortPage */
ULONG   wpAddFolderSortPage(HWND hwndNotebook)
{
   return SOM_ResolveD(this,WPDrives,WPFolder,wpAddFolderSortPage)
	(this,hwndNotebook);
}


/* method: wpAddFolderBackgroundPage */
ULONG   wpAddFolderBackgroundPage(HWND hwndNotebook)
{
   return SOM_ResolveD(this,WPDrives,WPFolder,wpAddFolderBackgroundPage)
	(this,hwndNotebook);
}


/* method: wpAddFolderSelfClosePage */
ULONG   wpAddFolderSelfClosePage(HWND hwndNotebook)
{
   return SOM_ResolveD(this,WPDrives,WPFolder,wpAddFolderSelfClosePage)
	(this,hwndNotebook);
}


/* method: wpInitIconPosData */
BOOL   wpInitIconPosData()
{
   return SOM_ResolveD(this,WPDrives,WPFolder,wpInitIconPosData)
	(this);
}


/* method: wpFreeIconPosData */
void   wpFreeIconPosData()
{
   SOM_ResolveD(this,WPDrives,WPFolder,wpFreeIconPosData)
	(this);
}


/* method: wpStoreIconPosData */
BOOL   wpStoreIconPosData(PICONPOS pIconPos,
		ULONG cbSize)
{
   return SOM_ResolveD(this,WPDrives,WPFolder,wpStoreIconPosData)
	(this,pIconPos,cbSize);
}


/* method: wpQueryIconPosition */
BOOL   wpQueryIconPosition(PSZ pszIdentity,
		PPOINTL pptl,
		PULONG pIndex)
{
   return SOM_ResolveD(this,WPDrives,WPFolder,wpQueryIconPosition)
	(this,pszIdentity,pptl,pIndex);
}


/* method: wpSetFldrSort */
BOOL   wpSetFldrSort(PVOID pSortRecord,
		ULONG ulView,
		ULONG ulType)
{
   return SOM_ResolveD(this,WPDrives,WPFolder,wpSetFldrSort)
	(this,pSortRecord,ulView,ulType);
}


/* method: wpQueryFldrSort */
PVOID   wpQueryFldrSort(ULONG ulView,
		ULONG ulType)
{
   return SOM_ResolveD(this,WPDrives,WPFolder,wpQueryFldrSort)
	(this,ulView,ulType);
}


/* method: wpRestoreFldrRunObjs */
BOOL   wpRestoreFldrRunObjs()
{
   return SOM_ResolveD(this,WPDrives,WPFolder,wpRestoreFldrRunObjs)
	(this);
}


/* method: wpStoreFldrRunObjs */
BOOL   wpStoreFldrRunObjs(ULONG ulType)
{
   return SOM_ResolveD(this,WPDrives,WPFolder,wpStoreFldrRunObjs)
	(this,ulType);
}


/* method: wpHideFldrRunObjs */
BOOL   wpHideFldrRunObjs(BOOL fHide)
{
   return SOM_ResolveD(this,WPDrives,WPFolder,wpHideFldrRunObjs)
	(this,fHide);
}


/* method: wpDeleteContents */
ULONG   wpDeleteContents(ULONG fConfirmations)
{
   return SOM_ResolveD(this,WPDrives,WPFolder,wpDeleteContents)
	(this,fConfirmations);
}


/* method: wpSetFldrDetailsClass */
BOOL   wpSetFldrDetailsClass(M_WPObject* Class)
{
   return SOM_ResolveD(this,WPDrives,WPFolder,wpSetFldrDetailsClass)
	(this,Class);
}


/* method: wpQueryFldrDetailsClass */
M_WPObject*   wpQueryFldrDetailsClass()
{
   return SOM_ResolveD(this,WPDrives,WPFolder,wpQueryFldrDetailsClass)
	(this);
}


/* method: wpSearchFolder */
BOOL   wpSearchFolder(PSZ pszName,
		ULONG ulSearchType,
		ULONG ulLen,
		PSEARCH_INFO pInfo,
		WPFolder* ResultFolder)
{
   return SOM_ResolveD(this,WPDrives,WPFolder,wpSearchFolder)
	(this,pszName,ulSearchType,ulLen,pInfo,ResultFolder);
}


/* method: wpContainsFolders */
BOOL   wpContainsFolders(BOOL* pfSubFolders)
{
   return SOM_ResolveD(this,WPDrives,WPFolder,wpContainsFolders)
	(this,pfSubFolders);
}


/* method: wpQueryOpenFolders */
WPObject*   wpQueryOpenFolders(ULONG ulOption)
{
   return SOM_ResolveD(this,WPDrives,WPFolder,wpQueryOpenFolders)
	(this,ulOption);
}


/* method: wpModifyFldrFlags */
BOOL   wpModifyFldrFlags(ULONG ulFlags,
		ULONG ulFlagMask)
{
   return SOM_ResolveD(this,WPDrives,WPFolder,wpModifyFldrFlags)
	(this,ulFlags,ulFlagMask);
}


/* method: wpAddToContent */
BOOL   wpAddToContent(WPObject* Object)
{
   return SOM_ResolveD(this,WPDrives,WPFolder,wpAddToContent)
	(this,Object);
}


/* method: wpDeleteFromContent */
BOOL   wpDeleteFromContent(WPObject* Object)
{
   return SOM_ResolveD(this,WPDrives,WPFolder,wpDeleteFromContent)
	(this,Object);
}


/* method: wpSetDetailsColumnVisibility */
BOOL   wpSetDetailsColumnVisibility(ULONG index,
		BOOL Visible)
{
   return SOM_ResolveD(this,WPDrives,WPFolder,wpSetDetailsColumnVisibility)
	(this,index,Visible);
}


/* method: wpIsDetailsColumnVisible */
BOOL   wpIsDetailsColumnVisible(ULONG index)
{
   return SOM_ResolveD(this,WPDrives,WPFolder,wpIsDetailsColumnVisible)
	(this,index);
}


/* method: wpSetFldrSortClass */
BOOL   wpSetFldrSortClass(M_WPObject* Class)
{
   return SOM_ResolveD(this,WPDrives,WPFolder,wpSetFldrSortClass)
	(this,Class);
}


/* method: wpQueryFldrSortClass */
M_WPObject*   wpQueryFldrSortClass()
{
   return SOM_ResolveD(this,WPDrives,WPFolder,wpQueryFldrSortClass)
	(this);
}


/* method: wpSetSortAttribAvailable */
BOOL   wpSetSortAttribAvailable(ULONG index,
		BOOL Available)
{
   return SOM_ResolveD(this,WPDrives,WPFolder,wpSetSortAttribAvailable)
	(this,index,Available);
}


/* method: wpIsSortAttribAvailable */
BOOL   wpIsSortAttribAvailable(ULONG index)
{
   return SOM_ResolveD(this,WPDrives,WPFolder,wpIsSortAttribAvailable)
	(this,index);
}


/* method: wpQueryIconViewPos */
char*   wpQueryIconViewPos()
{
   return SOM_ResolveD(this,WPDrives,WPFolder,wpQueryIconViewPos)
	(this);
}


/* method: wpAddFirstChild */
WPObject*   wpAddFirstChild()
{
   return SOM_ResolveD(this,WPDrives,WPFolder,wpAddFirstChild)
	(this);
}


/* method: wpInitData */
void   wpInitData()
{
   SOM_ResolveD(this,WPDrives,WPObject,wpInitData)
	(this);
}


/* method: wpUnInitData */
void   wpUnInitData()
{
   SOM_ResolveD(this,WPDrives,WPObject,wpUnInitData)
	(this);
}


/* method: wpFree */
BOOL   wpFree()
{
   return SOM_ResolveD(this,WPDrives,WPObject,wpFree)
	(this);
}


/* method: wpDelete */
ULONG   wpDelete(ULONG fConfirmations)
{
   return SOM_ResolveD(this,WPDrives,WPObject,wpDelete)
	(this,fConfirmations);
}


/* method: wpConfirmDelete */
ULONG   wpConfirmDelete(ULONG fConfirmations)
{
   return SOM_ResolveD(this,WPDrives,WPObject,wpConfirmDelete)
	(this,fConfirmations);
}


/* method: wpSaveState */
BOOL   wpSaveState()
{
   return SOM_ResolveD(this,WPDrives,WPObject,wpSaveState)
	(this);
}


/* method: wpRestoreState */
BOOL   wpRestoreState(ULONG ulReserved)
{
   return SOM_ResolveD(this,WPDrives,WPObject,wpRestoreState)
	(this,ulReserved);
}


/* method: wpMenuItemSelected */
BOOL   wpMenuItemSelected(HWND hwndFrame,
		ULONG ulMenuId)
{
   return SOM_ResolveD(this,WPDrives,WPObject,wpMenuItemSelected)
	(this,hwndFrame,ulMenuId);
}


/* method: wpModifyPopupMenu */
BOOL   wpModifyPopupMenu(HWND hwndMenu,
		HWND hwndCnr,
		ULONG iPosition)
{
   return SOM_ResolveD(this,WPDrives,WPObject,wpModifyPopupMenu)
	(this,hwndMenu,hwndCnr,iPosition);
}


/* method: wpAddSettingsPages */
BOOL   wpAddSettingsPages(HWND hwndNotebook)
{
   return SOM_ResolveD(this,WPDrives,WPObject,wpAddSettingsPages)
	(this,hwndNotebook);
}


/* method: wpOpen */
HWND   wpOpen(HWND hwndCnr,
		ULONG ulView,
		ULONG param)
{
   return SOM_ResolveD(this,WPDrives,WPObject,wpOpen)
	(this,hwndCnr,ulView,param);
}


/* method: wpSetup */
BOOL   wpSetup(PSZ pszSetupString)
{
   return SOM_ResolveD(this,WPDrives,WPObject,wpSetup)
	(this,pszSetupString);
}


/* method: wpMoveObject */
BOOL   wpMoveObject(WPFolder* Folder)
{
   return SOM_ResolveD(this,WPDrives,WPObject,wpMoveObject)
	(this,Folder);
}


/* method: wpDrop */
MRESULT   wpDrop(HWND hwndCnr,
		PDRAGINFO pdrgInfo,
		PDRAGITEM pdrgItem)
{
   return SOM_ResolveD(this,WPDrives,WPObject,wpDrop)
	(this,hwndCnr,pdrgInfo,pdrgItem);
}


/* method: wpDragOver */
MRESULT   wpDragOver(HWND hwndCnr,
		PDRAGINFO pdrgInfo)
{
   return SOM_ResolveD(this,WPDrives,WPObject,wpDragOver)
	(this,hwndCnr,pdrgInfo);
}


/* method: wpMenuItemHelpSelected */
BOOL   wpMenuItemHelpSelected(ULONG MenuId)
{
   return SOM_ResolveD(this,WPDrives,WPObject,wpMenuItemHelpSelected)
	(this,MenuId);
}


/* method: wpAddFile3Page */
ULONG   wpAddFile3Page(HWND hwndNotebook)
{
   return SOM_ResolveD(this,WPDrives,WPFileSystem,wpAddFile3Page)
	(this,hwndNotebook);
}


/* method: wpAddFile2Page */
ULONG   wpAddFile2Page(HWND hwndNotebook)
{
   return SOM_ResolveD(this,WPDrives,WPFileSystem,wpAddFile2Page)
	(this,hwndNotebook);
}


/* method: wpFormatDragItem */
BOOL   wpFormatDragItem(PDRAGITEM pdrgItem)
{
   return SOM_ResolveD(this,WPDrives,WPObject,wpFormatDragItem)
	(this,pdrgItem);
}


/* method: wpRender */
MRESULT   wpRender(PDRAGTRANSFER pdxfer)
{
   return SOM_ResolveD(this,WPDrives,WPObject,wpRender)
	(this,pdxfer);
}


/* method: wpRefresh */
BOOL   wpRefresh(ULONG ulView,
		PVOID pReserved)
{
   return SOM_ResolveD(this,WPDrives,WPFileSystem,wpRefresh)
	(this,ulView,pReserved);
}


/* method: wpFilterPopupMenu */
ULONG   wpFilterPopupMenu(ULONG ulFlags,
		HWND hwndCnr,
		BOOL fMultiSelect)
{
   return SOM_ResolveD(this,WPDrives,WPObject,wpFilterPopupMenu)
	(this,ulFlags,hwndCnr,fMultiSelect);
}


/* method: wpQueryDefaultView */
ULONG   wpQueryDefaultView()
{
   return SOM_ResolveD(this,WPDrives,WPObject,wpQueryDefaultView)
	(this);
}


/* method: wpRenderComplete */
MRESULT   wpRenderComplete(PDRAGTRANSFER pdxfer,
		ULONG ulResult)
{
   return SOM_ResolveD(this,WPDrives,WPObject,wpRenderComplete)
	(this,pdxfer,ulResult);
}


/* method: wpQueryDefaultHelp */
BOOL   wpQueryDefaultHelp(PULONG pHelpPanelId,
		PSZ HelpLibrary)
{
   return SOM_ResolveD(this,WPDrives,WPObject,wpQueryDefaultHelp)
	(this,pHelpPanelId,HelpLibrary);
}


/* method: wpObjectReady */
void   wpObjectReady(ULONG ulCode,
		WPObject* refObject)
{
   SOM_ResolveD(this,WPDrives,WPObject,wpObjectReady)
	(this,ulCode,refObject);
}


/* method: wpAddObjectWindowPage */
ULONG   wpAddObjectWindowPage(HWND hwndNotebook)
{
   return SOM_ResolveD(this,WPDrives,WPObject,wpAddObjectWindowPage)
	(this,hwndNotebook);
}


/* method: somDefaultInit */
void   somDefaultInit(somInitCtrl* ctrl)
{
   SOM_ResolveD(this,WPDrives,SOMObject,somDefaultInit)
	(this,ctrl);
}


/* method: somDestruct */
void   somDestruct(octet doFree,
		somDestructCtrl* ctrl)
{
   SOM_ResolveD(this,WPDrives,SOMObject,somDestruct)
	(this,doFree,ctrl);
}


/* method: wpSetIconData */
BOOL   wpSetIconData(PICONINFO pIconInfo)
{
   return SOM_ResolveD(this,WPDrives,WPObject,wpSetIconData)
	(this,pIconInfo);
}


/* method: wpSetRealName */
BOOL   wpSetRealName(PSZ pszName)
{
   return SOM_ResolveD(this,WPDrives,WPFileSystem,wpSetRealName)
	(this,pszName);
}


/* method: wpSetType */
BOOL   wpSetType(PSZ pszTypes,
		PFEA2LIST pfeal)
{
   return SOM_ResolveD(this,WPDrives,WPFileSystem,wpSetType)
	(this,pszTypes,pfeal);
}


/* method: wpQueryType */
PSZ   wpQueryType()
{
   return SOM_ResolveD(this,WPDrives,WPFileSystem,wpQueryType)
	(this);
}


/* method: wpSetAttr */
BOOL   wpSetAttr(ULONG attrFile)
{
   return SOM_ResolveD(this,WPDrives,WPFileSystem,wpSetAttr)
	(this,attrFile);
}


/* method: wpQueryAttr */
ULONG   wpQueryAttr()
{
   return SOM_ResolveD(this,WPDrives,WPFileSystem,wpQueryAttr)
	(this);
}


/* method: wpAddFile1Page */
ULONG   wpAddFile1Page(HWND hwndNotebook)
{
   return SOM_ResolveD(this,WPDrives,WPFileSystem,wpAddFile1Page)
	(this,hwndNotebook);
}


/* method: wpAddFileMenuPage */
ULONG   wpAddFileMenuPage(HWND hwndNotebook)
{
   return SOM_ResolveD(this,WPDrives,WPFileSystem,wpAddFileMenuPage)
	(this,hwndNotebook);
}


/* method: wpQueryCreation */
ULONG   wpQueryCreation(FDATE* fdate,
		FTIME* ftime)
{
   return SOM_ResolveD(this,WPDrives,WPFileSystem,wpQueryCreation)
	(this,fdate,ftime);
}


/* method: wpQueryLastAccess */
ULONG   wpQueryLastAccess(FDATE* fdate,
		FTIME* ftime)
{
   return SOM_ResolveD(this,WPDrives,WPFileSystem,wpQueryLastAccess)
	(this,fdate,ftime);
}


/* method: wpQueryLastWrite */
ULONG   wpQueryLastWrite(FDATE* fdate,
		FTIME* ftime)
{
   return SOM_ResolveD(this,WPDrives,WPFileSystem,wpQueryLastWrite)
	(this,fdate,ftime);
}


/* method: wpQueryFileSize */
ULONG   wpQueryFileSize()
{
   return SOM_ResolveD(this,WPDrives,WPFileSystem,wpQueryFileSize)
	(this);
}


/* method: wpQueryEASize */
ULONG   wpQueryEASize()
{
   return SOM_ResolveD(this,WPDrives,WPFileSystem,wpQueryEASize)
	(this);
}


/* method: wpSetDateInfo */
ULONG   wpSetDateInfo(FILEFINDBUF4* pstFileFindBuf)
{
   return SOM_ResolveD(this,WPDrives,WPFileSystem,wpSetDateInfo)
	(this,pstFileFindBuf);
}


/* method: wpSetFileSizeInfo */
ULONG   wpSetFileSizeInfo(ULONG cbFileSize,
		ULONG cbEASize)
{
   return SOM_ResolveD(this,WPDrives,WPFileSystem,wpSetFileSizeInfo)
	(this,cbFileSize,cbEASize);
}


/* method: wpQueryRefreshFlags */
ULONG   wpQueryRefreshFlags()
{
   return SOM_ResolveD(this,WPDrives,WPFileSystem,wpQueryRefreshFlags)
	(this);
}


/* method: wpSetRefreshFlags */
BOOL   wpSetRefreshFlags(ULONG ulRefreshFlags)
{
   return SOM_ResolveD(this,WPDrives,WPFileSystem,wpSetRefreshFlags)
	(this,ulRefreshFlags);
}


/* method: wpPrintPlainTextFile */
BOOL   wpPrintPlainTextFile(PPRINTDEST pPrintDest)
{
   return SOM_ResolveD(this,WPDrives,WPFileSystem,wpPrintPlainTextFile)
	(this,pPrintDest);
}


/* method: wpSetTitleAndRenameFile */
BOOL   wpSetTitleAndRenameFile(PSZ pszNewTitle,
		ULONG fConfirmations)
{
   return SOM_ResolveD(this,WPDrives,WPFileSystem,wpSetTitleAndRenameFile)
	(this,pszNewTitle,fConfirmations);
}


/* method: wpConfirmRenameFileWithExt */
ULONG   wpConfirmRenameFileWithExt()
{
   return SOM_ResolveD(this,WPDrives,WPFileSystem,wpConfirmRenameFileWithExt)
	(this);
}


/* method: wpVerifyUpdateAccess */
ULONG   wpVerifyUpdateAccess()
{
   return SOM_ResolveD(this,WPDrives,WPFileSystem,wpVerifyUpdateAccess)
	(this);
}


/* method: wpAddUserItemsToPopupMenu */
BOOL   wpAddUserItemsToPopupMenu(HWND hwndMenu,
		HWND hwndCnr,
		ULONG iPosition)
{
   return SOM_ResolveD(this,WPDrives,WPFileSystem,wpAddUserItemsToPopupMenu)
	(this,hwndMenu,hwndCnr,iPosition);
}


/* method: wpIsDiskSwapped */
BOOL   wpIsDiskSwapped()
{
   return SOM_ResolveD(this,WPDrives,WPFileSystem,wpIsDiskSwapped)
	(this);
}


/* method: wpQueryRealName */
BOOL   wpQueryRealName(PSZ pszFilename,
		PULONG pcb,
		BOOL fQualified)
{
   return SOM_ResolveD(this,WPDrives,WPFileSystem,wpQueryRealName)
	(this,pszFilename,pcb,fQualified);
}


/* method: wpQueryFilename */
PSZ   wpQueryFilename(PSZ pszFilename,
		BOOL fQualified)
{
   return SOM_ResolveD(this,WPDrives,WPFileSystem,wpQueryFilename)
	(this,pszFilename,fQualified);
}


/* method: wpQueryDisk */
WPFileSystem*   wpQueryDisk()
{
   return SOM_ResolveD(this,WPDrives,WPFileSystem,wpQueryDisk)
	(this);
}


/* method: wpQueryDateInfo */
ULONG   wpQueryDateInfo(FILEFINDBUF4* pstFileFindBuf)
{
   return SOM_ResolveD(this,WPDrives,WPFileSystem,wpQueryDateInfo)
	(this,pstFileFindBuf);
}


/* method: wpConfirmKeepAssoc */
ULONG   wpConfirmKeepAssoc()
{
   return SOM_ResolveD(this,WPDrives,WPFileSystem,wpConfirmKeepAssoc)
	(this);
}


/* method: wpQueryHandle */
HOBJECT   wpQueryHandle()
{
   return SOM_ResolveD(this,WPDrives,WPObject,wpQueryHandle)
	(this);
}


/* method: wpSaveImmediate */
BOOL   wpSaveImmediate()
{
   return SOM_ResolveD(this,WPDrives,WPObject,wpSaveImmediate)
	(this);
}


/* method: wpSetTitle */
BOOL   wpSetTitle(PSZ pszNewTitle)
{
   return SOM_ResolveD(this,WPDrives,WPObject,wpSetTitle)
	(this,pszNewTitle);
}


/* method: wpViewObject */
HWND   wpViewObject(HWND hwndCnr,
		ULONG ulView,
		ULONG param)
{
   return SOM_ResolveD(this,WPDrives,WPObject,wpViewObject)
	(this,hwndCnr,ulView,param);
}


/* method: wpSwitchTo */
BOOL   wpSwitchTo(ULONG View)
{
   return SOM_ResolveD(this,WPDrives,WPObject,wpSwitchTo)
	(this,View);
}


/* method: wpCopyObject */
WPObject*   wpCopyObject(WPFolder* Folder,
		BOOL fLock)
{
   return SOM_ResolveD(this,WPDrives,WPObject,wpCopyObject)
	(this,Folder,fLock);
}


/* method: wpCreateFromTemplate */
WPObject*   wpCreateFromTemplate(WPFolder* folder,
		BOOL fLock)
{
   return SOM_ResolveD(this,WPDrives,WPObject,wpCreateFromTemplate)
	(this,folder,fLock);
}


/* method: wpQueryIcon */
HPOINTER   wpQueryIcon()
{
   return SOM_ResolveD(this,WPDrives,WPObject,wpQueryIcon)
	(this);
}


/* method: wpQueryIconData */
ULONG   wpQueryIconData(PICONINFO pIconInfo)
{
   return SOM_ResolveD(this,WPDrives,WPObject,wpQueryIconData)
	(this,pIconInfo);
}


/* method: wpQueryDetailsData */
ULONG   wpQueryDetailsData(PVOID* ppDetailsData,
		PULONG pcp)
{
   return SOM_ResolveD(this,WPDrives,WPObject,wpQueryDetailsData)
	(this,ppDetailsData,pcp);
}


/* method: wpDraggedOverObject */
MRESULT   wpDraggedOverObject(WPObject* DraggedOverObject)
{
   return SOM_ResolveD(this,WPDrives,WPObject,wpDraggedOverObject)
	(this,DraggedOverObject);
}


/* method: wpDroppedOnObject */
BOOL   wpDroppedOnObject(WPObject* DroppedOnObject)
{
   return SOM_ResolveD(this,WPDrives,WPObject,wpDroppedOnObject)
	(this,DroppedOnObject);
}


/* method: wpQueryNameClashOptions */
ULONG   wpQueryNameClashOptions(ULONG menuID)
{
   return SOM_ResolveD(this,WPDrives,WPObject,wpQueryNameClashOptions)
	(this,menuID);
}


/* method: wpAppendObject */
BOOL32   wpAppendObject(WPObject* targetObject,
		BOOL32 fMove)
{
   return SOM_ResolveD(this,WPDrives,WPObject,wpAppendObject)
	(this,targetObject,fMove);
}


/* method: wpReplaceObject */
BOOL32   wpReplaceObject(WPObject* targetObject,
		BOOL32 fMove)
{
   return SOM_ResolveD(this,WPDrives,WPObject,wpReplaceObject)
	(this,targetObject,fMove);
}


/* method: wpQueryStyle */
ULONG   wpQueryStyle()
{
   return SOM_ResolveD(this,WPDrives,WPObject,wpQueryStyle)
	(this);
}


/* method: wpSetStyle */
BOOL   wpSetStyle(ULONG ulNewStyle)
{
   return SOM_ResolveD(this,WPDrives,WPObject,wpSetStyle)
	(this,ulNewStyle);
}


/* method: wpDoesObjectMatch */
BOOL   wpDoesObjectMatch(PVOID pvoidExtendedCriteria)
{
   return SOM_ResolveD(this,WPDrives,WPObject,wpDoesObjectMatch)
	(this,pvoidExtendedCriteria);
}


/* method: wpAddObjectGeneralPage */
ULONG   wpAddObjectGeneralPage(HWND hwndNotebook)
{
   return SOM_ResolveD(this,WPDrives,WPObject,wpAddObjectGeneralPage)
	(this,hwndNotebook);
}


/* method: wpAddObjectGeneralPage2 */
ULONG   wpAddObjectGeneralPage2(HWND hwndNotebook)
{
   return SOM_ResolveD(this,WPDrives,WPObject,wpAddObjectGeneralPage2)
	(this,hwndNotebook);
}


/* method: wpAddToObjUseList */
BOOL   wpAddToObjUseList(PUSEITEM pUseItem)
{
   return SOM_ResolveD(this,WPDrives,WPObject,wpAddToObjUseList)
	(this,pUseItem);
}


/* method: wpAllocMem */
PBYTE   wpAllocMem(ULONG cbBytes,
		PULONG prc)
{
   return SOM_ResolveD(this,WPDrives,WPObject,wpAllocMem)
	(this,cbBytes,prc);
}


/* method: wpAssertObjectMutexSem */
BOOL   wpAssertObjectMutexSem()
{
   return SOM_ResolveD(this,WPDrives,WPObject,wpAssertObjectMutexSem)
	(this);
}


/* method: wpClose */
BOOL   wpClose()
{
   return SOM_ResolveD(this,WPDrives,WPObject,wpClose)
	(this);
}


/* method: wpCnrInsertObject */
PMINIRECORDCORE   wpCnrInsertObject(HWND hwndCnr,
		PPOINTL pptlIcon,
		PMINIRECORDCORE preccParent,
		PRECORDINSERT pRecInsert)
{
   return SOM_ResolveD(this,WPDrives,WPObject,wpCnrInsertObject)
	(this,hwndCnr,pptlIcon,preccParent,pRecInsert);
}


/* method: wpCnrRemoveObject */
BOOL   wpCnrRemoveObject(HWND hwndCnr)
{
   return SOM_ResolveD(this,WPDrives,WPObject,wpCnrRemoveObject)
	(this,hwndCnr);
}


/* method: wpCnrSetEmphasis */
BOOL   wpCnrSetEmphasis(ULONG ulEmphasisAttr,
		BOOL fTurnOn)
{
   return SOM_ResolveD(this,WPDrives,WPObject,wpCnrSetEmphasis)
	(this,ulEmphasisAttr,fTurnOn);
}


/* method: wpConfirmObjectTitle */
ULONG   wpConfirmObjectTitle(WPFolder* Folder,
		WPObject** ppDuplicate,
		PSZ pszTitle,
		ULONG cbTitle,
		ULONG menuID)
{
   return SOM_ResolveD(this,WPDrives,WPObject,wpConfirmObjectTitle)
	(this,Folder,ppDuplicate,pszTitle,cbTitle,menuID);
}


/* method: wpCopiedFromTemplate */
void   wpCopiedFromTemplate()
{
   SOM_ResolveD(this,WPDrives,WPObject,wpCopiedFromTemplate)
	(this);
}


/* method: wpCreateAnother */
WPObject*   wpCreateAnother(PSZ pszTitle,
		PSZ pszSetupEnv,
		WPFolder* Folder)
{
   return SOM_ResolveD(this,WPDrives,WPObject,wpCreateAnother)
	(this,pszTitle,pszSetupEnv,Folder);
}


/* method: wpCreateShadowObject */
WPObject*   wpCreateShadowObject(WPFolder* Folder,
		BOOL fLock)
{
   return SOM_ResolveD(this,WPDrives,WPObject,wpCreateShadowObject)
	(this,Folder,fLock);
}


/* method: wpDeleteFromObjUseList */
BOOL   wpDeleteFromObjUseList(PUSEITEM pUseItem)
{
   return SOM_ResolveD(this,WPDrives,WPObject,wpDeleteFromObjUseList)
	(this,pUseItem);
}


/* method: wpDisplayHelp */
BOOL   wpDisplayHelp(ULONG HelpPanelId,
		PSZ HelpLibrary)
{
   return SOM_ResolveD(this,WPDrives,WPObject,wpDisplayHelp)
	(this,HelpPanelId,HelpLibrary);
}


/* method: wpDisplayMenu */
HWND   wpDisplayMenu(HWND hwndOwner,
		HWND hwndClient,
		POINTL* ptlPopupPt,
		ULONG ulMenuType,
		ULONG ulReserved)
{
   return SOM_ResolveD(this,WPDrives,WPObject,wpDisplayMenu)
	(this,hwndOwner,hwndClient,ptlPopupPt,ulMenuType,ulReserved);
}


/* method: wpEndConversation */
MRESULT   wpEndConversation(ULONG ulItemID,
		ULONG flResult)
{
   return SOM_ResolveD(this,WPDrives,WPObject,wpEndConversation)
	(this,ulItemID,flResult);
}


/* method: wpFindUseItem */
PUSEITEM   wpFindUseItem(ULONG type,
		PUSEITEM pCurrentItem)
{
   return SOM_ResolveD(this,WPDrives,WPObject,wpFindUseItem)
	(this,type,pCurrentItem);
}


/* method: wpFreeMem */
BOOL   wpFreeMem(PBYTE pByte)
{
   return SOM_ResolveD(this,WPDrives,WPObject,wpFreeMem)
	(this,pByte);
}


/* method: wpHide */
BOOL   wpHide()
{
   return SOM_ResolveD(this,WPDrives,WPObject,wpHide)
	(this);
}


/* method: wpInsertPopupMenuItems */
BOOL   wpInsertPopupMenuItems(HWND hwndMenu,
		ULONG iPosition,
		HMODULE hmod,
		ULONG MenuID,
		ULONG SubMenuID)
{
   return SOM_ResolveD(this,WPDrives,WPObject,wpInsertPopupMenuItems)
	(this,hwndMenu,iPosition,hmod,MenuID,SubMenuID);
}


/* method: wpInsertSettingsPage */
ULONG   wpInsertSettingsPage(HWND hwndNotebook,
		PPAGEINFO ppageinfo)
{
   return SOM_ResolveD(this,WPDrives,WPObject,wpInsertSettingsPage)
	(this,hwndNotebook,ppageinfo);
}


/* method: wpPrintObject */
BOOL   wpPrintObject(PPRINTDEST pPrintDest,
		ULONG ulReserved)
{
   return SOM_ResolveD(this,WPDrives,WPObject,wpPrintObject)
	(this,pPrintDest,ulReserved);
}


/* method: wpQueryConcurrentView */
ULONG   wpQueryConcurrentView()
{
   return SOM_ResolveD(this,WPDrives,WPObject,wpQueryConcurrentView)
	(this);
}


/* method: wpQueryButtonAppearance */
ULONG   wpQueryButtonAppearance()
{
   return SOM_ResolveD(this,WPDrives,WPObject,wpQueryButtonAppearance)
	(this);
}


/* method: wpQueryConfirmations */
ULONG   wpQueryConfirmations()
{
   return SOM_ResolveD(this,WPDrives,WPObject,wpQueryConfirmations)
	(this);
}


/* method: wpQueryError */
ULONG   wpQueryError()
{
   return SOM_ResolveD(this,WPDrives,WPObject,wpQueryError)
	(this);
}


/* method: wpSetFolder */
BOOL   wpSetFolder(WPObject* container)
{
   return SOM_ResolveD(this,WPDrives,WPObject,wpSetFolder)
	(this,container);
}


/* method: wpQueryFolder */
WPObject*   wpQueryFolder()
{
   return SOM_ResolveD(this,WPDrives,WPObject,wpQueryFolder)
	(this);
}


/* method: wpQueryMinWindow */
ULONG   wpQueryMinWindow()
{
   return SOM_ResolveD(this,WPDrives,WPObject,wpQueryMinWindow)
	(this);
}


/* method: wpSetTaskRec */
BOOL32   wpSetTaskRec(PTASKREC pNew,
		PTASKREC pOld)
{
   return SOM_ResolveD(this,WPDrives,WPObject,wpSetTaskRec)
	(this,pNew,pOld);
}


/* method: wpFindTaskRec */
PTASKREC   wpFindTaskRec()
{
   return SOM_ResolveD(this,WPDrives,WPObject,wpFindTaskRec)
	(this);
}


/* method: wpQueryTitle */
PSZ   wpQueryTitle()
{
   return SOM_ResolveD(this,WPDrives,WPObject,wpQueryTitle)
	(this);
}


/* method: wpRegisterView */
BOOL   wpRegisterView(HWND hwndFrame,
		PSZ pszViewTitle)
{
   return SOM_ResolveD(this,WPDrives,WPObject,wpRegisterView)
	(this,hwndFrame,pszViewTitle);
}


/* method: wpReleaseObjectMutexSem */
ULONG   wpReleaseObjectMutexSem()
{
   return SOM_ResolveD(this,WPDrives,WPObject,wpReleaseObjectMutexSem)
	(this);
}


/* method: wpRequestObjectMutexSem */
ULONG   wpRequestObjectMutexSem(ULONG ulTimeout)
{
   return SOM_ResolveD(this,WPDrives,WPObject,wpRequestObjectMutexSem)
	(this,ulTimeout);
}


/* method: wpRestore */
BOOL   wpRestore()
{
   return SOM_ResolveD(this,WPDrives,WPObject,wpRestore)
	(this);
}


/* method: wpRestoreData */
BOOL   wpRestoreData(PSZ pszClass,
		ULONG ulKey,
		PBYTE pValue,
		PULONG pcbValue)
{
   return SOM_ResolveD(this,WPDrives,WPObject,wpRestoreData)
	(this,pszClass,ulKey,pValue,pcbValue);
}


/* method: wpRestoreLong */
BOOL   wpRestoreLong(PSZ pszClass,
		ULONG ulKey,
		PULONG pulValue)
{
   return SOM_ResolveD(this,WPDrives,WPObject,wpRestoreLong)
	(this,pszClass,ulKey,pulValue);
}


/* method: wpRestoreString */
BOOL   wpRestoreString(PSZ pszClass,
		ULONG ulKey,
		PSZ pszValue,
		PULONG pcbValue)
{
   return SOM_ResolveD(this,WPDrives,WPObject,wpRestoreString)
	(this,pszClass,ulKey,pszValue,pcbValue);
}


/* method: wpSaveData */
BOOL   wpSaveData(PSZ pszClass,
		ULONG ulKey,
		PBYTE pValue,
		ULONG cbValue)
{
   return SOM_ResolveD(this,WPDrives,WPObject,wpSaveData)
	(this,pszClass,ulKey,pValue,cbValue);
}


/* method: wpSaveDeferred */
BOOL   wpSaveDeferred()
{
   return SOM_ResolveD(this,WPDrives,WPObject,wpSaveDeferred)
	(this);
}


/* method: wpSaveLong */
BOOL   wpSaveLong(PSZ pszClass,
		ULONG ulKey,
		ULONG ulValue)
{
   return SOM_ResolveD(this,WPDrives,WPObject,wpSaveLong)
	(this,pszClass,ulKey,ulValue);
}


/* method: wpSaveString */
BOOL   wpSaveString(PSZ pszClass,
		ULONG ulKey,
		PSZ pszValue)
{
   return SOM_ResolveD(this,WPDrives,WPObject,wpSaveString)
	(this,pszClass,ulKey,pszValue);
}


/* method: wpScanSetupString */
BOOL   wpScanSetupString(PSZ pszSetupString,
		PSZ pszKey,
		PSZ pszValue,
		PULONG pcbValue)
{
   return SOM_ResolveD(this,WPDrives,WPObject,wpScanSetupString)
	(this,pszSetupString,pszKey,pszValue,pcbValue);
}


/* method: wpSetConcurrentView */
void   wpSetConcurrentView(ULONG ulCCView)
{
   SOM_ResolveD(this,WPDrives,WPObject,wpSetConcurrentView)
	(this,ulCCView);
}


/* method: wpSetButtonAppearance */
void   wpSetButtonAppearance(ULONG ulButtonType)
{
   SOM_ResolveD(this,WPDrives,WPObject,wpSetButtonAppearance)
	(this,ulButtonType);
}


/* method: wpSetDefaultHelp */
BOOL   wpSetDefaultHelp(ULONG HelpPanelId,
		PSZ HelpLibrary)
{
   return SOM_ResolveD(this,WPDrives,WPObject,wpSetDefaultHelp)
	(this,HelpPanelId,HelpLibrary);
}


/* method: wpSetDefaultView */
BOOL   wpSetDefaultView(ULONG ulView)
{
   return SOM_ResolveD(this,WPDrives,WPObject,wpSetDefaultView)
	(this,ulView);
}


/* method: wpSetError */
BOOL   wpSetError(ULONG ulErrorId)
{
   return SOM_ResolveD(this,WPDrives,WPObject,wpSetError)
	(this,ulErrorId);
}


/* method: wpSetIconHandle */
BOOL   wpSetIconHandle(HPOINTER hptrNewIcon)
{
   return SOM_ResolveD(this,WPDrives,WPObject,wpSetIconHandle)
	(this,hptrNewIcon);
}


/* method: wpQueryScreenGroupID */
USHORT   wpQueryScreenGroupID(USHORT usPrevSgId)
{
   return SOM_ResolveD(this,WPDrives,WPObject,wpQueryScreenGroupID)
	(this,usPrevSgId);
}


/* method: wpSetupOnce */
BOOL   wpSetupOnce(PSZ pszSetupString)
{
   return SOM_ResolveD(this,WPDrives,WPObject,wpSetupOnce)
	(this,pszSetupString);
}


/* method: wpSetIcon */
BOOL   wpSetIcon(HPOINTER hptrNewIcon)
{
   return SOM_ResolveD(this,WPDrives,WPObject,wpSetIcon)
	(this,hptrNewIcon);
}


/* method: wpSetMinWindow */
void   wpSetMinWindow(ULONG ulMinWindow)
{
   SOM_ResolveD(this,WPDrives,WPObject,wpSetMinWindow)
	(this,ulMinWindow);
}


/* method: wpModifyStyle */
BOOL   wpModifyStyle(ULONG ulStyleFlags,
		ULONG ulStyleMask)
{
   return SOM_ResolveD(this,WPDrives,WPObject,wpModifyStyle)
	(this,ulStyleFlags,ulStyleMask);
}


/* method: wpQueryTrueStyle */
ULONG   wpQueryTrueStyle()
{
   return SOM_ResolveD(this,WPDrives,WPObject,wpQueryTrueStyle)
	(this);
}


/* method: wpUnlockObject */
BOOL   wpUnlockObject()
{
   return SOM_ResolveD(this,WPDrives,WPObject,wpUnlockObject)
	(this);
}


/* method: wpIsObjectInitialized */
BOOL   wpIsObjectInitialized()
{
   return SOM_ResolveD(this,WPDrives,WPObject,wpIsObjectInitialized)
	(this);
}


/* method: wpCreateShadowObjectExt */
WPObject*   wpCreateShadowObjectExt(WPFolder* Folder,
		BOOL fLock,
		PSZ pszSetup,
		M_WPObject* shadowClass)
{
   return SOM_ResolveD(this,WPDrives,WPObject,wpCreateShadowObjectExt)
	(this,Folder,fLock,pszSetup,shadowClass);
}


/* method: wpCnrDeleteUseItem */
BOOL   wpCnrDeleteUseItem(HWND hwndCnr)
{
   return SOM_ResolveD(this,WPDrives,WPObject,wpCnrDeleteUseItem)
	(this,hwndCnr);
}


/* method: wpIsDeleteable */
BOOL   wpIsDeleteable()
{
   return SOM_ResolveD(this,WPDrives,WPObject,wpIsDeleteable)
	(this);
}


/* method: wpQueryCoreRecord */
PMINIRECORDCORE   wpQueryCoreRecord()
{
   return SOM_ResolveD(this,WPDrives,WPObject,wpQueryCoreRecord)
	(this);
}


/* method: wpSetObjectID */
BOOL   wpSetObjectID(PSZ pszObjectID)
{
   return SOM_ResolveD(this,WPDrives,WPObject,wpSetObjectID)
	(this,pszObjectID);
}


/* method: wpQueryObjectID */
PSZ   wpQueryObjectID()
{
   return SOM_ResolveD(this,WPDrives,WPObject,wpQueryObjectID)
	(this);
}


/* method: wpSetDefaultIconPos */
BOOL   wpSetDefaultIconPos(PPOINTL pPointl)
{
   return SOM_ResolveD(this,WPDrives,WPObject,wpSetDefaultIconPos)
	(this,pPointl);
}


/* method: wpQueryDefaultIconPos */
BOOL   wpQueryDefaultIconPos(PPOINTL pPointl)
{
   return SOM_ResolveD(this,WPDrives,WPObject,wpQueryDefaultIconPos)
	(this,pPointl);
}


/* method: wpCnrRefreshDetails */
void   wpCnrRefreshDetails()
{
   SOM_ResolveD(this,WPDrives,WPObject,wpCnrRefreshDetails)
	(this);
}


/* method: wpFindViewItem */
PVIEWITEM   wpFindViewItem(ULONG flViews,
		PVIEWITEM pCurrentItem)
{
   return SOM_ResolveD(this,WPDrives,WPObject,wpFindViewItem)
	(this,flViews,pCurrentItem);
}


/* method: wpLockObject */
void   wpLockObject()
{
   SOM_ResolveD(this,WPDrives,WPObject,wpLockObject)
	(this);
}


/* method: wpIsLocked */
BOOL   wpIsLocked()
{
   return SOM_ResolveD(this,WPDrives,WPObject,wpIsLocked)
	(this);
}


/* method: wpQueryContainerFlagPtr */
PULONG   wpQueryContainerFlagPtr()
{
   return SOM_ResolveD(this,WPDrives,WPObject,wpQueryContainerFlagPtr)
	(this);
}


/* method: wpWaitForClose */
ULONG   wpWaitForClose(LHANDLE lhView,
		ULONG ulViews,
		long lTimeOut,
		BOOL bAutoClose)
{
   return SOM_ResolveD(this,WPDrives,WPObject,wpWaitForClose)
	(this,lhView,ulViews,lTimeOut,bAutoClose);
}


/* method: somInit */
void   somInit()
{
   SOM_ResolveD(this,WPDrives,SOMObject,somInit)
	(this);
}


/* method: somUninit */
void   somUninit()
{
   SOM_ResolveD(this,WPDrives,SOMObject,somUninit)
	(this);
}


/* method: somDefaultCopyInit */
void   somDefaultCopyInit(somInitCtrl* ctrl,
		SOMObject* fromObj)
{
   SOM_ResolveD(this,WPDrives,SOMObject,somDefaultCopyInit)
	(this,ctrl,fromObj);
}


/* method: somDefaultAssign */
WPDrives*  somDefaultAssign(somAssignCtrl* ctrl,
		SOMObject* fromObj)
{
   return SOM_ResolveD(this,WPDrives,SOMObject,somDefaultAssign)
	(this,ctrl,fromObj);
}


/* method: somDefaultConstCopyInit */
void   somDefaultConstCopyInit(somInitCtrl* ctrl,
		SOMObject* fromObj)
{
   SOM_ResolveD(this,WPDrives,SOMObject,somDefaultConstCopyInit)
	(this,ctrl,fromObj);
}


/* method: somDefaultVCopyInit */
void   somDefaultVCopyInit(somInitCtrl* ctrl,
		SOMObject* fromObj)
{
   SOM_ResolveD(this,WPDrives,SOMObject,somDefaultVCopyInit)
	(this,ctrl,fromObj);
}


/* method: somDefaultConstVCopyInit */
void   somDefaultConstVCopyInit(somInitCtrl* ctrl,
		SOMObject* fromObj)
{
   SOM_ResolveD(this,WPDrives,SOMObject,somDefaultConstVCopyInit)
	(this,ctrl,fromObj);
}


/* method: somDefaultConstAssign */
WPDrives*  somDefaultConstAssign(somAssignCtrl* ctrl,
		SOMObject* fromObj)
{
   return SOM_ResolveD(this,WPDrives,SOMObject,somDefaultConstAssign)
	(this,ctrl,fromObj);
}


/* method: somDefaultVAssign */
WPDrives*  somDefaultVAssign(somAssignCtrl* ctrl,
		SOMObject* fromObj)
{
   return SOM_ResolveD(this,WPDrives,SOMObject,somDefaultVAssign)
	(this,ctrl,fromObj);
}


/* method: somDefaultConstVAssign */
WPDrives*  somDefaultConstVAssign(somAssignCtrl* ctrl,
		SOMObject* fromObj)
{
   return SOM_ResolveD(this,WPDrives,SOMObject,somDefaultConstVAssign)
	(this,ctrl,fromObj);
}


/* method: somFree */
void   somFree()
{
   SOM_ResolveD(this,WPDrives,SOMObject,somFree)
	(this);
}


/* method: somGetClass */
M_WPDrives*  somGetClass()
{
   return SOM_ResolveD(this,WPDrives,SOMObject,somGetClass)
	(this);
}


/* method: somGetClassName */
string   somGetClassName()
{
   return SOM_ResolveD(this,WPDrives,SOMObject,somGetClassName)
	(this);
}


/* method: somGetSize */
long   somGetSize()
{
   return SOM_ResolveD(this,WPDrives,SOMObject,somGetSize)
	(this);
}


/* method: somIsA */
boolean   somIsA(SOMClass* aClassObj)
{
   return SOM_ResolveD(this,WPDrives,SOMObject,somIsA)
	(this,aClassObj);
}


/* method: somIsInstanceOf */
boolean   somIsInstanceOf(SOMClass* aClassObj)
{
   return SOM_ResolveD(this,WPDrives,SOMObject,somIsInstanceOf)
	(this,aClassObj);
}


/* method: somRespondsTo */
boolean   somRespondsTo(somId mId)
{
   return SOM_ResolveD(this,WPDrives,SOMObject,somRespondsTo)
	(this,mId);
}


/* va_list method: somDispatch */
/* the va_list invocation form */
boolean   WPDrives_somDispatch(somToken* retValue,
		somId methodId,
		va_list ap)
{
return SOM_ResolveD(this,WPDrives,SOMObject,somDispatch)
	(this,retValue,methodId,ap);
}

/* the varargs invocation form */
boolean   somDispatch(somToken* retValue,
		somId methodId,
		...)
{
   va_list ap;
   va_start(ap, methodId);
   boolean __somResult = 
      SOM_ResolveD(this,WPDrives,SOMObject,somDispatch)
	(this,retValue,methodId,ap);
   va_end(ap);
   return __somResult;
}


/* va_list method: somClassDispatch */
/* the va_list invocation form */
boolean   WPDrives_somClassDispatch(SOMClass* clsObj,
		somToken* retValue,
		somId methodId,
		va_list ap)
{
return SOM_ResolveD(this,WPDrives,SOMObject,somClassDispatch)
	(this,clsObj,retValue,methodId,ap);
}

/* the varargs invocation form */
boolean   somClassDispatch(SOMClass* clsObj,
		somToken* retValue,
		somId methodId,
		...)
{
   va_list ap;
   va_start(ap, methodId);
   boolean __somResult = 
      SOM_ResolveD(this,WPDrives,SOMObject,somClassDispatch)
	(this,clsObj,retValue,methodId,ap);
   va_end(ap);
   return __somResult;
}


/* method: somCastObj */
boolean   somCastObj(SOMClass* cls)
{
   return SOM_ResolveD(this,WPDrives,SOMObject,somCastObj)
	(this,cls);
}


/* method: somResetObj */
boolean   somResetObj()
{
   return SOM_ResolveD(this,WPDrives,SOMObject,somResetObj)
	(this);
}


/* va_list method: somDispatchV */
/* the va_list invocation form */
void   WPDrives_somDispatchV(somId methodId,
		somId descriptor,
		va_list ap)
{
   SOM_ResolveD(this,WPDrives,SOMObject,somDispatchV)
	(this,methodId,descriptor,ap);
}

/* the varargs invocation form */
void   somDispatchV(somId methodId,
		somId descriptor,
		...)
{
   va_list ap;
   va_start(ap, descriptor);
   SOM_ResolveD(this,WPDrives,SOMObject,somDispatchV)
	(this,methodId,descriptor,ap);
   va_end(ap);
}


/* va_list method: somDispatchL */
/* the va_list invocation form */
long   WPDrives_somDispatchL(somId methodId,
		somId descriptor,
		va_list ap)
{
return SOM_ResolveD(this,WPDrives,SOMObject,somDispatchL)
	(this,methodId,descriptor,ap);
}

/* the varargs invocation form */
long   somDispatchL(somId methodId,
		somId descriptor,
		...)
{
   va_list ap;
   va_start(ap, descriptor);
   long __somResult = 
      SOM_ResolveD(this,WPDrives,SOMObject,somDispatchL)
	(this,methodId,descriptor,ap);
   va_end(ap);
   return __somResult;
}


/* va_list method: somDispatchA */
/* the va_list invocation form */
void*   WPDrives_somDispatchA(somId methodId,
		somId descriptor,
		va_list ap)
{
return SOM_ResolveD(this,WPDrives,SOMObject,somDispatchA)
	(this,methodId,descriptor,ap);
}

/* the varargs invocation form */
void*   somDispatchA(somId methodId,
		somId descriptor,
		...)
{
   va_list ap;
   va_start(ap, descriptor);
   void* __somResult = 
      SOM_ResolveD(this,WPDrives,SOMObject,somDispatchA)
	(this,methodId,descriptor,ap);
   va_end(ap);
   return __somResult;
}


/* va_list method: somDispatchD */
/* the va_list invocation form */
double   WPDrives_somDispatchD(somId methodId,
		somId descriptor,
		va_list ap)
{
return SOM_ResolveD(this,WPDrives,SOMObject,somDispatchD)
	(this,methodId,descriptor,ap);
}

/* the varargs invocation form */
double   somDispatchD(somId methodId,
		somId descriptor,
		...)
{
   va_list ap;
   va_start(ap, descriptor);
   double __somResult = 
      SOM_ResolveD(this,WPDrives,SOMObject,somDispatchD)
	(this,methodId,descriptor,ap);
   va_end(ap);
   return __somResult;
}


/* method: somPrintSelf */
SOMObject*   somPrintSelf()
{
   return SOM_ResolveD(this,WPDrives,SOMObject,somPrintSelf)
	(this);
}


/* method: somDumpSelf */
void   somDumpSelf(long level)
{
   SOM_ResolveD(this,WPDrives,SOMObject,somDumpSelf)
	(this,level);
}


/* method: somDumpSelfInt */
void   somDumpSelfInt(long level)
{
   SOM_ResolveD(this,WPDrives,SOMObject,somDumpSelfInt)
	(this,level);
}



};   /* WPDrives */



#endif       /* SOM_WPDrives_xh */

#ifndef SOM_M_WPDrives_xh
#define SOM_M_WPDrives_xh

class M_WPDrives;

#define M_WPDrives_MajorVersion 1
#define M_WPDrives_MinorVersion 2

/* C++ SOM defs */
#include <somcls.xh>
#include <somcm.xh>

/* C++ parent defs */
#ifndef SOM_M_WPFolder_xh
#include <wpfolder.xh>
#endif

#ifndef M_WPDrives_API
#define M_WPDrives_API
/*
 * -- The Class API
 */

/*
 * Start of user-defined types:
 */

/*
 * End of user-defined types.
 */

/*
 * -- M_WPDrives is a metaclass for WPDrives. Make sure WPDrives is known.
 */
class WPDrives;


/* A procedure to create the M_WPDrives Class */
SOMEXTERN SOMClass * SOMLINK M_WPDrivesNewClass(
		integer4 majorVersion,
		integer4 minorVersion);

/* The API to the M_WPDrives class object, and the methods it introduces. */
SOMEXTERN struct M_WPDrivesClassDataStructure {
	SOMClass *classObject;
} SOMDLINK M_WPDrivesClassData;
#define _M_WPDrives M_WPDrivesClassData.classObject

/* The API to parentMtabs for M_WPDrives, and the instance data it introduces. */
SOMEXTERN struct M_WPDrivesCClassDataStructure {
	somMethodTabs parentMtab;
	somDToken              instanceDataToken;
} SOMDLINK M_WPDrivesCClassData;

/*
 * -- Typedefs for M_WPDrives Method Procedures
 */
SOMEXTERN {

/*
 * -- Typedefs for Reintroduced Wrapper Methods
 */
typedef ULONG   (SOMLINK * somTD_M_WPDrives_wpclsQueryIconDataN)(M_WPDrives *somSelf,
		ICONINFO* pIconInfo,
		ULONG ulIconIndex);
typedef HPOINTER   (SOMLINK * somTD_M_WPDrives_wpclsQueryIconN)(M_WPDrives *somSelf,
		ULONG ulIconIndex);
typedef WPFolder*   (SOMLINK * somTD_M_WPDrives_wpclsQueryOpenFolders)(M_WPDrives *somSelf,
		WPFolder* Folder,
		ULONG ulOption,
		BOOL fLock);
typedef void   (SOMLINK * somTD_M_WPDrives_wpclsInitData)(M_WPDrives *somSelf);
typedef ULONG   (SOMLINK * somTD_M_WPDrives_wpclsQueryDefaultView)(M_WPDrives *somSelf);
typedef PSZ   (SOMLINK * somTD_M_WPDrives_wpclsQueryTitle)(M_WPDrives *somSelf);
typedef ULONG   (SOMLINK * somTD_M_WPDrives_wpclsQueryIconData)(M_WPDrives *somSelf,
		PICONINFO pIconInfo);
typedef ULONG   (SOMLINK * somTD_M_WPDrives_wpclsQueryStyle)(M_WPDrives *somSelf);
typedef BOOL   (SOMLINK * somTD_M_WPDrives_wpclsQueryDefaultHelp)(M_WPDrives *somSelf,
		PULONG pHelpPanelId,
		PSZ pszHelpLibrary);
typedef WPObject*   (SOMLINK * somTD_M_WPDrives_wpclsQueryAwakeObject)(M_WPDrives *somSelf,
		PSZ pszInputPath);
typedef WPObject*   (SOMLINK * somTD_M_WPDrives_wpclsFileSysExists)(M_WPDrives *somSelf,
		WPFolder* Folder,
		PSZ pszFilename,
		ULONG attrFile);
typedef WPObject*   (SOMLINK * somTD_M_WPDrives_wpclsQueryObjectFromPath)(M_WPDrives *somSelf,
		PSZ pszFQPath);
typedef PSZ   (SOMLINK * somTD_M_WPDrives_wpclsQueryInstanceType)(M_WPDrives *somSelf);
typedef PSZ   (SOMLINK * somTD_M_WPDrives_wpclsQueryInstanceFilter)(M_WPDrives *somSelf);
typedef ULONG   (SOMLINK * somTD_M_WPDrives_wpclsQueryDetailsInfo)(M_WPDrives *somSelf,
		PCLASSFIELDINFO* ppClassFieldInfo,
		PULONG pSize);
typedef void   (SOMLINK * somTD_M_WPDrives_wpclsQuerySearchInfo)(M_WPDrives *somSelf,
		M_WPObject** ClassExtended,
		M_WPObject** ClassCreate,
		PULONG pulClassCriteriaSize);
typedef BOOL   (SOMLINK * somTD_M_WPDrives_wpclsQueryExtendedCriteria)(M_WPDrives *somSelf,
		PSZ pszName,
		ULONG ulSearchType,
		PVOID pvoidExtendedCriteria);
typedef WPObject*   (SOMLINK * somTD_M_WPDrives_wpclsNew)(M_WPDrives *somSelf,
		PSZ pszTitle,
		PSZ pszSetupEnv,
		WPFolder* Folder,
		BOOL fLock);
typedef BOOL   (SOMLINK * somTD_M_WPDrives_wpclsCreateDefaultTemplates)(M_WPDrives *somSelf,
		WPObject* Folder);
typedef WPObject*   (SOMLINK * somTD_M_WPDrives_wpclsMakeAwake)(M_WPDrives *somSelf,
		PSZ pszTitle,
		ULONG ulStyle,
		HPOINTER hptrIcon,
		POBJDATA pObjData,
		WPFolder* Folder,
		ULONG ulUser);
typedef PCLASSDETAILS   (SOMLINK * somTD_M_WPDrives_wpclsQueryDetails)(M_WPDrives *somSelf);
typedef WPObject*   (SOMLINK * somTD_M_WPDrives_wpclsQueryFolder)(M_WPDrives *somSelf,
		PSZ pszLocation,
		BOOL fLock);
typedef HPOINTER   (SOMLINK * somTD_M_WPDrives_wpclsQueryIcon)(M_WPDrives *somSelf);
typedef void   (SOMLINK * somTD_M_WPDrives_wpclsUnInitData)(M_WPDrives *somSelf);
typedef BOOL   (SOMLINK * somTD_M_WPDrives_wpclsFindObjectFirst)(M_WPDrives *somSelf,
		PCLASS pClassList,
		PHFIND phFind,
		PSZ pszTitle,
		WPFolder* Folder,
		BOOL fSubfolders,
		PVOID pExtendedCriteria,
		POBJECT pBuffer,
		PULONG pCount);
typedef BOOL   (SOMLINK * somTD_M_WPDrives_wpclsFindObjectNext)(M_WPDrives *somSelf,
		HFIND hFind,
		POBJECT pBuffer,
		PULONG pCount);
typedef BOOL   (SOMLINK * somTD_M_WPDrives_wpclsFindObjectEnd)(M_WPDrives *somSelf,
		HFIND hFind);
typedef BOOL   (SOMLINK * somTD_M_WPDrives_wpclsSetError)(M_WPDrives *somSelf,
		ULONG ulErrorId);
typedef ULONG   (SOMLINK * somTD_M_WPDrives_wpclsQueryError)(M_WPDrives *somSelf);
typedef BOOL   (SOMLINK * somTD_M_WPDrives_wpclsQuerySettingsPageSize)(M_WPDrives *somSelf,
		PSIZEL pSizl);
typedef WPObject*   (SOMLINK * somTD_M_WPDrives_wpclsQueryObject)(M_WPDrives *somSelf,
		HOBJECT hObject);
typedef ULONG   (SOMLINK * somTD_M_WPDrives_wpclsQueryButtonAppearance)(M_WPDrives *somSelf);
typedef void   (SOMLINK * somTD_M_WPDrives_wpclsDecUsage)(M_WPDrives *somSelf);
typedef void   (SOMLINK * somTD_M_WPDrives_wpclsIncUsage)(M_WPDrives *somSelf);
typedef BOOL   (SOMLINK * somTD_M_WPDrives_wpclsInsertMultipleObjects)(M_WPDrives *somSelf,
		HWND hwndCnr,
		PPOINTL pptlIcon,
		PVOID* pObjectArray,
		PVOID pRecordParent,
		ULONG NumRecords);
typedef WPObject*   (SOMLINK * somTD_M_WPDrives_wpclsFindOneObject)(M_WPDrives *somSelf,
		HWND hwndOwner,
		PSZ pszFindParams);
typedef BOOL   (SOMLINK * somTD_M_WPDrives_wpclsSetSettingsPageSize)(M_WPDrives *somSelf,
		PSIZEL pSizl);
typedef BOOL   (SOMLINK * somTD_M_WPDrives_wpclsSetIconData)(M_WPDrives *somSelf,
		PICONINFO pIconInfo);
typedef BOOL   (SOMLINK * somTD_M_WPDrives_wpclsSetIcon)(M_WPDrives *somSelf,
		HPOINTER hptrNewIcon);
typedef WPObject*   (SOMLINK * somTD_M_WPDrives_wpclsObjectFromHandle)(M_WPDrives *somSelf,
		HOBJECT hObject);
typedef BOOL   (SOMLINK * somTD_M_WPDrives_wpclsRemoveObjects)(M_WPDrives *somSelf,
		HWND hwndCnr,
		PVOID* pRecordArray,
		ULONG NumRecords,
		BOOL RemoveAll);
typedef void   (SOMLINK * somTD_M_WPDrives_somUninit)(M_WPDrives *somSelf);
typedef void   (SOMLINK * somTD_M_WPDrives_somClassReady)(M_WPDrives *somSelf);
typedef WPDrives*   (SOMLINK * somTD_M_WPDrives_somNew)(M_WPDrives *somSelf);
typedef SOMObject*   (SOMLINK * somTD_M_WPDrives_somRenew)(M_WPDrives *somSelf,
		void* obj);
typedef long   (SOMLINK * somTD_M_WPDrives__get_somDataAlignment)(M_WPDrives *somSelf);
typedef SOMClass_somOffsets   (SOMLINK * somTD_M_WPDrives__get_somInstanceDataOffsets)(M_WPDrives *somSelf);
typedef SOMClass_SOMClassSequence   (SOMLINK * somTD_M_WPDrives__get_somDirectInitClasses)(M_WPDrives *somSelf);
typedef void   (SOMLINK * somTD_M_WPDrives__set_somDirectInitClasses)(M_WPDrives *somSelf,
		SOMClass_SOMClassSequence* somDirectInitClasses);
typedef SOMObject*   (SOMLINK * somTD_M_WPDrives_somNewNoInit)(M_WPDrives *somSelf);
typedef SOMObject*   (SOMLINK * somTD_M_WPDrives_somRenewNoInit)(M_WPDrives *somSelf,
		void* obj);
typedef SOMObject*   (SOMLINK * somTD_M_WPDrives_somRenewNoZero)(M_WPDrives *somSelf,
		void* obj);
typedef SOMObject*   (SOMLINK * somTD_M_WPDrives_somRenewNoInitNoZero)(M_WPDrives *somSelf,
		void* obj);
typedef string   (SOMLINK * somTD_M_WPDrives_somAllocate)(M_WPDrives *somSelf,
		long size);
typedef void   (SOMLINK * somTD_M_WPDrives_somDeallocate)(M_WPDrives *somSelf,
		string memptr);
typedef somMethodProc*   (SOMLINK * somTD_M_WPDrives__get_somClassAllocate)(M_WPDrives *somSelf);
typedef somMethodProc*   (SOMLINK * somTD_M_WPDrives__get_somClassDeallocate)(M_WPDrives *somSelf);
typedef somBooleanVector   (SOMLINK * somTD_M_WPDrives_somGetInstanceInitMask)(M_WPDrives *somSelf,
		somInitCtrl* ctrl);
typedef somBooleanVector   (SOMLINK * somTD_M_WPDrives_somGetInstanceDestructionMask)(M_WPDrives *somSelf,
		somDestructCtrl* ctrl);
typedef somBooleanVector   (SOMLINK * somTD_M_WPDrives_somGetInstanceAssignmentMask)(M_WPDrives *somSelf,
		somAssignCtrl* ctrl);
typedef void   (SOMLINK * somTD_M_WPDrives_somInitClass)(M_WPDrives *somSelf,
		string className,
		SOMClass* parentClass,
		long dataSize,
		long maxStaticMethods,
		long majorVersion,
		long minorVersion);
typedef void   (SOMLINK * somTD_M_WPDrives_somInitMIClass)(M_WPDrives *somSelf,
		long inherit_vars,
		string className,
		SOMClass_SOMClassSequence* parentClasses,
		long dataSize,
		long dataAlignment,
		long maxStaticMethods,
		long majorVersion,
		long minorVersion);
typedef somMToken   (SOMLINK * somTD_M_WPDrives_somAddStaticMethod)(M_WPDrives *somSelf,
		somId methodId,
		somId methodDescriptor,
		somMethodPtr method,
		somMethodPtr redispatchStub,
		somMethodPtr applyStub);
typedef void   (SOMLINK * somTD_M_WPDrives_somAddDynamicMethod)(M_WPDrives *somSelf,
		somId methodId,
		somId methodDescriptor,
		somMethodPtr method,
		somMethodPtr applyStub);
typedef void   (SOMLINK * somTD_M_WPDrives_somOverrideSMethod)(M_WPDrives *somSelf,
		somId methodId,
		somMethodPtr method);
typedef somMethodPtr   (SOMLINK * somTD_M_WPDrives_somGetApplyStub)(M_WPDrives *somSelf,
		somId methodId);
typedef somClassDataStructure*   (SOMLINK * somTD_M_WPDrives_somGetClassData)(M_WPDrives *somSelf);
typedef void   (SOMLINK * somTD_M_WPDrives_somSetClassData)(M_WPDrives *somSelf,
		somClassDataStructure* cds);
typedef somMethodTab*   (SOMLINK * somTD_M_WPDrives_somGetClassMtab)(M_WPDrives *somSelf);
typedef long   (SOMLINK * somTD_M_WPDrives_somGetInstanceOffset)(M_WPDrives *somSelf);
typedef long   (SOMLINK * somTD_M_WPDrives_somGetInstancePartSize)(M_WPDrives *somSelf);
typedef long   (SOMLINK * somTD_M_WPDrives_somGetInstanceSize)(M_WPDrives *somSelf);
typedef somDToken   (SOMLINK * somTD_M_WPDrives_somGetInstanceToken)(M_WPDrives *somSelf);
typedef somDToken   (SOMLINK * somTD_M_WPDrives_somGetMemberToken)(M_WPDrives *somSelf,
		long memberOffset,
		somDToken instanceToken);
typedef boolean   (SOMLINK * somTD_M_WPDrives_somGetMethodData)(M_WPDrives *somSelf,
		somId methodId,
		somMethodData* md);
typedef somMethodProc*   (SOMLINK * somTD_M_WPDrives_somGetRdStub)(M_WPDrives *somSelf,
		somId methodId);
typedef somId   (SOMLINK * somTD_M_WPDrives_somGetMethodDescriptor)(M_WPDrives *somSelf,
		somId methodId);
typedef long   (SOMLINK * somTD_M_WPDrives_somGetMethodIndex)(M_WPDrives *somSelf,
		somId id);
typedef somMToken   (SOMLINK * somTD_M_WPDrives_somGetMethodToken)(M_WPDrives *somSelf,
		somId methodId);
typedef string   (SOMLINK * somTD_M_WPDrives_somGetName)(M_WPDrives *somSelf);
typedef boolean   (SOMLINK * somTD_M_WPDrives_somGetNthMethodData)(M_WPDrives *somSelf,
		long n,
		somMethodData* md);
typedef somId   (SOMLINK * somTD_M_WPDrives_somGetNthMethodInfo)(M_WPDrives *somSelf,
		long n,
		somId* descriptor);
typedef long   (SOMLINK * somTD_M_WPDrives_somGetNumMethods)(M_WPDrives *somSelf);
typedef long   (SOMLINK * somTD_M_WPDrives_somGetNumStaticMethods)(M_WPDrives *somSelf);
typedef SOMClass*   (SOMLINK * somTD_M_WPDrives_somGetParent)(M_WPDrives *somSelf);
typedef SOMClass_SOMClassSequence   (SOMLINK * somTD_M_WPDrives_somGetParents)(M_WPDrives *somSelf);
typedef somMethodTabs   (SOMLINK * somTD_M_WPDrives_somGetPClsMtab)(M_WPDrives *somSelf);
typedef somMethodTabs   (SOMLINK * somTD_M_WPDrives_somGetPClsMtabs)(M_WPDrives *somSelf);
typedef void   (SOMLINK * somTD_M_WPDrives_somGetVersionNumbers)(M_WPDrives *somSelf,
		long* majorVersion,
		long* minorVersion);
typedef boolean   (SOMLINK * somTD_M_WPDrives_somSetMethodDescriptor)(M_WPDrives *somSelf,
		somId methodId,
		somId descriptor);
typedef boolean   (SOMLINK * somTD_M_WPDrives_somFindMethod)(M_WPDrives *somSelf,
		somId methodId,
		somMethodPtr* m);
typedef boolean   (SOMLINK * somTD_M_WPDrives_somFindMethodOk)(M_WPDrives *somSelf,
		somId methodId,
		somMethodPtr* m);
typedef somMethodPtr   (SOMLINK * somTD_M_WPDrives_somFindSMethod)(M_WPDrives *somSelf,
		somId methodId);
typedef somMethodPtr   (SOMLINK * somTD_M_WPDrives_somFindSMethodOk)(M_WPDrives *somSelf,
		somId methodId);
typedef somMethodPtr   (SOMLINK * somTD_M_WPDrives_somLookupMethod)(M_WPDrives *somSelf,
		somId methodId);
typedef boolean   (SOMLINK * somTD_M_WPDrives_somCheckVersion)(M_WPDrives *somSelf,
		long majorVersion,
		long minorVersion);
typedef boolean   (SOMLINK * somTD_M_WPDrives_somDescendedFrom)(M_WPDrives *somSelf,
		SOMClass* aClassObj);
typedef boolean   (SOMLINK * somTD_M_WPDrives_somSupportsMethod)(M_WPDrives *somSelf,
		somId mId);
typedef somMethodPtr   (SOMLINK * somTD_M_WPDrives_somDefinedMethod)(M_WPDrives *somSelf,
		somMToken method);
typedef void   (SOMLINK * somTD_M_WPDrives_somOverrideMtab)(M_WPDrives *somSelf);
typedef void   (SOMLINK * somTD_M_WPDrives_somDefaultInit)(M_WPDrives *somSelf,
		somInitCtrl* ctrl);
typedef void   (SOMLINK * somTD_M_WPDrives_somDestruct)(M_WPDrives *somSelf,
		octet doFree,
		somDestructCtrl* ctrl);
typedef void   (SOMLINK * somTD_M_WPDrives_somDefaultCopyInit)(M_WPDrives *somSelf,
		somInitCtrl* ctrl,
		SOMObject* fromObj);
typedef M_WPDrives*   (SOMLINK * somTD_M_WPDrives_somDefaultAssign)(M_WPDrives *somSelf,
		somAssignCtrl* ctrl,
		SOMObject* fromObj);
typedef void   (SOMLINK * somTD_M_WPDrives_somDefaultConstCopyInit)(M_WPDrives *somSelf,
		somInitCtrl* ctrl,
		SOMObject* fromObj);
typedef void   (SOMLINK * somTD_M_WPDrives_somDefaultVCopyInit)(M_WPDrives *somSelf,
		somInitCtrl* ctrl,
		SOMObject* fromObj);
typedef void   (SOMLINK * somTD_M_WPDrives_somDefaultConstVCopyInit)(M_WPDrives *somSelf,
		somInitCtrl* ctrl,
		SOMObject* fromObj);
typedef M_WPDrives*   (SOMLINK * somTD_M_WPDrives_somDefaultConstAssign)(M_WPDrives *somSelf,
		somAssignCtrl* ctrl,
		SOMObject* fromObj);
typedef M_WPDrives*   (SOMLINK * somTD_M_WPDrives_somDefaultVAssign)(M_WPDrives *somSelf,
		somAssignCtrl* ctrl,
		SOMObject* fromObj);
typedef M_WPDrives*   (SOMLINK * somTD_M_WPDrives_somDefaultConstVAssign)(M_WPDrives *somSelf,
		somAssignCtrl* ctrl,
		SOMObject* fromObj);
typedef void   (SOMLINK * somTD_M_WPDrives_somInit)(M_WPDrives *somSelf);
typedef void   (SOMLINK * somTD_M_WPDrives_somFree)(M_WPDrives *somSelf);
typedef SOMClass*   (SOMLINK * somTD_M_WPDrives_somGetClass)(M_WPDrives *somSelf);
typedef string   (SOMLINK * somTD_M_WPDrives_somGetClassName)(M_WPDrives *somSelf);
typedef long   (SOMLINK * somTD_M_WPDrives_somGetSize)(M_WPDrives *somSelf);
typedef boolean   (SOMLINK * somTD_M_WPDrives_somIsA)(M_WPDrives *somSelf,
		SOMClass* aClassObj);
typedef boolean   (SOMLINK * somTD_M_WPDrives_somIsInstanceOf)(M_WPDrives *somSelf,
		SOMClass* aClassObj);
typedef boolean   (SOMLINK * somTD_M_WPDrives_somRespondsTo)(M_WPDrives *somSelf,
		somId mId);
typedef boolean   (SOMLINK * somTD_M_WPDrives_somDispatch)(M_WPDrives *somSelf,
		somToken* retValue,
		somId methodId,
		va_list ap);
typedef boolean   (SOMLINK * somTD_M_WPDrives_somClassDispatch)(M_WPDrives *somSelf,
		SOMClass* clsObj,
		somToken* retValue,
		somId methodId,
		va_list ap);
typedef boolean   (SOMLINK * somTD_M_WPDrives_somCastObj)(M_WPDrives *somSelf,
		SOMClass* cls);
typedef boolean   (SOMLINK * somTD_M_WPDrives_somResetObj)(M_WPDrives *somSelf);
typedef void   (SOMLINK * somTD_M_WPDrives_somDispatchV)(M_WPDrives *somSelf,
		somId methodId,
		somId descriptor,
		va_list ap);
typedef long   (SOMLINK * somTD_M_WPDrives_somDispatchL)(M_WPDrives *somSelf,
		somId methodId,
		somId descriptor,
		va_list ap);
typedef void*   (SOMLINK * somTD_M_WPDrives_somDispatchA)(M_WPDrives *somSelf,
		somId methodId,
		somId descriptor,
		va_list ap);
typedef double   (SOMLINK * somTD_M_WPDrives_somDispatchD)(M_WPDrives *somSelf,
		somId methodId,
		somId descriptor,
		va_list ap);
typedef SOMObject*   (SOMLINK * somTD_M_WPDrives_somPrintSelf)(M_WPDrives *somSelf);
typedef void   (SOMLINK * somTD_M_WPDrives_somDumpSelf)(M_WPDrives *somSelf,
		long level);
typedef void   (SOMLINK * somTD_M_WPDrives_somDumpSelfInt)(M_WPDrives *somSelf,
		long level);
}

#endif /* M_WPDrives_API */


/*
 * -- This emitter treats Method Tokens as Thunks by default.
 * -- Use the sc modifier "nothunks" to change this default
 */
#undef somresolve_
#define somresolve_(obj,mToken) ((somMethodProc*)((void)obj, mToken))

/*
 * -- The C++ Wrapper Class for M_WPDrives
 */
class M_WPDrives : public M_WPFolder
{
public:

// M_WPDrives::new creates the class object if necessary, and then uses somNewNoInit
// to allocate memory and create the object. Initialization is in ctors.
void *operator new(size_t size)
{
   SOM_IgnoreWarning(size);
   if (!_M_WPDrives) M_WPDrivesNewClass(M_WPDrives_MajorVersion,M_WPDrives_MinorVersion);
   return (void*)
      SOM_Resolve(_M_WPDrives,SOMClass,somNewNoInit)
         ((SOMClass *)((void*)_M_WPDrives));
}

// M_WPDrives::delete uses the default deallocator for the object's class.
void operator delete(void * obj)
{
   somToken objCls = obj ? *(void**)obj : (somToken) NULL;
   if (somIsObj(objCls)) {
      SOM_Resolve(objCls,SOMClass,somDeallocate)
         ((SOMClass*)objCls, (string)obj);
   }
}

M_WPDrives()
{
   if (*(void**)this != 
       ((somParentMtabStructPtr)
        (M_WPDrivesCClassData.parentMtab))->mtab)
      return;
   somDefaultInit(0);
}

M_WPDrives(M_WPDrives* fromObj)
{
   if (*(void**)this != 
       ((somParentMtabStructPtr)
        (M_WPDrivesCClassData.parentMtab))->mtab)
      return;
   somDefaultCopyInit(0,((SOMObject*)((void*)fromObj)));
}

M_WPDrives(const M_WPDrives* fromObj)
{
   if (*(void**)this != 
       ((somParentMtabStructPtr)
        (M_WPDrivesCClassData.parentMtab))->mtab)
      return;
   somDefaultConstCopyInit(0,((SOMObject*)((void*)fromObj)));
}

~M_WPDrives()
{
   if (!somIsObj(this)) return;
   somDestruct(0,0);
   *(void**)this = **(void***)this;
}


/*
 * Reintroduce inherited methods
 */

/* method: wpclsQueryIconDataN */
ULONG   wpclsQueryIconDataN(ICONINFO* pIconInfo,
		ULONG ulIconIndex)
{
   return SOM_ResolveD(this,M_WPDrives,M_WPFolder,wpclsQueryIconDataN)
	(this,pIconInfo,ulIconIndex);
}


/* method: wpclsQueryIconN */
HPOINTER   wpclsQueryIconN(ULONG ulIconIndex)
{
   return SOM_ResolveD(this,M_WPDrives,M_WPFolder,wpclsQueryIconN)
	(this,ulIconIndex);
}


/* method: wpclsQueryOpenFolders */
WPFolder*   wpclsQueryOpenFolders(WPFolder* Folder,
		ULONG ulOption,
		BOOL fLock)
{
   return SOM_ResolveD(this,M_WPDrives,M_WPFolder,wpclsQueryOpenFolders)
	(this,Folder,ulOption,fLock);
}


/* method: wpclsInitData */
void   wpclsInitData()
{
   SOM_ResolveD(this,M_WPDrives,M_WPObject,wpclsInitData)
	(this);
}


/* method: wpclsQueryDefaultView */
ULONG   wpclsQueryDefaultView()
{
   return SOM_ResolveD(this,M_WPDrives,M_WPObject,wpclsQueryDefaultView)
	(this);
}


/* method: wpclsQueryTitle */
PSZ   wpclsQueryTitle()
{
   return SOM_ResolveD(this,M_WPDrives,M_WPObject,wpclsQueryTitle)
	(this);
}


/* method: wpclsQueryIconData */
ULONG   wpclsQueryIconData(PICONINFO pIconInfo)
{
   return SOM_ResolveD(this,M_WPDrives,M_WPObject,wpclsQueryIconData)
	(this,pIconInfo);
}


/* method: wpclsQueryStyle */
ULONG   wpclsQueryStyle()
{
   return SOM_ResolveD(this,M_WPDrives,M_WPObject,wpclsQueryStyle)
	(this);
}


/* method: wpclsQueryDefaultHelp */
BOOL   wpclsQueryDefaultHelp(PULONG pHelpPanelId,
		PSZ pszHelpLibrary)
{
   return SOM_ResolveD(this,M_WPDrives,M_WPObject,wpclsQueryDefaultHelp)
	(this,pHelpPanelId,pszHelpLibrary);
}


/* method: wpclsQueryAwakeObject */
WPObject*   wpclsQueryAwakeObject(PSZ pszInputPath)
{
   return SOM_ResolveD(this,M_WPDrives,M_WPFileSystem,wpclsQueryAwakeObject)
	(this,pszInputPath);
}


/* method: wpclsFileSysExists */
WPObject*   wpclsFileSysExists(WPFolder* Folder,
		PSZ pszFilename,
		ULONG attrFile)
{
   return SOM_ResolveD(this,M_WPDrives,M_WPFileSystem,wpclsFileSysExists)
	(this,Folder,pszFilename,attrFile);
}


/* method: wpclsQueryObjectFromPath */
WPObject*   wpclsQueryObjectFromPath(PSZ pszFQPath)
{
   return SOM_ResolveD(this,M_WPDrives,M_WPFileSystem,wpclsQueryObjectFromPath)
	(this,pszFQPath);
}


/* method: wpclsQueryInstanceType */
PSZ   wpclsQueryInstanceType()
{
   return SOM_ResolveD(this,M_WPDrives,M_WPFileSystem,wpclsQueryInstanceType)
	(this);
}


/* method: wpclsQueryInstanceFilter */
PSZ   wpclsQueryInstanceFilter()
{
   return SOM_ResolveD(this,M_WPDrives,M_WPFileSystem,wpclsQueryInstanceFilter)
	(this);
}


/* method: wpclsQueryDetailsInfo */
ULONG   wpclsQueryDetailsInfo(PCLASSFIELDINFO* ppClassFieldInfo,
		PULONG pSize)
{
   return SOM_ResolveD(this,M_WPDrives,M_WPObject,wpclsQueryDetailsInfo)
	(this,ppClassFieldInfo,pSize);
}


/* method: wpclsQuerySearchInfo */
void   wpclsQuerySearchInfo(M_WPObject** ClassExtended,
		M_WPObject** ClassCreate,
		PULONG pulClassCriteriaSize)
{
   SOM_ResolveD(this,M_WPDrives,M_WPObject,wpclsQuerySearchInfo)
	(this,ClassExtended,ClassCreate,pulClassCriteriaSize);
}


/* method: wpclsQueryExtendedCriteria */
BOOL   wpclsQueryExtendedCriteria(PSZ pszName,
		ULONG ulSearchType,
		PVOID pvoidExtendedCriteria)
{
   return SOM_ResolveD(this,M_WPDrives,M_WPObject,wpclsQueryExtendedCriteria)
	(this,pszName,ulSearchType,pvoidExtendedCriteria);
}


/* method: wpclsNew */
WPObject*   wpclsNew(PSZ pszTitle,
		PSZ pszSetupEnv,
		WPFolder* Folder,
		BOOL fLock)
{
   return SOM_ResolveD(this,M_WPDrives,M_WPObject,wpclsNew)
	(this,pszTitle,pszSetupEnv,Folder,fLock);
}


/* method: wpclsCreateDefaultTemplates */
BOOL   wpclsCreateDefaultTemplates(WPObject* Folder)
{
   return SOM_ResolveD(this,M_WPDrives,M_WPObject,wpclsCreateDefaultTemplates)
	(this,Folder);
}


/* method: wpclsMakeAwake */
WPObject*   wpclsMakeAwake(PSZ pszTitle,
		ULONG ulStyle,
		HPOINTER hptrIcon,
		POBJDATA pObjData,
		WPFolder* Folder,
		ULONG ulUser)
{
   return SOM_ResolveD(this,M_WPDrives,M_WPObject,wpclsMakeAwake)
	(this,pszTitle,ulStyle,hptrIcon,pObjData,Folder,ulUser);
}


/* method: wpclsQueryDetails */
PCLASSDETAILS   wpclsQueryDetails()
{
   return SOM_ResolveD(this,M_WPDrives,M_WPObject,wpclsQueryDetails)
	(this);
}


/* method: wpclsQueryFolder */
WPObject*   wpclsQueryFolder(PSZ pszLocation,
		BOOL fLock)
{
   return SOM_ResolveD(this,M_WPDrives,M_WPObject,wpclsQueryFolder)
	(this,pszLocation,fLock);
}


/* method: wpclsQueryIcon */
HPOINTER   wpclsQueryIcon()
{
   return SOM_ResolveD(this,M_WPDrives,M_WPObject,wpclsQueryIcon)
	(this);
}


/* method: wpclsUnInitData */
void   wpclsUnInitData()
{
   SOM_ResolveD(this,M_WPDrives,M_WPObject,wpclsUnInitData)
	(this);
}


/* method: wpclsFindObjectFirst */
BOOL   wpclsFindObjectFirst(PCLASS pClassList,
		PHFIND phFind,
		PSZ pszTitle,
		WPFolder* Folder,
		BOOL fSubfolders,
		PVOID pExtendedCriteria,
		POBJECT pBuffer,
		PULONG pCount)
{
   return SOM_ResolveD(this,M_WPDrives,M_WPObject,wpclsFindObjectFirst)
	(this,pClassList,phFind,pszTitle,Folder,fSubfolders,pExtendedCriteria,pBuffer,pCount);
}


/* method: wpclsFindObjectNext */
BOOL   wpclsFindObjectNext(HFIND hFind,
		POBJECT pBuffer,
		PULONG pCount)
{
   return SOM_ResolveD(this,M_WPDrives,M_WPObject,wpclsFindObjectNext)
	(this,hFind,pBuffer,pCount);
}


/* method: wpclsFindObjectEnd */
BOOL   wpclsFindObjectEnd(HFIND hFind)
{
   return SOM_ResolveD(this,M_WPDrives,M_WPObject,wpclsFindObjectEnd)
	(this,hFind);
}


/* method: wpclsSetError */
BOOL   wpclsSetError(ULONG ulErrorId)
{
   return SOM_ResolveD(this,M_WPDrives,M_WPObject,wpclsSetError)
	(this,ulErrorId);
}


/* method: wpclsQueryError */
ULONG   wpclsQueryError()
{
   return SOM_ResolveD(this,M_WPDrives,M_WPObject,wpclsQueryError)
	(this);
}


/* method: wpclsQuerySettingsPageSize */
BOOL   wpclsQuerySettingsPageSize(PSIZEL pSizl)
{
   return SOM_ResolveD(this,M_WPDrives,M_WPObject,wpclsQuerySettingsPageSize)
	(this,pSizl);
}


/* method: wpclsQueryObject */
WPObject*   wpclsQueryObject(HOBJECT hObject)
{
   return SOM_ResolveD(this,M_WPDrives,M_WPObject,wpclsQueryObject)
	(this,hObject);
}


/* method: wpclsQueryButtonAppearance */
ULONG   wpclsQueryButtonAppearance()
{
   return SOM_ResolveD(this,M_WPDrives,M_WPObject,wpclsQueryButtonAppearance)
	(this);
}


/* method: wpclsDecUsage */
void   wpclsDecUsage()
{
   SOM_ResolveD(this,M_WPDrives,M_WPObject,wpclsDecUsage)
	(this);
}


/* method: wpclsIncUsage */
void   wpclsIncUsage()
{
   SOM_ResolveD(this,M_WPDrives,M_WPObject,wpclsIncUsage)
	(this);
}


/* method: wpclsInsertMultipleObjects */
BOOL   wpclsInsertMultipleObjects(HWND hwndCnr,
		PPOINTL pptlIcon,
		PVOID* pObjectArray,
		PVOID pRecordParent,
		ULONG NumRecords)
{
   return SOM_ResolveD(this,M_WPDrives,M_WPObject,wpclsInsertMultipleObjects)
	(this,hwndCnr,pptlIcon,pObjectArray,pRecordParent,NumRecords);
}


/* method: wpclsFindOneObject */
WPObject*   wpclsFindOneObject(HWND hwndOwner,
		PSZ pszFindParams)
{
   return SOM_ResolveD(this,M_WPDrives,M_WPObject,wpclsFindOneObject)
	(this,hwndOwner,pszFindParams);
}


/* method: wpclsSetSettingsPageSize */
BOOL   wpclsSetSettingsPageSize(PSIZEL pSizl)
{
   return SOM_ResolveD(this,M_WPDrives,M_WPObject,wpclsSetSettingsPageSize)
	(this,pSizl);
}


/* method: wpclsSetIconData */
BOOL   wpclsSetIconData(PICONINFO pIconInfo)
{
   return SOM_ResolveD(this,M_WPDrives,M_WPObject,wpclsSetIconData)
	(this,pIconInfo);
}


/* method: wpclsSetIcon */
BOOL   wpclsSetIcon(HPOINTER hptrNewIcon)
{
   return SOM_ResolveD(this,M_WPDrives,M_WPObject,wpclsSetIcon)
	(this,hptrNewIcon);
}


/* method: wpclsObjectFromHandle */
WPObject*   wpclsObjectFromHandle(HOBJECT hObject)
{
   return SOM_ResolveD(this,M_WPDrives,M_WPObject,wpclsObjectFromHandle)
	(this,hObject);
}


/* method: wpclsRemoveObjects */
BOOL   wpclsRemoveObjects(HWND hwndCnr,
		PVOID* pRecordArray,
		ULONG NumRecords,
		BOOL RemoveAll)
{
   return SOM_ResolveD(this,M_WPDrives,M_WPObject,wpclsRemoveObjects)
	(this,hwndCnr,pRecordArray,NumRecords,RemoveAll);
}


/* method: somUninit */
void   somUninit()
{
   SOM_ResolveD(this,M_WPDrives,SOMObject,somUninit)
	(this);
}


/* method: somClassReady */
void   somClassReady()
{
   SOM_ResolveD(this,M_WPDrives,SOMClass,somClassReady)
	(this);
}


/* method: somNew */
WPDrives*  somNew()
{
   return SOM_ResolveD(this,M_WPDrives,SOMClass,somNew)
	(this);
}


/* method: somRenew */
SOMObject*   somRenew(void* obj)
{
   return SOM_ResolveD(this,M_WPDrives,SOMClass,somRenew)
	(this,obj);
}


/* method: _get_somDataAlignment */
long   _get_somDataAlignment()
{
   return SOM_ResolveD(this,M_WPDrives,SOMClass,_get_somDataAlignment)
	(this);
}


/* nonstatic method: _get_somInstanceDataOffsets */
SOMClass_somOffsets   _get_somInstanceDataOffsets()
{
   return SOM_ResolveD(this,M_WPDrives,SOMClass,_get_somInstanceDataOffsets)
	(this);
}


/* nonstatic method: _get_somDirectInitClasses */
SOMClass_SOMClassSequence   _get_somDirectInitClasses()
{
   return SOM_ResolveD(this,M_WPDrives,SOMClass,_get_somDirectInitClasses)
	(this);
}


/* nonstatic method: _set_somDirectInitClasses */
void   _set_somDirectInitClasses(SOMClass_SOMClassSequence* somDirectInitClasses)
{
   SOM_ResolveD(this,M_WPDrives,SOMClass,_set_somDirectInitClasses)
	(this,somDirectInitClasses);
}


/* method: somNewNoInit */
SOMObject*   somNewNoInit()
{
   return SOM_ResolveD(this,M_WPDrives,SOMClass,somNewNoInit)
	(this);
}


/* method: somRenewNoInit */
SOMObject*   somRenewNoInit(void* obj)
{
   return SOM_ResolveD(this,M_WPDrives,SOMClass,somRenewNoInit)
	(this,obj);
}


/* method: somRenewNoZero */
SOMObject*   somRenewNoZero(void* obj)
{
   return SOM_ResolveD(this,M_WPDrives,SOMClass,somRenewNoZero)
	(this,obj);
}


/* method: somRenewNoInitNoZero */
SOMObject*   somRenewNoInitNoZero(void* obj)
{
   return SOM_ResolveD(this,M_WPDrives,SOMClass,somRenewNoInitNoZero)
	(this,obj);
}


/* nonstatic method: somAllocate */
string   somAllocate(long size)
{
   return SOM_ResolveD(this,M_WPDrives,SOMClass,somAllocate)
	(this,size);
}


/* nonstatic method: somDeallocate */
void   somDeallocate(string memptr)
{
   SOM_ResolveD(this,M_WPDrives,SOMClass,somDeallocate)
	(this,memptr);
}


/* nonstatic method: _get_somClassAllocate */
somMethodProc*   _get_somClassAllocate()
{
   return SOM_ResolveD(this,M_WPDrives,SOMClass,_get_somClassAllocate)
	(this);
}


/* nonstatic method: _get_somClassDeallocate */
somMethodProc*   _get_somClassDeallocate()
{
   return SOM_ResolveD(this,M_WPDrives,SOMClass,_get_somClassDeallocate)
	(this);
}


/* method: somGetInstanceInitMask */
somBooleanVector   somGetInstanceInitMask(somInitCtrl* ctrl)
{
   return SOM_ResolveD(this,M_WPDrives,SOMClass,somGetInstanceInitMask)
	(this,ctrl);
}


/* method: somGetInstanceDestructionMask */
somBooleanVector   somGetInstanceDestructionMask(somDestructCtrl* ctrl)
{
   return SOM_ResolveD(this,M_WPDrives,SOMClass,somGetInstanceDestructionMask)
	(this,ctrl);
}


/* method: somGetInstanceAssignmentMask */
somBooleanVector   somGetInstanceAssignmentMask(somAssignCtrl* ctrl)
{
   return SOM_ResolveD(this,M_WPDrives,SOMClass,somGetInstanceAssignmentMask)
	(this,ctrl);
}


/* method: somInitClass */
void   somInitClass(string className,
		SOMClass* parentClass,
		long dataSize,
		long maxStaticMethods,
		long majorVersion,
		long minorVersion)
{
   SOM_ResolveD(this,M_WPDrives,SOMClass,somInitClass)
	(this,className,parentClass,dataSize,maxStaticMethods,majorVersion,minorVersion);
}


/* method: somInitMIClass */
void   somInitMIClass(long inherit_vars,
		string className,
		SOMClass_SOMClassSequence* parentClasses,
		long dataSize,
		long dataAlignment,
		long maxStaticMethods,
		long majorVersion,
		long minorVersion)
{
   SOM_ResolveD(this,M_WPDrives,SOMClass,somInitMIClass)
	(this,inherit_vars,className,parentClasses,dataSize,dataAlignment,maxStaticMethods,majorVersion,minorVersion);
}


/* method: somAddStaticMethod */
somMToken   somAddStaticMethod(somId methodId,
		somId methodDescriptor,
		somMethodPtr method,
		somMethodPtr redispatchStub,
		somMethodPtr applyStub)
{
   return SOM_ResolveD(this,M_WPDrives,SOMClass,somAddStaticMethod)
	(this,methodId,methodDescriptor,method,redispatchStub,applyStub);
}


/* method: somAddDynamicMethod */
void   somAddDynamicMethod(somId methodId,
		somId methodDescriptor,
		somMethodPtr method,
		somMethodPtr applyStub)
{
   SOM_ResolveD(this,M_WPDrives,SOMClass,somAddDynamicMethod)
	(this,methodId,methodDescriptor,method,applyStub);
}


/* method: somOverrideSMethod */
void   somOverrideSMethod(somId methodId,
		somMethodPtr method)
{
   SOM_ResolveD(this,M_WPDrives,SOMClass,somOverrideSMethod)
	(this,methodId,method);
}


/* method: somGetApplyStub */
somMethodPtr   somGetApplyStub(somId methodId)
{
   return SOM_ResolveD(this,M_WPDrives,SOMClass,somGetApplyStub)
	(this,methodId);
}


/* method: somGetClassData */
somClassDataStructure*   somGetClassData()
{
   return SOM_ResolveD(this,M_WPDrives,SOMClass,somGetClassData)
	(this);
}


/* method: somSetClassData */
void   somSetClassData(somClassDataStructure* cds)
{
   SOM_ResolveD(this,M_WPDrives,SOMClass,somSetClassData)
	(this,cds);
}


/* method: somGetClassMtab */
somMethodTab*   somGetClassMtab()
{
   return SOM_ResolveD(this,M_WPDrives,SOMClass,somGetClassMtab)
	(this);
}


/* method: somGetInstanceOffset */
long   somGetInstanceOffset()
{
   return SOM_ResolveD(this,M_WPDrives,SOMClass,somGetInstanceOffset)
	(this);
}


/* method: somGetInstancePartSize */
long   somGetInstancePartSize()
{
   return SOM_ResolveD(this,M_WPDrives,SOMClass,somGetInstancePartSize)
	(this);
}


/* method: somGetInstanceSize */
long   somGetInstanceSize()
{
   return SOM_ResolveD(this,M_WPDrives,SOMClass,somGetInstanceSize)
	(this);
}


/* method: somGetInstanceToken */
somDToken   somGetInstanceToken()
{
   return SOM_ResolveD(this,M_WPDrives,SOMClass,somGetInstanceToken)
	(this);
}


/* method: somGetMemberToken */
somDToken   somGetMemberToken(long memberOffset,
		somDToken instanceToken)
{
   return SOM_ResolveD(this,M_WPDrives,SOMClass,somGetMemberToken)
	(this,memberOffset,instanceToken);
}


/* method: somGetMethodData */
boolean   somGetMethodData(somId methodId,
		somMethodData* md)
{
   return SOM_ResolveD(this,M_WPDrives,SOMClass,somGetMethodData)
	(this,methodId,md);
}


/* method: somGetRdStub */
somMethodProc*   somGetRdStub(somId methodId)
{
   return SOM_ResolveD(this,M_WPDrives,SOMClass,somGetRdStub)
	(this,methodId);
}


/* method: somGetMethodDescriptor */
somId   somGetMethodDescriptor(somId methodId)
{
   return SOM_ResolveD(this,M_WPDrives,SOMClass,somGetMethodDescriptor)
	(this,methodId);
}


/* method: somGetMethodIndex */
long   somGetMethodIndex(somId id)
{
   return SOM_ResolveD(this,M_WPDrives,SOMClass,somGetMethodIndex)
	(this,id);
}


/* method: somGetMethodToken */
somMToken   somGetMethodToken(somId methodId)
{
   return SOM_ResolveD(this,M_WPDrives,SOMClass,somGetMethodToken)
	(this,methodId);
}


/* method: somGetName */
string   somGetName()
{
   return SOM_ResolveD(this,M_WPDrives,SOMClass,somGetName)
	(this);
}


/* method: somGetNthMethodData */
boolean   somGetNthMethodData(long n,
		somMethodData* md)
{
   return SOM_ResolveD(this,M_WPDrives,SOMClass,somGetNthMethodData)
	(this,n,md);
}


/* method: somGetNthMethodInfo */
somId   somGetNthMethodInfo(long n,
		somId* descriptor)
{
   return SOM_ResolveD(this,M_WPDrives,SOMClass,somGetNthMethodInfo)
	(this,n,descriptor);
}


/* method: somGetNumMethods */
long   somGetNumMethods()
{
   return SOM_ResolveD(this,M_WPDrives,SOMClass,somGetNumMethods)
	(this);
}


/* method: somGetNumStaticMethods */
long   somGetNumStaticMethods()
{
   return SOM_ResolveD(this,M_WPDrives,SOMClass,somGetNumStaticMethods)
	(this);
}


/* method: somGetParent */
SOMClass*   somGetParent()
{
   return SOM_ResolveD(this,M_WPDrives,SOMClass,somGetParent)
	(this);
}


/* method: somGetParents */
SOMClass_SOMClassSequence   somGetParents()
{
   return SOM_ResolveD(this,M_WPDrives,SOMClass,somGetParents)
	(this);
}


/* method: somGetPClsMtab */
somMethodTabs   somGetPClsMtab()
{
   return SOM_ResolveD(this,M_WPDrives,SOMClass,somGetPClsMtab)
	(this);
}


/* method: somGetPClsMtabs */
somMethodTabs   somGetPClsMtabs()
{
   return SOM_ResolveD(this,M_WPDrives,SOMClass,somGetPClsMtabs)
	(this);
}


/* method: somGetVersionNumbers */
void   somGetVersionNumbers(long* majorVersion,
		long* minorVersion)
{
   SOM_ResolveD(this,M_WPDrives,SOMClass,somGetVersionNumbers)
	(this,majorVersion,minorVersion);
}


/* method: somSetMethodDescriptor */
boolean   somSetMethodDescriptor(somId methodId,
		somId descriptor)
{
   return SOM_ResolveD(this,M_WPDrives,SOMClass,somSetMethodDescriptor)
	(this,methodId,descriptor);
}


/* method: somFindMethod */
boolean   somFindMethod(somId methodId,
		somMethodPtr* m)
{
   return SOM_ResolveD(this,M_WPDrives,SOMClass,somFindMethod)
	(this,methodId,m);
}


/* method: somFindMethodOk */
boolean   somFindMethodOk(somId methodId,
		somMethodPtr* m)
{
   return SOM_ResolveD(this,M_WPDrives,SOMClass,somFindMethodOk)
	(this,methodId,m);
}


/* method: somFindSMethod */
somMethodPtr   somFindSMethod(somId methodId)
{
   return SOM_ResolveD(this,M_WPDrives,SOMClass,somFindSMethod)
	(this,methodId);
}


/* method: somFindSMethodOk */
somMethodPtr   somFindSMethodOk(somId methodId)
{
   return SOM_ResolveD(this,M_WPDrives,SOMClass,somFindSMethodOk)
	(this,methodId);
}


/* method: somLookupMethod */
somMethodPtr   somLookupMethod(somId methodId)
{
   return SOM_ResolveD(this,M_WPDrives,SOMClass,somLookupMethod)
	(this,methodId);
}


/* method: somCheckVersion */
boolean   somCheckVersion(long majorVersion,
		long minorVersion)
{
   return SOM_ResolveD(this,M_WPDrives,SOMClass,somCheckVersion)
	(this,majorVersion,minorVersion);
}


/* method: somDescendedFrom */
boolean   somDescendedFrom(SOMClass* aClassObj)
{
   return SOM_ResolveD(this,M_WPDrives,SOMClass,somDescendedFrom)
	(this,aClassObj);
}


/* method: somSupportsMethod */
boolean   somSupportsMethod(somId mId)
{
   return SOM_ResolveD(this,M_WPDrives,SOMClass,somSupportsMethod)
	(this,mId);
}


/* method: somDefinedMethod */
somMethodPtr   somDefinedMethod(somMToken method)
{
   return SOM_ResolveD(this,M_WPDrives,SOMClass,somDefinedMethod)
	(this,method);
}


/* method: somOverrideMtab */
void   somOverrideMtab()
{
   SOM_ResolveD(this,M_WPDrives,SOMClass,somOverrideMtab)
	(this);
}


/* initializer method: somDefaultInit */
void   somDefaultInit(somInitCtrl* ctrl)
{
   SOM_ResolveD(this,M_WPDrives,SOMObject,somDefaultInit)
	(this,ctrl);
}


/* method: somDestruct */
void   somDestruct(octet doFree,
		somDestructCtrl* ctrl)
{
   SOM_ResolveD(this,M_WPDrives,SOMObject,somDestruct)
	(this,doFree,ctrl);
}


/* method: somDefaultCopyInit */
void   somDefaultCopyInit(somInitCtrl* ctrl,
		SOMObject* fromObj)
{
   SOM_ResolveD(this,M_WPDrives,SOMObject,somDefaultCopyInit)
	(this,ctrl,fromObj);
}


/* method: somDefaultAssign */
M_WPDrives*  somDefaultAssign(somAssignCtrl* ctrl,
		SOMObject* fromObj)
{
   return SOM_ResolveD(this,M_WPDrives,SOMObject,somDefaultAssign)
	(this,ctrl,fromObj);
}


/* method: somDefaultConstCopyInit */
void   somDefaultConstCopyInit(somInitCtrl* ctrl,
		SOMObject* fromObj)
{
   SOM_ResolveD(this,M_WPDrives,SOMObject,somDefaultConstCopyInit)
	(this,ctrl,fromObj);
}


/* method: somDefaultVCopyInit */
void   somDefaultVCopyInit(somInitCtrl* ctrl,
		SOMObject* fromObj)
{
   SOM_ResolveD(this,M_WPDrives,SOMObject,somDefaultVCopyInit)
	(this,ctrl,fromObj);
}


/* method: somDefaultConstVCopyInit */
void   somDefaultConstVCopyInit(somInitCtrl* ctrl,
		SOMObject* fromObj)
{
   SOM_ResolveD(this,M_WPDrives,SOMObject,somDefaultConstVCopyInit)
	(this,ctrl,fromObj);
}


/* method: somDefaultConstAssign */
M_WPDrives*  somDefaultConstAssign(somAssignCtrl* ctrl,
		SOMObject* fromObj)
{
   return SOM_ResolveD(this,M_WPDrives,SOMObject,somDefaultConstAssign)
	(this,ctrl,fromObj);
}


/* method: somDefaultVAssign */
M_WPDrives*  somDefaultVAssign(somAssignCtrl* ctrl,
		SOMObject* fromObj)
{
   return SOM_ResolveD(this,M_WPDrives,SOMObject,somDefaultVAssign)
	(this,ctrl,fromObj);
}


/* method: somDefaultConstVAssign */
M_WPDrives*  somDefaultConstVAssign(somAssignCtrl* ctrl,
		SOMObject* fromObj)
{
   return SOM_ResolveD(this,M_WPDrives,SOMObject,somDefaultConstVAssign)
	(this,ctrl,fromObj);
}


/* method: somInit */
void   somInit()
{
   SOM_ResolveD(this,M_WPDrives,SOMObject,somInit)
	(this);
}


/* method: somFree */
void   somFree()
{
   SOM_ResolveD(this,M_WPDrives,SOMObject,somFree)
	(this);
}


/* method: somGetClass */
SOMClass*   somGetClass()
{
   return SOM_ResolveD(this,M_WPDrives,SOMObject,somGetClass)
	(this);
}


/* method: somGetClassName */
string   somGetClassName()
{
   return SOM_ResolveD(this,M_WPDrives,SOMObject,somGetClassName)
	(this);
}


/* method: somGetSize */
long   somGetSize()
{
   return SOM_ResolveD(this,M_WPDrives,SOMObject,somGetSize)
	(this);
}


/* method: somIsA */
boolean   somIsA(SOMClass* aClassObj)
{
   return SOM_ResolveD(this,M_WPDrives,SOMObject,somIsA)
	(this,aClassObj);
}


/* method: somIsInstanceOf */
boolean   somIsInstanceOf(SOMClass* aClassObj)
{
   return SOM_ResolveD(this,M_WPDrives,SOMObject,somIsInstanceOf)
	(this,aClassObj);
}


/* method: somRespondsTo */
boolean   somRespondsTo(somId mId)
{
   return SOM_ResolveD(this,M_WPDrives,SOMObject,somRespondsTo)
	(this,mId);
}


/* va_list method: somDispatch */
/* the va_list invocation form */
boolean   M_WPDrives_somDispatch(somToken* retValue,
		somId methodId,
		va_list ap)
{
return SOM_ResolveD(this,M_WPDrives,SOMObject,somDispatch)
	(this,retValue,methodId,ap);
}

/* the varargs invocation form */
boolean   somDispatch(somToken* retValue,
		somId methodId,
		...)
{
   va_list ap;
   va_start(ap, methodId);
   boolean __somResult = 
      SOM_ResolveD(this,M_WPDrives,SOMObject,somDispatch)
	(this,retValue,methodId,ap);
   va_end(ap);
   return __somResult;
}


/* va_list method: somClassDispatch */
/* the va_list invocation form */
boolean   M_WPDrives_somClassDispatch(SOMClass* clsObj,
		somToken* retValue,
		somId methodId,
		va_list ap)
{
return SOM_ResolveD(this,M_WPDrives,SOMObject,somClassDispatch)
	(this,clsObj,retValue,methodId,ap);
}

/* the varargs invocation form */
boolean   somClassDispatch(SOMClass* clsObj,
		somToken* retValue,
		somId methodId,
		...)
{
   va_list ap;
   va_start(ap, methodId);
   boolean __somResult = 
      SOM_ResolveD(this,M_WPDrives,SOMObject,somClassDispatch)
	(this,clsObj,retValue,methodId,ap);
   va_end(ap);
   return __somResult;
}


/* method: somCastObj */
boolean   somCastObj(SOMClass* cls)
{
   return SOM_ResolveD(this,M_WPDrives,SOMObject,somCastObj)
	(this,cls);
}


/* method: somResetObj */
boolean   somResetObj()
{
   return SOM_ResolveD(this,M_WPDrives,SOMObject,somResetObj)
	(this);
}


/* va_list method: somDispatchV */
/* the va_list invocation form */
void   M_WPDrives_somDispatchV(somId methodId,
		somId descriptor,
		va_list ap)
{
   SOM_ResolveD(this,M_WPDrives,SOMObject,somDispatchV)
	(this,methodId,descriptor,ap);
}

/* the varargs invocation form */
void   somDispatchV(somId methodId,
		somId descriptor,
		...)
{
   va_list ap;
   va_start(ap, descriptor);
   SOM_ResolveD(this,M_WPDrives,SOMObject,somDispatchV)
	(this,methodId,descriptor,ap);
   va_end(ap);
}


/* va_list method: somDispatchL */
/* the va_list invocation form */
long   M_WPDrives_somDispatchL(somId methodId,
		somId descriptor,
		va_list ap)
{
return SOM_ResolveD(this,M_WPDrives,SOMObject,somDispatchL)
	(this,methodId,descriptor,ap);
}

/* the varargs invocation form */
long   somDispatchL(somId methodId,
		somId descriptor,
		...)
{
   va_list ap;
   va_start(ap, descriptor);
   long __somResult = 
      SOM_ResolveD(this,M_WPDrives,SOMObject,somDispatchL)
	(this,methodId,descriptor,ap);
   va_end(ap);
   return __somResult;
}


/* va_list method: somDispatchA */
/* the va_list invocation form */
void*   M_WPDrives_somDispatchA(somId methodId,
		somId descriptor,
		va_list ap)
{
return SOM_ResolveD(this,M_WPDrives,SOMObject,somDispatchA)
	(this,methodId,descriptor,ap);
}

/* the varargs invocation form */
void*   somDispatchA(somId methodId,
		somId descriptor,
		...)
{
   va_list ap;
   va_start(ap, descriptor);
   void* __somResult = 
      SOM_ResolveD(this,M_WPDrives,SOMObject,somDispatchA)
	(this,methodId,descriptor,ap);
   va_end(ap);
   return __somResult;
}


/* va_list method: somDispatchD */
/* the va_list invocation form */
double   M_WPDrives_somDispatchD(somId methodId,
		somId descriptor,
		va_list ap)
{
return SOM_ResolveD(this,M_WPDrives,SOMObject,somDispatchD)
	(this,methodId,descriptor,ap);
}

/* the varargs invocation form */
double   somDispatchD(somId methodId,
		somId descriptor,
		...)
{
   va_list ap;
   va_start(ap, descriptor);
   double __somResult = 
      SOM_ResolveD(this,M_WPDrives,SOMObject,somDispatchD)
	(this,methodId,descriptor,ap);
   va_end(ap);
   return __somResult;
}


/* method: somPrintSelf */
SOMObject*   somPrintSelf()
{
   return SOM_ResolveD(this,M_WPDrives,SOMObject,somPrintSelf)
	(this);
}


/* method: somDumpSelf */
void   somDumpSelf(long level)
{
   SOM_ResolveD(this,M_WPDrives,SOMObject,somDumpSelf)
	(this,level);
}


/* method: somDumpSelfInt */
void   somDumpSelfInt(long level)
{
   SOM_ResolveD(this,M_WPDrives,SOMObject,somDumpSelfInt)
	(this,level);
}



};   /* M_WPDrives */



#endif       /* SOM_M_WPDrives_xh */
