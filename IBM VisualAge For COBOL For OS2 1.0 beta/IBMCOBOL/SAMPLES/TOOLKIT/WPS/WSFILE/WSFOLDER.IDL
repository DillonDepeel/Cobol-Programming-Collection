
//# This file was generated by the SOM Compiler.
//# FileName: wsfolder.id2.
//# Generated using:
//#     SOM Precompiler somopc: 2.7
//#     SOM Emitter emitidl: 2.22

//
//
//   Module Name: WSFOLDER
//
//   OS/2 Work Place Shell Sample Program
//
//   Copyright (C) 1995 IBM Corporation
//
//       DISCLAIMER OF WARRANTIES.  The following code is
//       sample code created by IBM Corporation. This sample code is not
//       part of any standard or IBM product and is provided to you solely
//       for  the purpose of assisting you in the development of your
//       applications.  The code is provided "AS IS", without
//       warranty of any kind.  IBM shall not be liable for any damages
//       arising out of your use of the sample code, even if they have been
//       advised of the possibility of such damages.
//

#ifndef wsfolder_idl
#define wsfolder_idl

#include "wpfolder.idl"
#include <somcls.idl>

interface M_WSFOLDER;

interface WSFOLDER : WPFolder

//
// CLASS: WSFOLDER
//
// CLASS HIERARCHY:
//
//     SOMObject
//       ÀÄÄ WPObject
//             ÀÄÄ WPFileSystem
//                   ÀÄÄ WPFolder
//                         ÀÄÄ  WSFOLDER
//
// DESCRIPTION:
//
//    This is the sample WSFOLDER object class.
//
//    An instance of this class can be created as a Workplace object.
//

{
  void closeViews();

  //
  //  METHOD: closeViews                                     ( ) PRIVATE
  //                                                         (X) PUBLIC
  //  DESCRIPTION:
  //
  //    Close all but the first open view of a wsfolder object.
  //

  HWND queryFirstViewHandle();

  //
  //  METHOD: queryFirstViewHandle                           ( ) PRIVATE
  //                                                         (X) PUBLIC
  //  DESCRIPTION:
  //
  //    return the handle of the view that was opened first of the
  //    currently open views of this wsfolder object.
  //

  BOOL setFirstViewHandle(in HWND hwndView);

  //
  //  METHOD: setFirstViewHandle                             ( ) PRIVATE
  //                                                         (X) PUBLIC
  //  DESCRIPTION:
  //
  //    Do special processing on first open of folder
  //
  //  PARAMETERS:
  //
  //     HWND - hwnd of the first currently open view of this object
  //
  //  RETURNS:
  //
  //     TRUE - hwnd set successfully
  //     FALSE - first hwnd wasn't set successfully
  //



#ifdef __SOMIDL__
  implementation {

    releaseorder: closeViews,queryFirstViewHandle,setFirstViewHandle;

    //# Class Modifiers
    externalstem = wsfold;
    local;
    externalprefix = wsfold_;
    majorversion = 1;
    minorversion = 2;
    filestem = wsfolder;
    metaclass = M_WSFOLDER;
    callstyle = oidl;

#ifdef __PRIVATE__
    passthru C_h_after =     ""
"   /*"
"    *   Private Debug helpers go here.  They can be enabled/disabled by"
"    *   defining DEBUG as a compiler directive."
"    */"
"   #if defined(DEBUG)"
""
"      #define DebugBox(title, text) \"
"                                    \"
"                 WinMessageBox(     \"
"                    HWND_DESKTOP,   \"
"                    HWND_DESKTOP,   \"
"                    (PSZ) text,     \"
"                    (PSZ) title,    \"
"                    20,             \"
"                    MB_OK | MB_INFORMATION | MB_MOVEABLE)"
"   #else"
"      #define DebugBox(title, text)   /* do nothing if not debugging */"
"   #endif"
"";
#endif /* __PRIVATE__ */

    passthru C_ih =     ""
"   #define ID_TITLE           100"
"   #define ID_ICON            101"
""
"   #define ID_CLOSEVIEWSMENU     (WPMENUID_USER+1) /* menus added to main popup menu */"
""
"   #define IDM_CLOSEVIEWS        (WPMENUID_USER+2) /* submenus of added menus */"
""
"   /*"
"    *   Help IDs"
"    *"
"    *   NOTE:  see wsfolder.ipf for the source to the help, from which"
"    *          wsfolder.hlp is built"
"    */"
""
"   #define ID_HELP_DEFAULT    256"
"   #define ID_HELP_CLOSEVIEWS 257"
""
""
"";


    //# Internal Instance Variables
    HWND hwndFirstView;

    //# Method Modifiers
    wpOpen: override;
    wpInitData: override;
    wpModifyPopupMenu: override;
    wpMenuItemSelected: override;
    wpMenuItemHelpSelected: override;
    wpClose: override;
    wpDragOver: override;
    wpDrop: override;
    wpDeleteFromObjUseList: override;
    wpQueryConcurrentView: override;
    wpPrintObject: override;

    //# Data Modifiers

  };
#endif /* __SOMIDL__ */
};

interface M_WSFOLDER
{
  HMODULE clsQueryModuleHandle();

  //
  // METHOD: clsQueryModuleHandle                           ( ) PRIVATE
  //                                                        (X) PUBLIC
  // DESCRIPTION:
  //
  //   This method returns the module handle of this class.  If this is the
  //   first invocation, DosQueryModuleHandle is called to save the handle
  //   for future invocations.
  //
  // RETURN:
  //
  //   0              Unsuccessful
  //   non-zero       module handle
  //



#ifdef __SOMIDL__
  implementation {

    releaseorder: clsQueryModuleHandle;

    //# Class Modifiers
    externalstem = wsfold;
    local;
    externalprefix = wsfold_;
    functionprefix = wsfoldM_;
    majorversion = 1;
    minorversion = 2;
    filestem = wsfolder;
    callstyle = oidl;

    //# Method Modifiers
    wpclsInitData: override;
    wpclsQueryTitle: override;
    wpclsQueryIconData: override;
    wpclsQueryDefaultHelp: override;
    wpclsQueryDefaultView: override;
    wpclsQueryStyle: override;

  };
#endif /* __SOMIDL__ */
};

#endif  /* wsfolder_idl */
