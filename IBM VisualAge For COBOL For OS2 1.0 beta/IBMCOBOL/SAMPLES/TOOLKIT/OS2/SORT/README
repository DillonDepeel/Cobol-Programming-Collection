

SORT - Multithreaded Sample (Sorting Algorithm)


DESCRIPTION:

This program demonstrates the use of many threads by doing
multiple sorts simultaneously. The routine which handles the main
window's messages is the main thread,  the routine which updates the
display is run from another thread, and each sorting algorithm
runs from a separate thread.

The display thread is started when the program begins and is not
terminated as the display routine is used throughout the program's life
(default cleanup terminates the display thread).

TASK:
Multiple simultaneous sorts using different sorting algorithms.

CONCEPT/FEATURE:
Sample program to illustrate the use of threads for sorting

SAMPLE LOCATION:
Inside the OS/2 Sample Programs folder (which is inside the 
VisualAge C++ Samples folder).

Note: This sample is not provided in project form.

SOURCE FILE LOCATION:

X:\ibmcpp\samples\toolkit\os2\sort
where X: is the drive you installed the samples and document component
of VisualAge C++ for OS/2.


HOW TO RUN THE SAMPLE:

-From your OS/2 desktop:
 Double-click on the sample's icon.

-From an OS/2 command prompt:
To start a non-WorkPlace Shell sample program from an OS/2 command
prompt, type the name of the executable file and press Enter.  If you
have edited source code of a sample program and want to recompile,link,
and run the files, use the NMAKE tool. Your output is the executable
file.  For information about the NMAKE utility, see the
OS/2 Tools Reference.


SOFTWARE/HARDWARE PREREQUISITES:

- IBM VisualAge C++
- OS/2 Warp
- IBM or compatible 386 and up.

REQUIRED FILES      DESCRIPTION

  readme            This file
  sort.c            The main() and support routines
  sort.def          link definitions file
  sort.dlg          Dialog resource file
  sort.exe          The executable
  sort.h            Global definitions
  sort.hlp          Help Manager resource file
  sort.ico
  sort.ipf
  sort.mak          MakeMake generated makefie
  sort.rc



