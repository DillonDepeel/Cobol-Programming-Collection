*******************************************************************************
*  Config file for PL/I files
*******************************************************************************
*
*
*
*   The basic format is:
*   A line starting with '*' is a comment
*   Other lines have the layout
*       - optional leading blanks
*       - comma separated list of keyword names (spaces are allowed
*         round the commas ie keyword1  ,  keyword2 is ok.)
*         Case is irrelevant.
*       - at least one space
*       - IFP resource id. Must be numeric, or an '*' which tells the parser
*         there is no help id for it to use.
*       - One of a list of tokens which tell the parser what kind of
*         token this is. These ARE case sensitive.
*          . ATU - Attribute unqualified, Ie you CANNOT put anything
*                  in parentheses after it. Eg ALIGNED
*          . ATQ - Attribute qualified, Ie you CAN put somthing
*                  in parentheses after it. Eg FIXED(3) or INIT(...)
*          . FLO - A statement keyword which can influence flow of control.
*                  Eg PROC, CALL, IF
*          . BIF - A builtin function name
*          . TYF - A type function name (has args enclosed in (: and :) )
*          . CON - A condition name
*          . SOP - A statement option keyword
*                  Eg INTO, SET
*          . OPT - A word which may appear in a compiler option.
*                  Eg OPTIMIZE, MAX
*          . OPS - A word which may appear in an OPTIONS option.
*                  Eg ASSEMBLER
*          . ENV - A word which may appear in an ENVIRONMENT attribute
*                  Eg TOTAL
*          . T1  - A 'type 1' statement keyword. The type of statement
*                  which takes only options and parentheses
*                  Eg READ FILE(..) INTO(..) ;
*          . T2  - A 'type 2' statement keyword. The type of statement
*                  which takes an identifier or an expression as its first
*                  item. Eg ALLOCATE x SET(..) ;
*                  also used to encompass 'anything not a type 1'
*          . PPS - It's to do with preprocessing EXCLUSIVLY. However a lot of the preprocessor words
*                  appear in here as if they were ordinary statements. This is becuase they can be
*                  used as if they were ordinary statements in the construction of a preprocessor
*                  procedure.
*          . *   - Which tells the parser that this line is just a placeholder
*                  to allow specification of a resource id.
*
*         despite this apparent sophistication there are lots of things which
*         are recognised by the code of the program. They are in the file for
*         completeness.
*
*
*       - An auto indentation value. The value is either a signed number
*         or an '*'. '*' says that this token does not participate in auto indentation.
*
*       - A list of, comma separated LANGUAGE Level tokens for which this token is valid,
*         or an '*'. '*' says that this this line is just a placeholder
*         to allow specification of a resource id.
*         Valid values are:
*
*            . SAA
*            . SAA2
*            . OS
*
*       - An optional comment which MUST be introduced by the ';' character.
*
*---------------------------List follows----------------
*
*
*Notes:
*
*- This list was updated 3Aug93 (RH)
*- This list was updated 19Aug93 (TA)
*- This list was updated 24Aug93 (RH)
*- This list was updated 24Aug93 (TA)
*- This list was updated 25Aug93 (TA)
*- The file layout was modified to allow for Auto Indentation 22Sep93 (RH)
*- This list was updated 05Oct93 (RH)
*- This list was updated 07Oct93 (TA)
*- This list was updated 11Oct93 (RH)
*- The file layout was modified to allow for Language level support 04Apr94 (RH)
*- This list was updated 15Aug94 (RH) include OS/2 compiler options
*
*
*- This list of "tokens" was originally compiled by Peter Elderon
*
*- OS/2-only (SAA2) and MVS-only tokens are excluded from
*  the SAA1 library EXCEPT the 2 non-SAA compiler control commands,
*  PLI and PLIOPT
*
*---------------------
*SAA1 COMPILER OPTIONS
*---------------------
*
*As published in:
*      "IBM SAA AD/Cycle PL/I MVS & VM Programming Guide", R1
*
*
*OPTION                   IPF RES #
*
aggregate,ag             48705 OPT      * SAA,SAA2,OS
attributes,a,full,short  48701 OPT      * SAA,SAA2,OS
cmpat,v1,v2              48702 OPT      *          OS   
compile,c,w,e,s          48703 OPT      * SAA,SAA2,OS
control                  48704 OPT      *          OS 
*count                    *     OPT      * SAA,SAA2,OS
deck,d,nodeck,nd         48706 OPT      *          OS
default,dft,ibm,ans,ascii,ebcdic,assignable,asgn,nonassignable,nonasgn  *     OPT      * SAA,SAA2
byaddr,byvalue,nonconnected,nonconn,connected,conn,native,nonnative      *     OPT      * SAA,SAA2
descriptor,nodescriptor                                                 *     OPT      * SAA,SAA2
nodirected,directed,asm,cobol,plitdli,noinline,inline,order,reorder     *     OPT      * SAA,SAA2
linkage,optlink,system,ieee,hexadec                                     *     OPT      * SAA,SAA2
esd                      48707 OPT      *          OS
exit,noexit              *     OPT      * SAA,SAA2
flag,f,i                 48708 OPT      * SAA,SAA2,OS
gonumber,gn              48710 OPT      * SAA,SAA2,OS
gostmt,gs                48711 OPT      *          OS
graphic,gr               49712 OPT      *          OS
imprecise,imp            48713 OPT      * SAA,SAA2,OS
include,inc              48714 OPT      * SAA,SAA2,OS
ext                      *     OPT      * SAA,SAA2   
insource,is              48715 OPT      * SAA,SAA2,OS
interrupt,int            48716 OPT      * SAA,SAA2,OS
langlvl,os               48717 OPT      * SAA,SAA2,OS
sprog,nosprog            48717 OPT      * SAA,SAA2,OS    ; they need to be allowed at all language levels
saa,saa2,os2,noext       48717 OPT      * SAA,SAA2,OS    ; as they change to another language level
libs,nolibs              *     OPT      * SAA,SAA2   
limits,extname,fixeddec  *     OPT      * SAA,SAA2   
linecount,lc             48718 OPT      * SAA,SAA2,OS
list,nolist              48719 OPT      * SAA,SAA2,OS
lmessage,lmsg            48720 OPT      *          OS
smessage,smsg            48735 OPT      *          OS
macro,m,nomacro,nm       48721 OPT      * SAA,SAA2,OS
map,nomap                48722 OPT      *          OS
margini,mi               48723 OPT      * SAA,SAA2,OS
nomargini,nmi            48723 OPT      *          OS
margins,mar              48724 OPT      * SAA,SAA2,OS
mdeck,md,nomdeck,nmd     48725 OPT      * SAA,SAA2,OS
name,n                   48726 OPT      *          OS
names                    *     OPT      * SAA,SAA2
natlang,enu,jpn          *     OPT      * SAA,SAA2
nest,nonest              48727 OPT      * SAA,SAA2,OS
noaggregate,nag          48705 OPT      * SAA,SAA2,OS
noattributes,na          48701 OPT      * SAA,SAA2,OS
nocompile,nc             48703 OPT      * SAA,SAA2,OS
noesd                    48707 OPT      * SAA,SAA2,OS
nogonumber,ngn           48710 OPT      * SAA,SAA2,OS
nogostmt,ngs             48711 OPT      *          OS
nographic,ngr            48712 OPT      *          OS
noimprecise,nimp         48713 OPT      * SAA,SAA2,OS
noinclude,ninc           48714 OPT      * SAA,SAA2,OS
noinsource,nis           48715 OPT      * SAA,SAA2,OS
nointerrupt,nint         48716 OPT      * SAA,SAA2,OS
nonumber,nonum           48728 OPT      * SAA,SAA2,OS
nooffset,nof             48730 OPT      * SAA,SAA2,OS
nosequence,nseq          48733 OPT      *          OS
not                      48791 OPT      * SAA,SAA2,OS
number,num               48728 OPT      * SAA,SAA2,OS
object,obj,noobject,nobj 48729 OPT      * SAA,SAA2,OS
offset,of                48730 OPT      *          OS
optimize,opt,time,0,2    48731 OPT      * SAA,SAA2,OS
nooptimize,nopt          48731 OPT      * SAA,SAA2,OS
options,op,nooptions,nop 48732 OPT      * SAA,SAA2,OS
or                       48790 OPT      * SAA,SAA2,OS
pp,nopp                  *     OPT      * SAA,SAA2
prefix                   *     OPT      * SAA,SAA2
probe,noprobe            *     OPT      * SAA,SAA2
proceed,pro,noproceed,nopro  *     OPT      * SAA,SAA2
rules,nolaxdcl,laxdcl    *     OPT      * SAA,SAA2
nolaxif,laxif            *     OPT      * SAA,SAA2
runops,norunops          *     OPT      * SAA,SAA2
semantic,sem,nosemantic,nosem  *     OPT      * SAA,SAA2
sequence,seq             48733 OPT      *          OS
size,sz,max              48734 OPT      *          OS
snap,nosnap              *     OPT      * SAA,SAA2
source,s,nosource,ns     48736 OPT      * SAA,SAA2,OS
stmt,nostmt              48737 OPT      *          OS
storage,stg,nostorage,nstg    48738 OPT      *          OS
syntax,syn,nosyntax,nsyn 48739 OPT      * SAA,SAA2,OS
sysparm                  *     OPT      * SAA,SAA2
system,cms,cmstpl,mvs,tso,cics,ims 48740 OPT   *          OS
system,os2,ims,cms,mvs,tso,s386,s486,pentium 48740 OPT   * SAA,SAA2
terminal,term,noterminal,nterm  48741 OPT      * SAA,SAA2,OS
test,notest,all,block,none,path,stmt,sym,nosym 48742 OPT   * SAA,SAA2,OS
xinfo,def,nodef          *     OPT      * SAA,SAA2
xref,x,noxref,nx         48743 OPT      * SAA,SAA2,OS
*
*o NOTE: The following compiler options have not been
*        documented in the SAA1 LSH library...
*
*SAA2 options: default, exit, natlang, noexit,
*              norunops, nosemantic, prefix,
*              rules, runops, semantic, sysparm
*
*Previously-documented options that were undocumented in the last PG:
*              count, flow, nocount, noflow, noignore,
*
*-----------------------------------------------
*NON-SAA COD-SUPPORTED COMPILER CONTROL COMMANDS
*-----------------------------------------------
*
*Command          IPF RES #
*
*PLI              48744
*PLIOPT           48747
*
*-----------------------------
*SAA1 SOURCE LANGUAGE KEYWORDS
*-----------------------------
*
*As published in:
*      "IBM SAA AD/Cycle PL/I MVS & VM Language Reference", R1
*
*
*KEYWORD         IPFRES# TYPE AI
*
abnormal         *     ATU        *      SAA2    ; non-data attribute   -                      
addbuff          *     ENV        *           OS ; environment option          
alias            *     ATU        *      SAA2    ; non-data attribute                           
aligned          47479 ATU        *  SAA,SAA2,OS ; descriptive attribute
all              *     SOP        *           OS ; stream i/o option
allocate,alloc   47926 T2         *  SAA,SAA2,OS ; statement keyword
anycondition,anycond * CON        *      SAA2    ; condition                                    
area             47590 ATQ        *  SAA,SAA2,OS ; data attribute
area             48571 CON        *  SAA,SAA2,OS ; condition                                    
ascii            *     ENV        *           OS ; environment option          
assembler,asm    47101 OPS        *      SAA2,OS ; options option        ----                    
assignable,asgn  *     ATU        *      SAA2    ; non-data attribute                           
nonassignable,nonasgn  *  ATU     *      SAA2    ; non-data attribute                           
attach           *     FLO        *      SAA2    ; statement keyword                            
attention,attn   48572 CON        *  SAA,SAA2,OS ; condition name
automatic,auto   47903 ATU        *  SAA,SAA2,OS ; non-data attribute
backward         *     ATU        *           OS ; non-data attribute
based            47910 ATQ        *  SAA,SAA2,OS ; non-data attribute
begin            47069 FLO        3  SAA,SAA2,OS ; statement keyword
binary,bin       47515 ATQ        *  SAA,SAA2,OS ; data attribute
bit              47565 ATQ        *  SAA,SAA2,OS ; data attribute
bkwd             *     ENV        *  SAA,SAA2,OS ; environment option          
blksize          *     ENV        *           OS ; environment option          
buffered,buf     48325 ATU        *  SAA,SAA2,OS ; non-data attribute
buffers          *     ENV        *           OS ; environment option          
buffoff          *     ENV        *           OS ; environment option          
bufnd            *     ENV        *           OS ; environment option          
bufni            *     ENV        *           OS ; environment option          
bufsp            *     ENV        *           OS ; environment option          
builtin          47085 ATU        *  SAA,SAA2,OS ; non-data attribute
by               48061 SOP        *  SAA,SAA2,OS ; do statement keyword
byaddr           *     ATU        *  SAA,SAA2    ; non-data attribute                           
byaddr           *     OPS        *  SAA,SAA2    ; options option                              
byvalue          *     ATU        *  SAA,SAA2    ; non-data attribute                           
byvalue          *     OPS        *  SAA,SAA2    ; options option                              
call             48054 FLO        *  SAA,SAA2,OS ; statement keyword
cdecl16          *     OPS        *      SAA2    ; attribute keyword           
character,char   47575 ATQ        *  SAA,SAA2,OS ; data attribute
chargraphic,charg 48053 ATU       *  SAA,SAA2,OS ; non data attribute    ----                    
chargraphic,charg 48053 OPS       *  SAA,SAA2,OS ; options option        ----                    
cics             *     SOP        *  SAA,SAA2,OS ; statement option
close            48352 T1         *  SAA,SAA2,OS ; statement keyword
cobol            *     OPS        *      SAA2,OS ; options option        ----                    
cobol            *     ENV        *           OS ; environment option          
consecutive      *     ENV        *  SAA,SAA2,OS ; environment option          
column,col       *     SOP        *      SAA2    ; preprocessor statement option
complex,cplx     47515 ATQ        *  SAA,SAA2,OS ; data attribute
condition,cond   48552 ATU        *  SAA,SAA2,OS ; non-data attribute
condition,cond   *     CON        *  SAA,SAA2,OS ; non-data attribute   --                      
connected,conn   47942 ATU        *  SAA,SAA2,OS ; descriptive attribute
constant         47500 *          *  SAA,SAA2,OS ; non-data attribute   ---- not allowed in source code - used as a tag RH
controlled,ctl   47904 ATU        *  SAA,SAA2,OS ; non-data attribute
conversion,conv  48574 CON        *  SAA,SAA2,OS ; condition name/prefix
copy             48381 SOP        *  SAA,SAA2,OS ; stream i/o option
ctlasa           *     ENV        *  SAA,SAA2,OS ; environment option          
ctl360           *     ENV        *           OS ; environment option          
d,db             *     ENV        *           OS ; environment option          
data             48382 SOP        *  SAA,SAA2,OS ; stream i/o option
decimal,dec      47517 ATQ        *  SAA,SAA2,OS ; data attribute
declare,dcl      47437 T0         *  SAA,SAA2,OS ; statement keyword
default,dft      48057 T0         *  SAA,SAA2,OS ; statement keyword
define           *     T0         *      SAA2    ; statement keyword -                      
defined,def      47943 ATQ        *  SAA,SAA2,OS ; non-data attribute
delay            48058 T2         *  SAA,SAA2,OS ; statement keyword
delete           48365 T1         *  SAA,SAA2,OS ; statement keyword
descriptor       *     OPS        *      SAA2    ; attribute keyword           
detach           *     T1         *      SAA2    ; statement keyword                           
descriptors      *     SOP        *           OS ; default statement keyword
dimension,dim    47452 ATQ        *      SAA2,OS ; data attribute      ---- not allowed in source
direct           48324 ATU        *  SAA,SAA2,OS ; non-data attribute
display          48060 T2         *  SAA,SAA2,OS ; statement keyword
do               48061 T0        10  SAA,SAA2,OS ; statement keyword
downthru         48061 SOP        *      SAA2    ; do statement keyword
edit             48382 SOP        *  SAA,SAA2,OS ; stream i/o option
else             48073 T0         3  SAA,SAA2,OS ; statement keyword
end              48066 FLO      -10  SAA,SAA2,OS ; statement keyword
endfile,endf     48575 CON        *  SAA,SAA2,OS ; condition name
endpage,endp     48576 CON        *  SAA,SAA2,OS ; condition name
entry            47092 ATQ        *  SAA,SAA2,OS ; data attribute
entry            *     T0         *  SAA,SAA2,OS ; data attribute
environment,env  48326 ATQ        *  SAA,SAA2,OS ; non-data attribute
environment,env  48326 SOP        *  SAA,SAA2,OS ; statement option  
error            48577 CON        *  SAA,SAA2,OS ; condition name
event            *     SOP        *           OS ; non-data attribute
exclusive        *     ATU        *           OS ; non-data attribute          
exec             *     T0         *  SAA,SAA2,OS ; statement keyword
exit             48067 FLO        *           OS ; statement keyword
exports          *     ATQ        *      SAA2    ; package statement option
external,ext     47486 ATQ        *  SAA,SAA2,OS ; non-data attribute
f,fb,fs,fbs      *     ENV        *           OS ; environment option          
fastcall16       *     OPS        *      SAA2    ; attribute keyword           
fetch            47063 FLO        *  SAA,SAA2,OS ; statement keyword
fetchable        47101 OPS        *  SAA,SAA2    ; options option
file             48314 ATU        *  SAA,SAA2,OS ; data attribute
file             *     SOP        *  SAA,SAA2,OS ; i/o option
finish           48578 CON        *  SAA,SAA2,OS ; condition name
fixed            47515 ATQ        *  SAA,SAA2,OS ; data attribute
fixedoverflow,fofl 48575 CON      *  SAA,SAA2,OS ; condition name/prefix
float            47515 ATQ        *  SAA,SAA2,OS ; data attribute
flow             *     SOP        *           OS ; stream i/o option
forever          48061 SOP        *  SAA,SAA2,OS ; do statement keyword
format           47610 T0         *  SAA,SAA2,OS ; statement keyword
fortran          *     OPS        *      SAA2,OS ; options option        ----                    
free             48070 T2         *  SAA,SAA2,OS ; statement keyword
from             48368 SOP        *  SAA,SAA2,OS ; record i/o option
fromalien        *     OPS        *      SAA2    ; attribute keyword           
generic          47097 ATQ        *  SAA,SAA2,OS ; non-data attribute
genkey           48332 ENV        *  SAA,SAA2,OS ; environment option
get              48379 T0         *  SAA,SAA2,OS ; statement keyword
go               48072 T2         *  SAA,SAA2,OS ; statement keyword, the TO is handled by special case code
goto             48072 T2         *  SAA,SAA2,OS ; statement keyword
graphic,g        47585 ATQ        *  SAA,SAA2,OS ; data attribute
graphic          *     ENV        *  SAA,SAA2,OS ; environment option          
handle           *     ATQ        *      SAA2    ; non-data attribute                           
hexadec          *     ATU        *      SAA2    ; data attribute                               
ieee             *     ATU        *      SAA2    ; data attribute                               
if               48073 T0         3  SAA,SAA2,OS ; statement keyword
ignore           48370 SOP        *  SAA,SAA2,OS ; statement keyword
in               47912 SOP        *  SAA,SAA2,OS ; allocate/free option
indexed          *     ENV        *  SAA,SAA2,OS ; environment option          
indexarea        *     ENV        *           OS ; environment option          
initial,init     47948 ATQ        *  SAA,SAA2,OS ; non-data attribute
input            48323 ATU        *  SAA,SAA2,OS ; non-data attribute
inline           *     OPS        *      SAA2    ; options option        ----                    
inter            47101 OPS        *      SAA2,OS ; options option        ----                    
internal,int     47486 ATU        *  SAA,SAA2,OS ; non-data attribute
into             48371 SOP        *  SAA,SAA2,OS ; record i/o option
invalidop        *     CON        *      SAA2    ; condition prefix
irreducible,irred 48074 ATU       *  SAA,     OS ; non-data attribute
irreducible,irred 48074 OPS       *      SAA2    ; options keyword           
iterate          *     FLO        *      SAA2    ; statement keyword                            
key              *     CON        *  SAA,SAA2,OS ; condition
key              48372 SOP        *  SAA,SAA2,OS ; record i/o option
keyed            48327 ATU        *  SAA,SAA2,OS ; non-data attribute
keyfrom          48373 SOP        *  SAA,SAA2,OS ; record i/o option
keylength        *     ENV        *  SAA,SAA2,OS ; environment option          
keyloc           *     ENV        *  SAA,SAA2,OS ; environment option          
keyto            48379 SOP        *  SAA,SAA2,OS ; record i/o option
label            47620 ATQ        *  SAA,SAA2,OS ; data attribute
leave            48080 T2         *  SAA,SAA2,OS ; statement keyword
leave            *     ENV        *           OS ; environment option          
like             47465 ATQ        *  SAA,SAA2,OS ; non-data attribute
limited          *     ATU        *      SAA2    ; non-data attribute   -                      
line             48416 SOP        *  SAA,SAA2,OS ; stream i/o option
linkage          *     OPS        *      SAA2    ; attribute keyword           
linesize         48341 SOP        *  SAA,SAA2,OS ; open option
list             48382 SOP        *  SAA,SAA2,OS ; stream i/o option
locate           48364 T2         *  SAA,SAA2,OS ; statement keyword
loop             48061 SOP        *  SAA,SAA2,OS ; do statement keyword
m                *     ENV        *           OS ; environment option          
main             47101 OPS        *  SAA,SAA2,OS ; options option                               
name             *     SOP        *  SAA,SAA2,OS ; the 'name' part of BY NAME
margins,mar      *     SOP        *      SAA2    ; preprocessor statement option
name             *     SOP        *  SAA,SAA2,OS ; the 'name' part of BY NAME
native           *     ATU        *      SAA2    ; non-data attribute   -                      
ncp              *     ENV        *           OS ; environment option          
nochargraphic,nocharg  48053 ATU  *  SAA,SAA2,OS ; non data attribute - used to allow appearance on PROC stmt
nochargraphic,nocharg  48053 OPS  *  SAA,SAA2,OS ; options option        ----                    
noconversion,noconv    48574 CON  *  SAA,SAA2,OS ; condition prefix
nodescriptor     *     OPS        *      SAA2    ; attribute keyword           
noexecops        47101 OPS        *  SAA,SAA2,OS ; options option                               
nofixedoverflow,nofofl 48579 CON  *  SAA,SAA2,OS ; condition prefix
noinline         *     OPS        *      SAA2    ; options option        ----                    
nolock           *     SOP        *  SAA,SAA2,OS ; i/o statement option
nonconnected,nonconn * ATU        *      SAA2    ; data attribute                               
nonnative        *     ATU        *      SAA2    ; non-data attribute   -                      
nonvarying,nonvar *    ATU        *      SAA2    ; data attribute                               
nooverflow,noofl       48583 CON  *  SAA,SAA2,OS ; condition prefix
  norescan         *     ATU        *  SAA,SAA2,OS ; preprocessor attribute
  norescan         *     SOP        *  SAA,SAA2,OS ; preprocessor statement option
normal           *     ATU        *      SAA2    ; non-data attribute   -                      
normal           *     ATU        *      SAA2    ; non-data attribute   -                      
nosize                 48585 CON  *  SAA,SAA2,OS ; condition prefix
nostringrange,nostrg   48587 CON  *  SAA,SAA2,OS ; condition prefix
nostringsize,nostrz    48588 CON  *  SAA,SAA2,OS ; condition prefix
nosubscriptrange,nosubrg 48589 CON  *  SAA,SAA2,OS ; condition prefix
   note             *     *          *  SAA,SAA2,OS ; preprocessor statement keyword
nounderflow,noufl      48592 CON  *  SAA,SAA2,OS ; condition prefix
nowrite          *     ENV        *           OS ; environment option          
nozerodivide,nozdiv    48593 CON  *  SAA,SAA2,OS ; condition prefix
  noscan         *     ATU        *  SAA,SAA2,OS ; preprocessor attribute
  noscan         *     SOP        *  SAA,SAA2,OS ; preprocessor statement option
offset           47923 ATQ        *  SAA,SAA2,OS ; data attribute
on               48558 T0         *  SAA,SAA2,OS ; statement keyword
open             48341 T0         *  SAA,SAA2,OS ; statement keyword
optional         *     ATU        *      SAA2    ; non-data attribute   -                      
options          47101 ATQ        *  SAA,SAA2,OS ; non-data attribute
optlink          *     OPS        *      SAA2    ; options option        ----                    
order            47056 ATU        *  SAA,SAA2,OS ; non-data attribute                           
order            *     OPS        *      SAA2    ; options option        ----                    
ordinal          *     ATQ        *      SAA2    ; non-data attribute                           
organization     *     ENV        *      SAA2    ; environment option                           
other,otherwise  48120 T0         3  SAA,SAA2,OS ; statement keyword
other,otherwise  *     ATQ        *  SAA,SAA2,OS ; option of generic 
output           48323 ATU        *  SAA,SAA2,OS ; non-data attribute
overflow,ofl     48583 CON        *  SAA,SAA2,OS ; condition name/prefix
package          *     T0         3      SAA2    ; statement keyword                            
page             48417 SOP        *  SAA,SAA2,OS ; stream i/o option
pagesize         48435 SOP        *  SAA,SAA2,OS ; open option
pascal16         *     OPS        *      SAA2    ; attribute keyword           
password         *     ENV        *           OS ; environment option          
pending          *     CON        *           OS ; 
picture,pic      47545 ATU        *  SAA,SAA2,OS ; data attribute
pointer,ptr      47921 ATU        *  SAA,SAA2,OS ; data attribute
position,pos     47943 ATQ        *  SAA,SAA2,OS ; non-data attribute
precision,prec   *     ATQ        *      SAA2    ; non-data attribute   -                      
print            48328 ATU        *  SAA,SAA2,OS ; non-data attribute
priority         *     SOP        *           OS ;
procedure,proc   47056 T0         3  SAA,SAA2,OS ; statement keyword
put              48380 T0         *  SAA,SAA2,OS ; statement keyword
r                *     ENV        *           OS ; environment option          
range            47490 SOP        *  SAA,SAA2,OS ; default statement keyword
read             48361 T1         *  SAA,SAA2,OS ; statement keyword
real             47515 ATQ        *  SAA,SAA2,OS ; data attribute
record           48322 ATU        *  SAA,SAA2,OS ; non-data attribute
record           *     CON        *  SAA,SAA2,OS ; condition
recsize          *     ENV        *  SAA,SAA2,OS ; environment option          
recursive        47060 ATU        *  SAA,SAA2,OS ; non-data attribute - to allow it to appear on PROC stmt
reducible,red    48074 ATU        *  SAA,     OS ; non-data attribute
reducible,red    48074 OPS        *      SAA2    ; options keyword           
reentrant        47101 OPS        *  SAA,SAA2,OS ; options option                               
refer            47570 ATQ        *  SAA,SAA2,OS ; data attribute option
regional         *     ENV        *  SAA,SAA2,OS ; environment option          
relative         *     ENV        *  SAA,SAA2    ; environment option                          
release          47064 T2         *  SAA,SAA2,OS ; statement keyword
reorder          47056 ATU        *  SAA,SAA2,OS ; non-data attribute - to allow it to appear on PROC stmt
reorder          *     OPS        *      SAA2    ; options option        ----                    
repeat           48061 SOP        *  SAA,SAA2,OS ; do statement keyword
reply            48060 SOP        *  SAA,SAA2,OS ; display option
reread           *     ENV        *           OS ; environment option          
  rescan         *     ATU        *  SAA,SAA2,OS ; preprocessor attribute
  rescan         *     SOP        *  SAA,SAA2,OS ; preprocessor statement option
reserved         *     ATU        *      SAA2    ; non-data attribute                           
reserves         *     ATQ        *      SAA2    ; package statement attribute             
resignal         *     FLO        *      SAA2    ; statement keyword                            
retcode          47101 OPS        *      SAA2,OS ; options option        ----                    
return           47100 FLO        *  SAA,SAA2,OS ; statement keyword
returns          47080 ATQ        *  SAA,SAA2,OS ; data attribute
reuse            *     ENV        *           OS ; environment option          
revert           48561 T2         *  SAA,SAA2,OS ; statement keyword
rewrite          48363 T1         *  SAA,SAA2,OS ; statement keyword
scalarvarying    *     ENV        *  SAA,SAA2,OS ; environment option          
  scan           *     ATU        *  SAA,SAA2,OS ; preprocessor attribute
  scan           *     SOP        *  SAA,SAA2,OS ; preprocessor statement option
segmented        *     ATU        *      SAA2    ; non - data attribute                       
select           48120 FLO        3  SAA,SAA2,OS ; statement keyword
sequential       48324 ATU        *  SAA,SAA2,OS ; non-data attribute
set              48375 SOP        *  SAA,SAA2,OS ; allocate/locate option
signal           48562 FLO        *  SAA,SAA2,OS ; statement keyword
signed,unsigned  *     ATU        *      SAA2    ; non-data attribute                        
sis              *     ENV        *           OS ; environment option          
size             48585 CON        *  SAA,SAA2,OS ; condition name/prefix
skip             48390 SOP        *  SAA,SAA2,OS ; stream i/o option
skip             *     ENV        *           OS ; environment option          
snap             48558 SOP        *  SAA,SAA2,OS ; on statement keyword
sql              *     SOP        *  SAA,SAA2,OS ; statement option
static           47902 ATU        *  SAA,SAA2,OS ; non-data attribute
stop             48124 T1         *  SAA,SAA2,OS ; statement keyword
storage          *     CON        *      SAA2    ; condition prefix
stream           48322 ATU        *  SAA,SAA2,OS ; non-data attribute
string           48391 SOP        *  SAA,SAA2,OS ; stream i/o option
stringrange,strg 48587 CON        *  SAA,SAA2,OS ; condition name/prefix
stringsize,strz  48588 CON        *  SAA,SAA2,OS ; condition name/prefix
structure        *     ATU        *      SAA2    ; non-data attribute                        
subscriptrange,subrg 48589 CON    *  SAA,SAA2,OS ; condition name/prefix
system           48558 SOP        *  SAA,SAA2,OS ; on statement keyword
system           *     OPS        *      SAA2    ; options option        ----                    
task             *     ATU        *      SAA2,OS ; 
task             *     SOP        *      SAA2,OS ; 
then             48073 SOP        *  SAA,SAA2,OS ; if statement keyword
thread           *     SOP        *      SAA2    ; attach statement option                       
title            48343 SOP        *  SAA,SAA2,OS ; open/fetch option
to               48061 SOP        *  SAA,SAA2,OS ; do statement keyword
total       *          ENV        *  OS          ; I/O env option                   ----- special for testing
tp               *     ENV        *           OS ; environment option          
transmit         48590 CON        *  SAA,SAA2,OS ; condition name
trkofl           *     ENV        *           OS ; environment option          
tstack           *     ENV        *      SAA2    ; attach statement env option                       
type             *     ATQ        *      SAA2    ; non-data attribute                           
u                *     ENV        *           OS ; environment option          
unaligned,unal   47479 ATU        *  SAA,SAA2,OS ; descriptive attribute
unbuffered,unbuf 48325 ATU        *  SAA,SAA2,OS ; non-data attribute
undefinedfile,undf 48591 CON      *  SAA,SAA2,OS ; condition name
underflow,ufl    48592 CON        *  SAA,SAA2,OS ; condition name/prefix
union            *     ATU        *      SAA2    ; non-data attribute                          
unlock           *     T1         *           OS ; i/o statemnent
until            48061 SOP        *  SAA,SAA2,OS ; do statement keyword
update           48323 ATU        *  SAA,SAA2,OS ; non-data attribute
upthru           48061 SOP        *      SAA2    ; do statement keyword
v,vb,vs,vbs      *     ENV        *           OS ; environment option          
value            *     ATQ        *      SAA2    ; non-data attribute    ----                      
variable         47951 ATU        *  SAA,SAA2,OS ; non-data attribute
varying,var      47572 ATU        *  SAA,SAA2,OS ; data attribute
varyingz,varz *        ATU        *      SAA2    ; data attribute                               
vsam             *     ENV        *  SAA,SAA2,OS ; environment option          
wait             *     T1         *      SAA2    ; statement keyword                           
wait             *     T2         *           OS ; statement keyword                           
when             48120 T0         3  SAA,SAA2,OS ; statement keyword
when             *     ATQ        *  SAA,SAA2,OS ; option of GENERIC
while            48061 SOP        *  SAA,SAA2,OS ; do statement keyword
write            48362 T1         *  SAA,SAA2,OS ; statement keyword
zerodivide,zdiv  48593 CON        *  SAA,SAA2,OS ; condition name/prefix
*
*
*----------------
*SAA1 %STATEMENTS
*----------------
*
*As published in:
*      "IBM SAA AD/Cycle PL/I MVS & VM Language Reference", R1
*
*   % statements appear in hear just like any others and will be accepted 
*   as if they were nornal statemetns. The tokeniser recognises a leading % as 'special' 
*   and uses the preprocessor font for the keywords. Beyond that % statements get no 
*   special treatment.
*
*   A number of the keywords are commented because they reflect underlying statements already
*   supported in the list above.
*
*STATEMENT       IPF RES #
*
ACTIVATE,act      48052 T2          * SAA,SAA2,OS  ;
answer,ans        *     T2          *     SAA2     ;
DEACTIVATE,deact  48057 T2          * SAA,SAA2,OS  ;
*DO             48068 *          *  SAA,SAA2,OS ;
*END            48069 *          *  SAA,SAA2,OS ;
*GO TO          48075            *  SAA,SAA2,OS ;
*IF             48077            *  SAA,SAA2,OS ;
*INCLUDE        48076 *            *  SAA,SAA2,OS ;
LINE             *      PPS        *      SAA2    ;
NOPRINT        48085 PPS           *  SAA,SAA2,OS ;
NOTE           48078 *            *  SAA,SAA2,OS ;
*%null           48082            *  SAA,SAA2,OS ;
PAGE           48105 PPS           *  SAA,SAA2,OS ;
PRINT          48107 PPS           *  SAA,SAA2,OS ;
*PROCEDURE      48083            *  SAA,SAA2,OS ;
PROCESS        48109            *  SAA,SAA2,OS ;
SKIP           48123 PPS           *  SAA,SAA2,OS ;
*
*---------------------------
* BIF names 
*---------------------------
*
abs              47251 BIF        *  SAA,SAA2,OS ;
acos             47252 BIF        *  SAA,SAA2,OS ;
acosf            *     BIF        *      SAA2    ;
add              47253 BIF        *  SAA,SAA2,OS ;
addr             47254 BIF        *  SAA,SAA2,OS ;
all              47255 BIF        *  SAA,SAA2,OS ;
allocate,alloc   *     BIF        *      SAA2    ;
allocation,allocn 47256 BIF       *  SAA,SAA2,OS ;
any              47257 BIF        *  SAA,SAA2,OS ;
asin             47258 BIF        *  SAA,SAA2,OS ;
asinf            *     BIF        *      SAA2    ;
atan             47259 BIF        *  SAA,SAA2,OS ;
atanf            *     BIF        *      SAA2    ;
atand            47260 BIF        *  SAA,SAA2,OS ;
atanh            47261 BIF        *  SAA,SAA2,OS ;
automatic,auto   *     BIF        *      SAA2    ;
availablearea    *     BIF        *      SAA2    ;
binary,bin       47262 BIF        *  SAA,SAA2,OS ;
binaryvalue,binvalue  47417 BIF   *  SAA,SAA2,OS ;
bit              47263 BIF        *  SAA,SAA2,OS ;
bitlocation,bitloc *   BIF        *      SAA2    ;
bool             47265 BIF        *  SAA,SAA2,OS ;
ceil             47266 BIF        *  SAA,SAA2,OS ;
centerleft,center  *   BIF        *      SAA2    ;
centreleft,centre  *   BIF        *      SAA2    ;
centerright      *     BIF        *      SAA2    ;
centreright      *     BIF        *      SAA2    ;
character        *     BIF        *      SAA2    ;
char             47269 BIF        *  SAA,SAA2,OS ;
chargraphic,charg *    BIF        *      SAA2    ;
collate          *     BIF        *      SAA2    ;
comment          *     BIF        *      SAA2    ;                         
compare          *     BIF        *      SAA2    ;
compiletime      47251 BIF        *  SAA,SAA2,OS ;
completion       *     BIF        *           OS ; 
complex,cplx     47273 BIF        *  SAA,SAA2,OS ;
conjg            47274 BIF        *  SAA,SAA2,OS ;
copy             *     BIF        *      SAA2    ;
cos              47276 BIF        *  SAA,SAA2,OS ;
cosf             *     BIF        *      SAA2    ;
cosd             47277 BIF        *  SAA,SAA2,OS ;
cosh             47278 BIF        *  SAA,SAA2,OS ;
cotan            *     BIF        *      SAA2    ;
cotand           *     BIF        *      SAA2    ;
count            47281 BIF        *  SAA,SAA2,OS ;
counter          47253 BIF        *  SAA,SAA2,OS ;
currentsize      *     BIF        *      SAA2    ;
currentstorage,cstg   47230 BIF   *  SAA,SAA2,OS ;
datafield        47283 BIF        *  SAA,SAA2,OS ;
date             47284 BIF        *  SAA,SAA2,OS ;
datetime         47285 BIF        *  SAA,SAA2,OS ;
days             *     BIF        *      SAA2    ;
daystodate       *     BIF        *      SAA2    ;
daystosecs       *     BIF        *      SAA2    ;
decimal,dec      47289 BIF        *  SAA,SAA2,OS ;
dimension,dim    47290 BIF        *  SAA,SAA2,OS ;
divide           47291 BIF        *  SAA,SAA2,OS ;
edit             *     BIF        *      SAA2    ;
endfile          *     BIF        *      SAA2    ;
empty            47293 BIF        *  SAA,SAA2,OS ;
entryaddr        47418 BIF        *  SAA,SAA2,OS ;
epsilon          *     BIF        *      SAA2    ;
erf              47295 BIF        *  SAA,SAA2,OS ;
erfc             47296 BIF        *  SAA,SAA2,OS ;
exp              47297 BIF        *  SAA,SAA2,OS ;
exponent         *     BIF        *      SAA2    ;
fileopen         *     BIF        *      SAA2    ;
fixed            47300 BIF        *  SAA,SAA2,OS ;
float            47301 BIF        *  SAA,SAA2,OS ;
floor            47302 BIF        *  SAA,SAA2,OS ;
gamma            *     BIF        *      SAA2    ;
graphic          47304 BIF        *  SAA,SAA2,OS ;
handle           *     BIF        *      SAA2    ;                         
hbound           47306 BIF        *  SAA,SAA2,OS ;
hex              *     BIF        *      SAA2    ;
heximage         *     BIF        *      SAA2    ;
high             47309 BIF        *  SAA,SAA2,OS ;
huge             *     BIF        *      SAA2    ;
iand             *     BIF        *      SAA2    ;
ieor             *     BIF        *      SAA2    ;
imag             47313 BIF        *  SAA,SAA2,OS ;
inot             *     BIF        *      SAA2    ;                         
index            47315 BIF        *  SAA,SAA2,OS ;
ior              *     BIF        *      SAA2    ;
isll             *     BIF        *      SAA2    ;                         
isrl             *     BIF        *      SAA2    ;                         
item             *     BIF        *      SAA2    ;                         
itemcount        *     BIF        *      SAA2    ;                         
lbound           47317 BIF        *  SAA,SAA2,OS ;
left             *     BIF        *      SAA2    ;
length           47319 BIF        *  SAA,SAA2,OS ;
lineno           47320 BIF        *  SAA,SAA2,OS ;
location         *     BIF        *      SAA2    ;
log              47414 BIF        *  SAA,SAA2,OS ;
loggamma         *     BIF        *      SAA2    ;
log2             47321 BIF        *  SAA,SAA2,OS ;
log10            47322 BIF        *  SAA,SAA2,OS ;
low              47324 BIF        *  SAA,SAA2,OS ;
lower2           *     BIF        *      SAA2    ;
macargs          *     BIF        *      SAA2    ;                         
maccol           *     BIF        *      SAA2    ;                         
macecho          *     BIF        *      SAA2    ;                         
macindex         *     BIF        *      SAA2    ;                         
maclmar          *     BIF        *      SAA2    ;                         
macparmset       *     BIF        *      SAA2    ;                         
macrmar          *     BIF        *      SAA2    ;                         
max              47326 BIF        *  SAA,SAA2,OS ;
maxexp           *     BIF        *      SAA2    ;
maxlength        *     BIF        *      SAA2    ;
min              47329 BIF        *  SAA,SAA2,OS ;
minexp           *     BIF        *      SAA2    ;
mod              47331 BIF        *  SAA,SAA2,OS ;
mpstr            47332 BIF        *  SAA,SAA2,OS ;
multiply         47333 BIF        *  SAA,SAA2,OS ;
null             47334 BIF        *  SAA,SAA2,OS ;
offset           47335 BIF        *  SAA,SAA2,OS ;
offsetadd        *     BIF        *      SAA2    ;
offsetdiff       *     BIF        *      SAA2    ;
offsetsubtract   *     BIF        *      SAA2    ;
offsetvalue      *     BIF        *      SAA2    ;
omitted          *     BIF        *      SAA2    ;
onchar           47341 BIF        *  SAA,SAA2,OS ;
oncode           47342 BIF        *  SAA,SAA2,OS ;
oncondcond       *     BIF        *      SAA2    ;
oncondid         *     BIF        *      SAA2    ;
oncount          47343 BIF        *  SAA,SAA2,OS ;
onfile           47345 BIF        *  SAA,SAA2,OS ;
ongsource        *     BIF        *      SAA2    ;
onkey            47346 BIF        *  SAA,SAA2,OS ;
onloc            47347 BIF        *  SAA,SAA2,OS ;
onsource         47348 BIF        *  SAA,SAA2,OS ;
ordinalhigh      *     BIF        *      SAA2    ;
ordinallow       *     BIF        *      SAA2    ;
ordinalname      *     BIF        *      SAA2    ;
ordinalpred      *     BIF        *      SAA2    ;
ordinalsucc      *     BIF        *      SAA2    ;
packagename      *     BIF        *      SAA2    ;
pageno           *     BIF        *      SAA2    ;
parmset          47254 BIF        *  SAA,SAA2,OS ;
places           *     BIF        *      SAA2    ;
plidelete        *     BIF        *      SAA2    ;  -                      
plidump          47352 BIF        *  SAA,SAA2,OS ;
plifill          *     BIF        *      SAA2    ;
plifree          *     BIF        *      SAA2    ;
plimove          *     BIF        *      SAA2    ;
pliover          *     BIF        *      SAA2    ;
pliretc          47355 BIF        *  SAA,SAA2,OS ;
pliretv          47356 BIF        *  SAA,SAA2,OS ;
plisrta          47221 BIF        *  SAA,SAA2,OS ;
plisrtb          47222 BIF        *  SAA,SAA2,OS ;
plisrtc          47223 BIF        *  SAA,SAA2,OS ;
plisrtd          47224 BIF        *  SAA,SAA2,OS ;
plistsize        *     BIF        *      SAA2    ;
plitest          47357 BIF        *  SAA,SAA2,OS ;
pointer,ptr      47358 BIF        *  SAA,SAA2,OS ;
pointeradd,ptradd 47359 BIF       *  SAA,SAA2,OS ;
pointerdiff,ptrdiff *     BIF        *      SAA2    ;
pointersubtract,ptrsubtract *     BIF        *      SAA2    ;
pointervalue,ptrvalue  47362 BIF  *  SAA,SAA2,OS ;
precision,prec   47364 BIF        *  SAA,SAA2,OS ;
pred             *     BIF        *      SAA2    ;
priority         *     BIF        *           OS ;
procedurename,procname  *     BIF        *      SAA2    ;
prod             47466 BIF        *  SAA,SAA2,OS ;
quote            *     BIF        *      SAA2    ;                         
radix            *     BIF        *      SAA2    ;
raise2           *     BIF        *      SAA2    ;
random           *     BIF        *      SAA2    ;
real             47370 BIF        *  SAA,SAA2,OS ;
rem              *     BIF        *      SAA2    ;
repeat           47373 BIF        *  SAA,SAA2,OS ;
reverse          *     BIF        *      SAA2    ;
right            *     BIF        *      SAA2    ;
round            47376 BIF        *  SAA,SAA2,OS ;
samekey          47377 BIF        *  SAA,SAA2,OS ;
scale            *     BIF        *      SAA2    ;
search           *     BIF        *      SAA2    ;
searchr          *     BIF        *      SAA2    ;
secs             *     BIF        *      SAA2    ;
secstodate       *     BIF        *      SAA2    ;
secstodays       *     BIF        *      SAA2    ;
sign             47384 BIF        *  SAA,SAA2,OS ;
signed           *     BIF        *      SAA2    ;
sin              47386 BIF        *  SAA,SAA2,OS ;
sind             47387 BIF        *  SAA,SAA2,OS ;
sinf             *     BIF        *      SAA2    ;
sinh             47388 BIF        *  SAA,SAA2,OS ;
size             *     BIF        *      SAA2    ;
sourcefile       *     BIF        *      SAA2    ;
sourceline       *     BIF        *      SAA2    ;
sqrt             47390 BIF        *  SAA,SAA2,OS ;
sqrtf            *     BIF        *      SAA2    ;
status           *     BIF        *           OS ;
storage,stg      47231 BIF        *  SAA,SAA2,OS ;
string           47393 BIF        *  SAA,SAA2,OS ;
substr           47394 BIF        *  SAA,SAA2,OS ;
subtract         *     BIF        *      SAA2    ;
succ             *     BIF        *      SAA2    ;
sum              47397 BIF        *  SAA,SAA2,OS ;
sysnull          47419 BIF        *  SAA,SAA2,OS ;
sysparm          *     BIF        *      SAA2    ;                         
system           *     BIF        *      SAA2    ;                         
sysversion       *     BIF        *      SAA2    ;                         
tally            *     BIF        *      SAA2    ;
tan              47398 BIF        *  SAA,SAA2,OS ;
tand             47416 BIF        *  SAA,SAA2,OS ;
tanf             *     BIF        *      SAA2    ;
tanh             47399 BIF        *  SAA,SAA2,OS ;
threadid         *     BIF        *      SAA2    ;  -                      
time             47400 BIF        *  SAA,SAA2,OS ;
tiny             *     BIF        *      SAA2    ;
translate        47403 BIF        *  SAA,SAA2,OS ;
trim             *     BIF        *      SAA2    ;
trunc            47405 BIF        *  SAA,SAA2,OS ;
type             *     BIF        *      SAA2    ;
unsigned         *     BIF        *      SAA2    ;
unspec           47409 BIF        *  SAA,SAA2,OS ;
valid            *     BIF        *      SAA2    ;
verify           47411 BIF        *  SAA,SAA2,OS ;
verifyr          *     BIF        *      SAA2    ;
weekday          *     BIF        *      SAA2    ;
*
*---------------------------
* TYPE function names 
*---------------------------
*
bind             *     TYF        *      SAA2    ;                       
first            *     TYF        *      SAA2    ;                       
last             *     TYF        *      SAA2    ;                       
new              *     TYF        *      SAA2    ;                       
size             *     TYF        *      SAA2    ;                       
*
*
*------------------------------
*   SQL related words. 
*------------------------------
*
*
ALL              *     EXEC       *  SAA,SAA2,OS ;                            
AND              *     EXEC       *  SAA,SAA2,OS ;                          
ANY              *     EXEC       *  SAA,SAA2,OS ;                          
ASC              *     EXEC       *  SAA,SAA2,OS ;                          
BETWEEN          *     EXEC       *  SAA,SAA2,OS ;                          
BY               *     EXEC       *  SAA,SAA2,OS ;                          
CLOSE            *     EXEC       *  SAA,SAA2,OS ;                          
COMMIT           *     EXEC       *  SAA,SAA2,OS ;                          
CONTINUE         *     EXEC       *  SAA,SAA2,OS ;                          
CURRENT          *     EXEC       *  SAA,SAA2,OS ;                          
CURSOR           *     EXEC       *  SAA,SAA2,OS ;                          
DATE             *     EXEC       *  SAA,SAA2,OS ;                          
DAY              *     EXEC       *  SAA,SAA2,OS ;                          
DAYS             *     EXEC       *  SAA,SAA2,OS ;                          
DECLARE          *     EXEC       *  SAA,SAA2,OS ;                          
DELETE           *     EXEC       *  SAA,SAA2,OS ;                          
DESC             *     EXEC       *  SAA,SAA2,OS ;                          
DISTINCT         *     EXEC       *  SAA,SAA2,OS ;                          
EXISTS           *     EXEC       *  SAA,SAA2,OS ;                          
FETCH            *     EXEC       *  SAA,SAA2,OS ;                          
FOR              *     EXEC       *  SAA,SAA2,OS ;                          
FOUND            *     EXEC       *  SAA,SAA2,OS ;                          
FROM             *     EXEC       *  SAA,SAA2,OS ;                          
GO               *     EXEC       *  SAA,SAA2,OS ;                          
GOTO             *     EXEC       *  SAA,SAA2,OS ;                          
GROUP            *     EXEC       *  SAA,SAA2,OS ;                          
HAVING           *     EXEC       *  SAA,SAA2,OS ;                          
HOUR             *     EXEC       *  SAA,SAA2,OS ;                          
HOURS            *     EXEC       *  SAA,SAA2,OS ;                          
IN               *     EXEC       *  SAA,SAA2,OS ;                          
INCLUDE          *     EXEC       *  SAA,SAA2,OS ;                          
INDICATOR        *     EXEC       *  SAA,SAA2,OS ;                          
INSERT           *     EXEC       *  SAA,SAA2,OS ;                          
INTO             *     EXEC       *  SAA,SAA2,OS ;                          
IS               *     EXEC       *  SAA,SAA2,OS ;                          
ITEM             *     EXEC       *  SAA,SAA2,OS ;                          
LIKE             *     EXEC       *  SAA,SAA2,OS ;                          
MICROSECOND      *     EXEC       *  SAA,SAA2,OS ;                          
MICROSECONDS     *     EXEC       *  SAA,SAA2,OS ;                          
MINUTE           *     EXEC       *  SAA,SAA2,OS ;                          
MINUTES          *     EXEC       *  SAA,SAA2,OS ;                          
MONTH            *     EXEC       *  SAA,SAA2,OS ;                          
MONTHS           *     EXEC       *  SAA,SAA2,OS ;                          
NOT              *     EXEC       *  SAA,SAA2,OS ;                          
NULL             *     EXEC       *  SAA,SAA2,OS ;                          
OF               *     EXEC       *  SAA,SAA2,OS ;                          
OPEN             *     EXEC       *  SAA,SAA2,OS ;                          
OR               *     EXEC       *  SAA,SAA2,OS ;                          
ORDER            *     EXEC       *  SAA,SAA2,OS ;                          
ROLLBACK         *     EXEC       *  SAA,SAA2,OS ;                          
SECOND           *     EXEC       *  SAA,SAA2,OS ;                          
SECONDS          *     EXEC       *  SAA,SAA2,OS ;                          
SELECT           *     EXEC       *  SAA,SAA2,OS ;                          
SET              *     EXEC       *  SAA,SAA2,OS ;                          
SOME             *     EXEC       *  SAA,SAA2,OS ;                          
SQLCA            *     EXEC       *  SAA,SAA2,OS ;                          
SQLDA            *     EXEC       *  SAA,SAA2,OS ;                          
SQLERROR         *     EXEC       *  SAA,SAA2,OS ;                          
SQLID            *     EXEC       *  SAA,SAA2,OS ;                          
SQLWARNING       *     EXEC       *  SAA,SAA2,OS ;                          
TIME             *     EXEC       *  SAA,SAA2,OS ;                          
TIMESTAMP        *     EXEC       *  SAA,SAA2,OS ;                          
TIMEZONE         *     EXEC       *  SAA,SAA2,OS ;                          
TO               *     EXEC       *  SAA,SAA2,OS ;                          
UNION            *     EXEC       *  SAA,SAA2,OS ;                          
UPDATE           *     EXEC       *  SAA,SAA2,OS ;                          
USER             *     EXEC       *  SAA,SAA2,OS ;                          
VALUES           *     EXEC       *  SAA,SAA2,OS ;                          
WHENEVER         *     EXEC       *  SAA,SAA2,OS ;                          
WHERE            *     EXEC       *  SAA,SAA2,OS ;                          
YEAR             *     EXEC       *  SAA,SAA2,OS ;                          
YEARS            *     EXEC       *  SAA,SAA2,OS ;                          
